{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Unvired Developer Portal","text":"<p>Unvired Developer Portal</p>"},{"location":"appdev/SAP/","title":"Sample: SAP","text":""},{"location":"appdev/SAP/#introduction","title":"Introduction","text":"<p>SAP sample application fetches data from an SAP ECC system using the Unvired Platform.</p>"},{"location":"appdev/SAP/#installation","title":"Installation","text":"<p>To install the sample application in your preferred platform, refer Running Github samples docs.</p>"},{"location":"appdev/SAP/#app-walkthrough","title":"App Walkthrough","text":""},{"location":"appdev/SAP/#login-parameters","title":"Login Parameters","text":"<p>Please contact Unvired (https://unvired.com/contact/) for trial credentials.</p>"},{"location":"appdev/SAP/#addcreate-person","title":"Add/Create Person","text":"<p>To create person entities and enter entities-</p> <ol> <li>Press on the \u2018<code>+</code>\u2019 icon</li> <li>Enter First Name, Last Name, Gender, Profession, D.O.B, weight (in kg),** height (in cm)** in the Add/Create Person screen</li> <li>Click on <code>ADD EMAIL</code> button to enter the email address of the person entity.</li> <li>Select on the <code>Create</code> button to create the contact entity in the SAP.</li> <li>A unique ID (person number) associated with the person entity will be displayed on the subsequent pop-up box.</li> </ol> <p>Tip</p> <p>Last Name and Gender are mandatory fields to create a person entity.</p>"},{"location":"appdev/SAP/#view-contact","title":"View Contact","text":"<p>The newly created person entity will be available on the primary dashboard. Selecting the person in the primary dashboard will display the person details screen with all the information. To find a person from the SAP -  1. Press on the \u201c<code>\u22ee</code>\u201d on the top right corner. 1. Enter person number of the person entity being searched for 1. Press the search button to download contact. 1. On navigation back to the home page, handled alert with <code>yes</code> or <code>no</code> options appear. Pressing <code>yes</code> will save data to the database and navigate to the homepage or just navigate to the homepage.</p> <p>Note</p> <p>The person should already be created in the app to access/view it.</p>"},{"location":"appdev/android/","title":"Android","text":""},{"location":"appdev/android/#setup","title":"Setup","text":"<p>Unvired has an Android SDK to build Android Apps. The SDK is an Android Archive Library (aar) which can be used in Android Studio.</p>"},{"location":"appdev/android/#install","title":"Install","text":"<p>Install Android Studio - Download the latest version of Android Studio from https://developer.android.com/studio - Install Android Studio, start it and create a new work-space. Follow Android Studio guides to do this.</p>"},{"location":"appdev/android/#steps","title":"Steps","text":"<ol> <li>Create New Project</li> <li>Initial Setup for Unvired Android SDK</li> <li>Authentication and Login</li> <li>Using Process Agent (PA)</li> </ol>"},{"location":"appdev/android/#develop","title":"Develop","text":""},{"location":"appdev/android/#sample-project-details","title":"Sample Project Details","text":"<p>In this guide a sample project is used to explain the end to end application creation. The sample project details are as follows: - Sample application is based on REST API. - Uses Process Agent (PA) - Application does give Weather information for the given city</p>"},{"location":"appdev/android/#create-new-project","title":"Create New Project","text":"<p>Create a new Android Application project in Android Studio. - Create Android Application using the Android Studio standard project creation wizard - In the Android Studio main menu select: File -&gt; New -&gt; New Project - Enter Application Name(Eg: <code>rest-sample-android</code>) and Package Name (Eg: <code>com.unvired.restsample</code>) - Choose Minimum SDK (Eg: 19) - Choose Empty Activity, Enter Activity Name (Eg: <code>StartupActivity</code>), click Finish.</p> <p>Once the new Android Project is created move to Initial Setup.</p>"},{"location":"appdev/android/#initial-setup-for-unvired-android-sdk","title":"Initial Setup for Unvired Android SDK","text":"<p>Initial Setup to build an Android Application using Unvired Android SDK. - Create sub package be under main package (Eg: <code>com.unvired.restsample</code>) - Copy generated Business Entity (BE) to the folder - Create a new resource directory <code>raw</code> (i.e.res/raw) - Copy metadata.xml to <code>raw</code> directory - Add following dependencies in application gradle</p> <p><code>implementation 'com.android.support:cardview-v7:@VERSION@' implementation 'com.android.support:recyclerview-v7:@VERSION@' implementation 'com.android.support:appcompat-v7:@VERSION@' implementation 'com.android.support:design:@VERSION@' implementation 'com.google.android.gms:play-services-location:@VERSION@' implementation 'com.google.firebase:firebase-messaging:@VERSION@' implementation 'com.google.firebase:firebase-core:@VERSION@' implementation 'net.zetetic:android-database-sqlcipher:4.0.1@aar'</code></p> <p>For @VERSION@ always use specified or latest version</p> <ul> <li>Sync project with gradle files.</li> <li>Now project is ready with all basic requirements. Now move on to Authentication and Login phase</li> </ul>"},{"location":"appdev/android/#authentication-and-login","title":"Authentication and Login","text":"<p>Open \"Launch Activity\" of the project (i.e. <code>StartupActivity</code>) Make sure <code>StartupActivity extends AppCompatActivity</code> implements <code>LoginListener</code> (from Unvired Android SDK <code>com.unvired.login.LoginListener</code>) Unvired Android SDK requires Storage and Phone State Permission, hence request and obtain at the beginning Once the Permissions are obtained initialize <code>LoginParameters</code>.</p> <p><code>String metaData; try {         InputStream inputStream = this.getResources().openRawResource(R.raw.metadata);         metaData = FrameworkHelper.getString(inputStream);     } catch (Exception e) {         /* Handle Exception*/ } LoginParameters.setUrl(URL); (Note: UMP URL where the application is deployed) LoginParameters.setAppTitle(getResources().getText(R.string.app_name).toString()); LoginParameters.setMetaData(metaData); LoginParameters.setLoginListener(this); LoginParameters.setDemoModeRequired(false); LoginParameters.setContext(context); LoginParameters.showCompanyField(true); LoginParameters.setAppName(Constants.APPLICATION_NAME); (Note: App name must be same as mentioned in metadata.xml) LoginParameters.setLoginTypes(new LoginParameters.LOGIN_TYPE[]{LOGIN_TYPE.UNVIRED_ID});</code></p> <p>Set App version <code>ApplicationVersion.setBUILD_NUMBER(\"1\")</code> Invoke <code>AuthenticationService</code></p> <p><code>try {   AuthenticationService.login(this.getApplicationContext()); } catch (Exception e) {   Logger.e(e.getMessage()); }</code></p> <ul> <li>This launches Login screen where user has to enter URL, Company Name, User Name and Password. Authentication callback will be given to the calling Activity (i.e. StartupActivity)</li> <li>Authentication callback will be given to the calling Activity (i.e. StartupActivity)</li> </ul> <p><code>@Override public void authenticateAndActivationSuccessful() { }</code></p> <ul> <li>Navigate to HomeScreen upon successful Authentication and for Subsequent Logins</li> </ul> <p><code>private void navigateToHomeActivity() {   startActivity(new Intent(this, HomeActivity.class)); }</code></p> <p>Now the Project is ready for further application development.</p>"},{"location":"appdev/android/#using-process-agents-pa","title":"Using Process Agents (PA)","text":"<p>Process Agent (PA) is used to call/execute different network APIs/Calls. Here we are using PA to call REST API. - Develop screen to get input for PA. - Here it will be a BE named <code>WEATHER_HEADER</code>, with value \"CITY\". - Use instance of <code>com.unvired.sync.SyncEngine</code> to call REST API, pass <code>WEATHER_HEADER</code> as <code>IDataStructure</code> parameter value - Use instance of <code>com.unvired.sync.out.ISyncAppCallback</code> to receive callback. - The result will be in the form of <code>com.unvired.sync.response.ISyncResponse</code> - Process <code>ISyncResponse</code> to get BE <code>WEATHER_HEADER</code> with all available information as values - Populate the values on screen</p> <p>For further detail please refer the sample application available in github (https://github.com/unvired/rest-sample-android).</p>"},{"location":"appdev/concepts/","title":"Concepts","text":""},{"location":"appdev/concepts/#mobile-apps","title":"Mobile Apps","text":"<p>Unvired DEP can be used to mobile enable any business scenario from any enterprise system(s) on Android, iOS and Windows devices. Mobile apps based on DEP can work both online and offline.</p> <p>Unvired Mobile SDK allows developers to build native mobile apps quickly taking care of database, business objects for data access and data exchange automatically using APIs.</p>"},{"location":"appdev/concepts/#hybrid-mobile-apps","title":"Hybrid Mobile Apps","text":"<p>Build Once Run Anywhere with Unvired DEP for Hybrid Mobile Apps to mobile enable any business scenario from any enterprise system(s) on mobile devices. Unvired hybrid apps is based on Apache Cordova (PhoneGap). Mobile apps can work both online and offline.</p> <p>Unvired Hybrid SDK allows developers to build mobile apps quickly taking care of database, business objects for data access and data exchange automatically using APIs.</p>"},{"location":"appdev/concepts/#web-apps","title":"Web Apps","text":"<p>Build responsive web apps with Unvired DEP. Enable business data and process access on web browsers using the DEP enabled business APIs.</p> <p>Unvired Web SDK provides easy API access to manage data objects and data exchange enabling faster app development.</p>"},{"location":"appdev/concepts/#backend-as-a-service","title":"Backend as a Service","text":"<p>Enable data access from one or more enterprise systems easily through RESTful APIs using DEP easily. Use the standard API and data formats of DEP for data exchange in a consistent way across many systems or for any scenario requiring API consumption.</p>"},{"location":"appdev/concepts/#app-configuration-administration","title":"App Configuration &amp; Administration","text":"<p>For Unvired Application configuration and administration refer to the guide</p>"},{"location":"appdev/database/","title":"Sample: Database","text":""},{"location":"appdev/database/#introduction","title":"Introduction","text":"<p>Database Sample application fetches and creates a record in the database.</p>"},{"location":"appdev/database/#installation","title":"Installation","text":"<p>To install the sample application in your preferred platform, refer Running Github samples docs.</p>"},{"location":"appdev/database/#app-walkthrough","title":"App Walkthrough","text":""},{"location":"appdev/database/#login-parameters","title":"Login Parameters","text":"<p>Please contact Unvired (https://unvired.com/contact/) for trial credentials to access the sample app.</p>"},{"location":"appdev/database/#addcreate-contact","title":"Add/Create Contact","text":"<p>To enter contact details and create entities- 1. Press on the '<code>+</code>' icon 1. Enter Name, Phone, and email details in the Add/Create screen 1. Select on the <code>Create</code> button to create the contact entity in the database.</p>"},{"location":"appdev/database/#view-contact","title":"View contact","text":"<p>The new contact entity will be available on the primary dashboard. To get contacts -  - Press on the '<code>\u22ee</code>' (more) on the top right corner. - Enter Contact Id and name of the contact being searched for - Press the <code>search</code> button to download contact - On navigation back to the home page, handled alert with <code>yes</code> or <code>no</code> options appears. Pressing <code>yes</code> will save data to the database and navigate to the homepage or just navigate to the homepage.</p> <p>Note</p> <p>The contact ID will be automatically generated after contact is created.</p>"},{"location":"appdev/github/","title":"Running GitHub Samples","text":""},{"location":"appdev/github/#introduction","title":"Introduction","text":"<p>A detailed description to install Unvired sample applications in respective platforms. All the sample application projects can be found in Unvired\u2019s Github repository.</p>"},{"location":"appdev/github/#github-sample","title":"Github Sample","text":""},{"location":"appdev/github/#android","title":"Android","text":""},{"location":"appdev/github/#prerequisites","title":"Prerequisites","text":"<ol> <li>Android running SDK version 21 (Lollipop)</li> <li>The sample app was built on Android studio v3.1.4. To download the latest version of Android studio, visit https://developer.android.com/studio</li> </ol>"},{"location":"appdev/github/#clone-the-project","title":"Clone the project","text":"<p>In the Android sample application Github repository, select <code>Download or Clone</code> -&gt; <code>Download ZIP</code> to download the sample app and run it in Android Studio.</p>"},{"location":"appdev/github/#installation","title":"Installation","text":"<p>Unpack and run the app. Please contact Unvired for trial credentials.</p>"},{"location":"appdev/github/#ios","title":"iOS","text":""},{"location":"appdev/github/#prerequisites_1","title":"Prerequisites","text":"<ol> <li>Mac running version 10.14 (macOS Mojave) or higher.</li> <li>Xcode 11.0: You can get the latest Xcode from https://developer.apple.com/xcode</li> <li>Cocoapods: This project is dependent on the UnviredSDK library which is distributed as a cocoapod. If you don't have a cocoapod setup, you can set it up from https://cocoapods.org</li> </ol>"},{"location":"appdev/github/#clone-the-project_1","title":"Clone the Project","text":"<p>In the iOS sample application Github repository, select <code>Download or Clone</code> -&gt; <code>Download ZIP</code> to download the sample app and run it in XCode.</p>"},{"location":"appdev/github/#installation_1","title":"Installation","text":"<ol> <li>After successfully cloning the application on the desktop, open XCode. Navigate to the project folder and install UnviredSDK as a pod.</li> <li>Set up the Unvired Rest Sample Project with all the required dependencies.</li> </ol> <pre><code>$ cd sap-sample-ios\n$ pod repo update\n$ pod install\n</code></pre> <ol> <li>Compile and run the app, Please contact Unvired for trial credentials.</li> </ol>"},{"location":"appdev/github/#windows-uwp","title":"Windows UWP","text":""},{"location":"appdev/github/#prerequisite","title":"Prerequisite","text":"<ol> <li>Universal Windows Platform development kit. Download the latest version here.</li> <li>Minimal installed window OS version is Windows 10, version 1803(10.0; Build17134).</li> <li>The sample app was built on Visual Studio 2019. To download the latest version of Android studio, visit https://visualstudio.microsoft.com/vs/</li> </ol>"},{"location":"appdev/github/#clone-the-project_2","title":"Clone the Project","text":"<p>In the Windows sample application Github repository, select <code>Download or Clone</code> -&gt; <code>Download ZIP</code> to download the sample app and run it in Visual Studio 2019.</p>"},{"location":"appdev/github/#installation_2","title":"Installation","text":"<p>Compile and run the app, Please contact Unvired to access the trial credentials for the sample app.</p>"},{"location":"appdev/github/#ionic","title":"Ionic","text":""},{"location":"appdev/github/#prerequisite_1","title":"Prerequisite","text":"<ol> <li>NodeJS v12.16.2: Download the latest version of node.js from https://nodejs.org/en/</li> <li>Minimal platform version of either Mac running version 10.15 (macOS Catalina) or Windows version 10.</li> <li>Node Package Manager 6.14.4. Run the following code on the terminal after Node.js setup to install the latest version of NPM on your system.</li> </ol> <pre><code>npm -v\n</code></pre>"},{"location":"appdev/github/#clone-the-project_3","title":"Clone the Project","text":"<ol> <li>In the Ionic sample application Github repository, select <code>Download or Clone</code> -&gt; <code>Download ZIP</code> to download the sample app and run it in IDE.</li> <li>If you know the sample app address, i.e., Sample app Github URL, use the following command in terminal to clone the app (in this document, we take sample database application as an example) -</li> </ol> <pre><code>$ git clone https://github.com/unvired/db-sample-ionic.git\n</code></pre>"},{"location":"appdev/github/#installation_3","title":"Installation","text":"<ol> <li>Install the following Node modules to successfully run the app-</li> <li>To add platforms, build and run it.</li> </ol> <pre><code>$ ionic cordova platform add Browser/ android/ ios\n$ ionic cordova build browser/ android\n$ ionic cordova run browser/ android\n</code></pre> <ul> <li>To install Unvired SDK</li> </ul> <pre><code>$ ionic cordova plugin add https://github.com/unvired/cordova-plugin-unvired-sdk\n$ npm install @ionic-native/unvired-cordova-sdk\n</code></pre> <ol> <li>In the Terminal app, navigate to the project folder using cd command. Use the following code to install the app-</li> </ol> <pre><code>$npm install\n</code></pre> <ul> <li>To run the sample app in iOS platform</li> </ul> <pre><code>$ ionic cordova prepare ios\n</code></pre> <ul> <li>Now use the <code>/Users/local/db-sample-ionic/platforms/ios/MyApp.xcworkspace</code> folder in xcode and run.</li> </ul> <p>This will set up Unvired DB Sample App with all the required dependencies.</p> <ol> <li>Compile and run the app. Please contact Unvired for trial credentials.</li> </ol> <p>Note: For Error: Cannot read property 'replace' of undefined, use the following workaround:  <code>C#  $ cd platforms/ios/cordova/node_modules/ $ sudo npm install ios-sim@latest</code></p> <p>Note</p> <p>More info can be found here: https://forum.ionicframework.com/t/error-cannot-read-property-replace-of-undefined/94532/12</p>"},{"location":"appdev/hybrid/","title":"Hybrid","text":""},{"location":"appdev/hybrid/#setup","title":"Setup","text":"<p>Unvired leverages Ionic &amp; Cordova technology to build cross-platform apps. Unvired has a published Cordova plugin which can be used to build cross-platform apps. </p> <p>There is also an Unvired Cordova SDK Ionic Plugin which the developers can use to build apps for iOS, Android, Windows &amp; Browser platforms.</p>"},{"location":"appdev/hybrid/#install","title":"Install","text":"<p>Install Visual Studio Code, Android Studio and Xcode - Download the latest version of Visual Studio code from https://code.visualstudio.com/ - Download the latest version of Android Studio from https://developer.android.com/studio - Download the latest version of XCode from https://developer.apple.com/xcode/</p>"},{"location":"appdev/hybrid/#develop","title":"Develop","text":""},{"location":"appdev/hybrid/#sample-project-details","title":"Sample Project Details","text":"<ul> <li>Create a New Project</li> <li>Initial Setup for Unvired Cordova SDK</li> <li>Authentication and Login</li> <li>Using Process Agent (PA)</li> </ul>"},{"location":"appdev/hybrid/#create-new-project","title":"Create New Project","text":"<p>Create a new Ionic Application project.</p> <ul> <li>Open Terminal/Command prompt.</li> <li>Install Ionic and Cordova CLI using the command in terminal <code>$npm install -g ionic cordova</code></li> <li>Create your Ionic application using <code>$ionic start appName blank --type=ionic-angular</code> </li> <li>To run and test the command enter      <code>$cd appName</code> <code>$ionic serve</code></li> <li>Open created project in Visual studio code. <p>Note:  Install LTS version of Node</p> </li> </ul>"},{"location":"appdev/hybrid/#initial-setup-for-unvired-ionic-sdk","title":"Initial Setup for Unvired Ionic SDK","text":"<p>Initial Setup to build an Ionic Application using the Unvired Ionic SDK.</p> <ul> <li> <p>Add the following code in index.html file:     ```HTML  </p> <p>    ```</p> </li> <li> <p>Create a new resource folder <code>js</code> in assets and add the above-mentioned files in it.</p> </li> <li>Copy <code>metadata.json</code> to the assets folder.</li> <li>Create new folders constants and models.</li> <li>Copy <code>appConstants.ts</code> to the constants folder and add generated BE headers to the models folder.</li> </ul> <p>If required, refer to further instructions on Unvired Cordova SDK</p>"},{"location":"appdev/hybrid/#authentication-and-login","title":"Authentication and Login","text":"<ul> <li>Initialize the SDK and activate the app before interacting with the Unvired Digital Enterprise Platform.</li> <li>Navigate to the login screen &amp; accept username/password from the user</li> <li>Set the username &amp; password to <code>loginParameters</code> object and call <code>authenticateAndActivate</code>.</li> <li>For reference,</li> </ul> <pre><code>// SDK Initialization \nlet loginParameters = new LoginParameters() \nloginParameters.appName = 'UNVIRED_DIGITAL_FORMS' loginParameters.metadataPath = '../assets/metadata.json' \nlet loginResult: LoginResult \ntry { \nloginResult = await this.unviredSDK.login(loginParameters) \n} \ncatch (error) { \nthis.unviredSDK.logError(\"AppComponent\", \"Initialize\", \"Error during login: \" + error) \n} \nswitch (loginResult.type) { case LoginListenerType.auth_activation_required: \n// App is not activated. i.e, User is using the app for the very first time. \ntry { \n// Execute this block of code in a login screen. \nlet loginParameters = new \nLoginParameters(); \nloginParameters.url = '&lt;UMP_URL&gt;'; \nloginParameters.company = '&lt;Company&gt;'; \nloginParameters.username = '&lt;Username&gt;'; \nloginParameters.password = '&lt;Password&gt;'; \nloginParameters.loginType = LoginType.unvired; \nlet authenticateActivateResult: AuthenticateActivateResult = await this.unviredSDK.authenticateAndActivate(loginParameters); \nif (authenticateActivateResult.type === AuthenticateAndActivateResultType.auth_activation_success) { \n// App is fully setup. Navigate to your app's home screen. \n} else if (authenticateActivateResult.type === AuthenticateAndActivateResultType.auth_activation_error) { console.log(\"Error during login: \" + authenticateActivateResult.error) \n} catch (error) { \nthis.unviredSDK.logError('LoginPage', 'auth_activation_required', 'ERROR: ' + error); \n} \nbreak; \ncase LoginListenerType.app_requires_login: \n// App is already activated. But, the user needs to enter credentials because the setting LOCAL_PASSWORD is set to YES in Unvired Admin Cockpit. \n// To set LOCAL_PASSWORD property for your app, contact your administrator. try { \n// Execute this block of code in a login screen. \nlet loginParameters = new \nLoginParameters() \nloginParameters.username = '&lt;Username&gt;'; \nloginParameters.password = '&lt;Password&gt;'; \nlet authenticateLocalResult: AuthenticateLocalResult = await this.unviredSDK.authenticateLocal(loginParameters); \nif (authenticateLocalResult.type === AuthenticateLocalResultType.login_success) { \n// App is fully setup. Navigate to your app's home screen. \n} else if (authenticateLocalResult.type === AuthenticateLocalResultType.login_error) { \nconsole.log(\"Error during local login: \" + authenticateActivateResult.error) \n} catch (error) { \nthis.unviredSDK.logError('LoginPage', 'app_requires_login', 'ERROR: ' + error); } \nbreak; \ncase login_success: \n// The setting LOCAL_PASSWORD is set to false. \n// App is fully initialized. Users can interact with the UMP \n// Navigate to Home screen \nbreak; \n}\n</code></pre>"},{"location":"appdev/hybrid/#using-process-agents","title":"Using Process Agents","text":"<p>Process Agent (PA) is used to call/execute different network APIs/Calls. Here we are using PA to call REST API.</p> <ul> <li>Develop screen to get input for PA.</li> <li>Here it will be a BE named WEATHER_HEADER, with value \"<code>CITY</code>\"</li> <li>Use the instance <code>unviredSDK.SyncForeground</code> to call REST API, pass <code>WEATHER_HEADER</code></li> </ul> <pre><code>let result = await this.unviredSDK.syncForeground(RequestType.QUERY, null, {\"CUSTOMER_HEADER\": {\"field1\" : \"value1\", \"field2\" : \"value2\"}}, 'UNVIRED_DIGITAL_FORMS_PA_MOBILE_GET_USERS', true)\n</code></pre> <ul> <li>Use the instance <code>SyncResult</code> to receive callback.</li> <li>The result will be in the form of Process <code>SyncResult</code> to get BE <code>WEATHER_HEADER</code> with all available information as values.</li> <li>Populate the values on the screen.</li> </ul> <p>For further detail please refer to the sample application available in Github (https://github.com/unvired/rest-sample-ionic).</p>"},{"location":"appdev/intro/","title":"Introduction","text":""},{"location":"appdev/intro/#overview","title":"Overview","text":"<p>Unvired Digital Enterprise Platform (UDEP) is a platform for mobile apps, hybrid apps, web apps and enterprise integration. DEP can either be used in its totality as a multi-utilitarian platform or as a specific use case platform.</p> <p>The Digital Enterprise Platform helps connect business processes and data between two or more end systems / devices.</p>"},{"location":"appdev/ios/","title":"iOS","text":""},{"location":"appdev/ios/#setup","title":"Setup","text":"<p>Unvired has an iOS SDK to build iOS Apps. The SDK is an iOS Static Library (.a) which can be used in Xcode.</p>"},{"location":"appdev/ios/#install","title":"Install","text":"<p>Install Xcode - Download the latest version of Xcode from https://itunes.apple.com/in/app/xcode/id497799835?mt=12.</p>"},{"location":"appdev/ios/#steps","title":"Steps","text":"<ol> <li>Create New Project</li> <li>Initial Setup for Unvired iOS SDK</li> <li>Authentication and Login</li> <li>Using Process Agent (PA)</li> </ol>"},{"location":"appdev/ios/#sample-project-details","title":"Sample Project Details","text":"<p>In this guide a sample project is used to explain the end to end application creation. The sample project details are as follows: - Sample application is based on REST API. - Uses Process Agent (PA) - Application does give Weather information for the given city</p>"},{"location":"appdev/ios/#create-new-project","title":"Create New Project","text":"<p>Create New iOS Application Project in XCode. - Open Xcode. - Choose File &gt; New &gt; Project, or click <code>Create a new Xcode project</code> in the Welcome to Xcode window. - Select Single View Application template from the list of templates, and click <code>Next</code>. - In the dialog that appears, fill in the Product Name and Company Identifier text fields, from the Language pop-menu choose the programming language Swift click <code>Next</code>. - Specify a location for your project and click Create.</p> <p>Once the new iOS Project is created move to Initial Setup.</p>"},{"location":"appdev/ios/#initial-setup-for-unvired-ios-sdk","title":"Initial Setup for Unvired iOS SDK","text":"<p>Initial Setup to build an iOS Application using Unvired iOS SDK.</p> <ul> <li>Install CocoaPods (if not already installed) by executing <code>$ sudo gem install cocoapods</code> in the terminal.</li> <li>After you install cocoapods, make sure you set it up by executing <code>$ pod setup</code> in terminal.</li> <li>Open a terminal window, do a cd into your project directory.</li> <li>Create a Podfile. This can be done by running <code>$ pod init</code>.</li> <li>Open your Podfile.</li> <li>Add pod 'UnviredSDK' on a single line inside target block.</li> <li>Save Podfile.</li> <li>Run <code>$ pod install</code>.</li> <li>Open your project's.xcworkspace that got created during this process.</li> <li>Create subfolder BE under main package (Eg: <code>$Rest-Sample-ios</code>)</li> <li>Copy generated Business Entity (BE) to the subfolder</li> <li>Copy <code>metadata.xml</code></li> </ul> <p>Now the project is ready with all the basic requirements. Now move on to the Authentication and Login phase.</p>"},{"location":"appdev/ios/#authentication-and-login","title":"Authentication and Login","text":"<p>Here we invoke Authentication and Login procedure which is in Unvired iOS SDK. - Open AppDelegate of the project. - Conform to LoginActivityListener protocol (from Unvired iOS SDK). - Initialize LoginParameters inside <code>application(_:didFinishlaunchingWithOptions:)</code> block</p> <p><code>// Set all the Required parameters in LoginParameters. let loginParameters: LoginParameters = LoginParameters.shared() loginParameters.applicationWindow = self.window loginParameters.url = \"https://sandbox.unvired.io/UMP/\" loginParameters.applicationTitle = NSLocalizedString(\"Unvired-REST-Sample\", comment: \"\") loginParameters.applicationLogoForiPhone = nil loginParameters.redirectURL = \"http://www.unvired.com\" loginParameters.loginActivityListener = self loginParameters.loginButtonColor = UIColor.white loginParameters.supportedLoginTypes = [ LoginType().rawValue, LoginType.ADS.rawValue, LoginType.SAP.rawValue] loginParameters.hideGetMessageStatusInformation = true loginParameters.hideMessageProcessingStatusInformation = true loginParameters.allowServerLookup = true // Call the Unvired Login API AuthenticationService.login()</code></p> <ul> <li>This launches Login screen where the user has to enter URL, Company Name, User Name, and Password.</li> <li>Authentication callback will be given to <code>LoginActivityListener</code> delegate method</li> </ul> <p><code>func authenticateAndActivationSuccessful() { }</code></p> <ul> <li>Navigate to HomeScreen upon successful Authentication and for Subsequent Login.</li> </ul> <p>Now the Project is ready for further application development.</p>"},{"location":"appdev/ios/#using-process-agents","title":"Using Process Agents","text":"<p>Process Agent (PA) is used to call/execute different network APIs/Calls. Here we are using PA to call REST API.</p> <ul> <li>Develop a screen to get input for PA.</li> <li>Here it will be a Business Entity (BE) named <code>WEATHER_HEADER</code>, with value <code>CITY</code>.</li> <li>Use an instance of SyncEngine to call REST API, pass <code>WEATHER_HEADER</code> as IDataStructure parameter value</li> <li>The result will be in the form of SyncResponse.</li> <li>Process SyncResponse to get BE <code>WEATHER_HEADER</code> with all available information as values.</li> <li>Populate the values on the screen.</li> </ul> <p>For further detail please refer to the sample application available in Github ( https://github.com/unvired/rest-sample-ios.git).</p>"},{"location":"appdev/processagent/","title":"Process Agents","text":""},{"location":"appdev/processagent/#overview","title":"Overview","text":"<p>Modules built based on Unvired DEP are called Unvired Applications. Unvired Applications have the following components:</p> <p>Process Agent:</p> <ul> <li>Component that plays the central role in data exchange across multiple enterprise systems, mobile apps, etc.</li> <li>Built using the tool Unvired Designer (Eclipse Plugin).</li> <li>Mainly contains the data or business objects are modeled based on enterprise system interfaces and the functions that call the backend interfaces and create the data objects.</li> <li>Data exchange can be either in XML or JSON.</li> <li>Process agent code can be either in Java or JavaScript.</li> <li>Client Apps:</li> <li>Apps built using one the Unvired SDKs \u2013 Mobile, Hybrid or Web.</li> <li>REST APIs:<ul> <li>DEP APIs that expose the Process Agent functions as RESTful APIs.</li> </ul> </li> </ul>"},{"location":"appdev/processagent/#concepts","title":"Concepts","text":"<p>Concepts required to understand and build Unvired apps are as follows.</p>"},{"location":"appdev/processagent/#logical-system","title":"Logical System","text":"<p>Any enterprise or backend system with which data exchange is required. Unvired DEP supports the following types of systems and protocols for data exchange: - REST APIs \u2013 Any system that has REST APIs with basic and custom authentication - SOAP APIs \u2013 Any system that has SOAP APIs with basic and SOAP header authentication - SAP RFCs / BAPIs \u2013 SAP ERP, CRM and other SAP systems with RFC and BAP calls - OData Services \u2013 SAP Gateway, Microsoft and other systems that support OData for REST APIs - Databases \u2013 Databases like MS SQL, Oracle, MySQL, SAP HANA, etc. for database tables and Stored Procedures access - Salesforce.com APIs \u2013 Custom integration with Salesforce APIs for easy development - ServiceNow APIs - Custom integration with ServiceNow APIs for easy development - Microsoft Active Directory \u2013 MS AD integration for authentication - LDAP \u2013 LDAP integration for authentication - FTP Servers \u2013 File access from FTP servers</p>"},{"location":"appdev/processagent/#backend-interface","title":"Backend Interface","text":"<p>Interfaces exposed by the Logical System for data exchange. Example: REST APIs, SAP RFCs, Database Stored Procedures, etc.</p>"},{"location":"appdev/processagent/#business-entities","title":"Business Entities","text":"<ul> <li>Business Entities are data objects \u2013 standard data exchange format in Unvired DEP between end points.</li> <li>Business Entities are modeled using the Unvired Designer.</li> <li>Business Entities have the following structure:</li> <li>Name: Every business entity has a name</li> <li>Header: There is a mandatory structure called header in every business entity. The header structure can have any name and there can be only one header structure in a business entity. Header contains field name-value pairs.</li> <li>Item: Item is an optional structure in a business entity. Items are used to hold additional but related data to the header. There can be different types of items in a business entity. Each item type has a unique name and can have multiple such items. Each item contains field name-value pairs.</li> <li>JSON and XML of a sample Business Entity are shown below.</li> </ul> JSON XML {  \"po\": [    {      \"a\": \"A\",      \"poHeader\": {        \"poNo\": \"4500031157\",        \"vendor\": \"ABC Enterprise, NY\",        \"poDate\": \"15 aug 16\",        \"poValue\": \"200 USD\"      },      \"poItem \": [        {          \"poNo\": \"4500031157\",          \"itemNo\": \"1\",          \"material\": \"Fountain Pen\",          \"quantity\": \"2 PC\",          \"price\": \"50 USD\"        },        {          \"poNo\": \"4500031157\",          \"itemNo\": \"2\",          \"material\": \"Writing Pad\",          \"quantity\": \"4 PC\",          \"price\": \"25 USD\"        }      ]    }  ]} 4500031157 ABC Enterprise, NY 15 aug 16 200 USD 4500041648 1 Fountain Pen 2 PC 50 USD 4500041648 2 Writing Pad 4 PC 25 USD"},{"location":"appdev/processagent/#function","title":"Function","text":"<p>A function is an API that has the business logic. A function facilitates the data exchange between 2 end points. A function can call the APIs from to the required logical systems, work on the data and create the required data objects (business entities) for the end point.Function</p> <p>A function in Unvired DEP can be called in 2 ways: - Using Unvired SDK - (Mobile, Hybrid, Web) can make the required function calls in DEP - Using Direct REST APIs \u2013 direct calls to Unvired DEP</p>"},{"location":"appdev/processagent/#build-unvired-applications-or-process-agents","title":"Build Unvired Applications or Process Agents","text":"<p>Unvired DEP has a toolset to build Unvired Apps. The toolset is called Unvired Designer is an add-on to Eclipse IDE.</p>"},{"location":"appdev/processagent/#install","title":"Install","text":"<p>Install Eclipse - Download the latest version of Mars or Neon Eclipse IDE for Java EE Developers from http://www.eclipse.org - Install Eclipse, start it and create a new workspace. Follow Eclipse guides to do this.</p> <p>Install Unvired Modeler Add-on - Start Eclipse - Open an internet browser and open the link: http://marketplace.eclipse.org/content/unvired-modeler-and-chyme-bots-builder-ump-v4 - Drag and drop the <code>Install</code> button from the above web page inside Eclipse - Proceed with the installation and complete it</p> <p>Or Use the Eclipse update site to install the plugin: http://eclipse.unvired.io/umpmodeler4</p> <p></p>"},{"location":"appdev/processagent/#steps","title":"Steps","text":"<ol> <li>Create Mobile App</li> <li>Setup Landscape \u2013 Fulfilment systems for interaction</li> <li>Choose APIs from fulfilment systems</li> <li>Define Business Entities from APIs or directly for data exchange</li> <li>Define Functions</li> <li>Create Functions</li> <li>Add Input &amp; Output Business Entities</li> <li>Map Business Entities to fulfilment systems APIs</li> <li>Code<ol> <li>Generate Code</li> <li>Extend Code</li> <li>Deploy Application</li> <li>Test Functions</li> </ol> </li> </ol>"},{"location":"appdev/processagent/#sample-project-details","title":"Sample Project Details","text":"<p>In this guide a sample project is used to explain the end to end application creation. The sample project details are as follows:</p> <ul> <li>Sample application is based on SAP system and interfaces</li> <li>Unvired application provides access to SAP process and data</li> <li>Uses SAP Person APIs (RFCs)</li> <li>Application does the following:</li> <li>Read Persons</li> <li>Read Person Details</li> <li>Create a Person</li> </ul>"},{"location":"appdev/processagent/#create-mobile-app","title":"Create Mobile App","text":"<p>Create a new Unvired Application project in Eclipse (using the Unvired Designer Plugin).</p> <ul> <li>Create Unvired Application using the Eclipse standard project creation wizard</li> <li>In the Eclipse main menu select: File -&gt; New -&gt; Other -&gt; Unvired -&gt; Unvired Application</li> <li>Click <code>Next</code> to see the Chyme Login Page</li> <li> <p>Login to Chyme: Enter the following details: | Name  | Value     | Comments  | |-  |-  |-  | | Unvired URL   |      | Enter the development server URLEx: http://unvireddevelopmentserver:8080/UMP  | | Developer User    |      | Enter the developer user created in the Unvired system    | | Password  |     | Enter the Password    | | Company   |     | Enter the Company name created with the Unvired development server    |</p> </li> <li> <p>Click <code>Next</code> to see the Application Creation page</p> </li> <li>Application Creation: Create the application as follows.</li> </ul> Name Value Comments Application Name UnviredSAPSample Filled by default. Cannot be changed. Description Unvired SAP Sample Version 1.0 Application Data Model version no used by the client Build No 1.0 Application Process Agent version number used in the Unvired server Vendor E.g.: Unvired Devices Android Phone, Tablet, Select the required Devices / End Points that are going to use this application Language Java This example is built in Java. Java Package com.unvired.sample.sap E.g.: com.unvired.salessample Data Format XML This example uses XML as the data format <ul> <li>Click <code>Next</code> to Create a Java Project</li> <li>Java Project: Standard Eclipse Java project</li> <li>Click <code>Next</code> to proceed</li> <li>Click <code>Finish</code> to create the project</li> <li>Unvired Application project gets created and Unvired Designer opens</li> <li>Sample project is shown in the Unvired Designer</li> <li>Click Check for Updates in the Unvired Designer Application tab to download the Unvired SDKs and add them to the Java build path</li> </ul>"},{"location":"appdev/processagent/#unvired-designer-overview","title":"Unvired Designer Overview","text":"<p>Unvired Designer contains the following tabs: - Application: Set the basic properties of the Application - Landscape: Manage all the systems that are needed to build the Unvired application - Functions: Manage the functions associated with the application - Business Entities: Model and manage the data objects associated with the application - Test: Console to test the functions</p>"},{"location":"appdev/processagent/#setup-landscape","title":"Setup Landscape","text":"<p>A fulfilment system is any system that the application connects to for data or business process execution. In the Landscape tab set up the systems required for the application. Unvired supports many standard enterprise systems. APIs from the following types of systems can be added and used for bot integration:</p> <ul> <li>Web: REST and SOAP</li> <li>Databases: Tables and Store Procedures</li> <li>SAP: RFCs, OData Services</li> <li>OData Server: OData services</li> <li>Salesforce: Salesforce SObjects</li> <li>ServiceNow: ServiceNow REST APIs</li> </ul> <p>The sample application is based on SAP system.</p> <p>Add SAP System - Select the SAP ABAP System from the list of systems - Open the default Eclipse Properties tab. (Eclipse Menu Window -&gt; Show View -&gt; Other -&gt; General -&gt; Properties) - Select the SAP ABAP under the section Enterprise Systems - Set the Properties in the Properties tab as follows:</p> Name Value Comments Name UNVIRED_SAP_SAMPLE Description Unvired SAP Sample Server <code>&lt;SAP Application Server&gt;</code> System ID <code>&lt;3 letter SAP system name&gt;</code> System Number <code>&lt;SAP System Number&gt;</code> Client <code>&lt;SAP Client Id&gt;</code> User Name <code>&lt;user name&gt;</code> Password <code>&lt;password&gt;</code> <ul> <li>Click Save or <code>Ctrl + S</code> to save the project</li> </ul> <p>SAP System Connection Test</p> <p>Note: SAP JCo 3 Jar and DLL are required. Download the SAP JCo Jar and DLL. Save them under the Eclipse installation folder inside plugins\\unvired\\sap.</p> <p>Test the connection to the SAP system. In the Landscape tab button bar click <code>Test Connection</code>. A success message for the SAP connection appears.</p>"},{"location":"appdev/processagent/#import-interfaces","title":"Import Interfaces","text":"<p>Import SAP RFCs / BAPIs from SAP Under Enterprise Systems section select the SAP system added in the landscape. An SAP RFC browser is shown on the right side in the Landscape tab.</p> <ul> <li>Select RFC radio button</li> <li>Enter the text \u2018MEREP_CONTACT_ *\u2019 to search for RFCs in the Search field. Click <code>Search</code>.</li> <li>RFCs starting with the search term are listed.</li> <li>Select the RFCs:</li> <li>MEREP_CONTACT_CREATE</li> <li>MEREP_CONTACT_GETDETAIL</li> <li>Click <code>+</code> to add the RFCs to the project.</li> <li>Click <code>Save</code> or <code>Ctrl + S</code> to save the project</li> </ul>"},{"location":"appdev/processagent/#define-business-entities","title":"Define Business Entities","text":"<p>Define the Business Entities in the application. 1. Go to the Business Entities tab 1. Click <code>Explore Services</code> to open the interface explorer. Interface explorer shows all the services / interfaces from all the systems added in the application. 1. Select System: <code>UNVIRED_SAP_SAMPLE - Unvired SAP Sample</code> 1. Select Function: <code>MEREP_CONTACT_GETDETAIL - Contact address: GetDetail</code> 1. Select Type: <code>MEREP_CONTACT_GETDETAIL.OUTPUT - Output</code> 1. The SAP output objects from the RFC <code>MEREP_CONTACT_GETDETAIL</code> are shown in the tree below. 1. Select PERSON (using the checkbox) node under the object <code>MEREP_CONTACT_GETDETAIL.OUTPUT</code>. 1. Click <code>Map Header</code>. A business entity called PERSON is created. 1. Select the business entity <code>PERSON</code>. Open the <code>PERSON_HEADER</code> and make the following as key fields:    1. MANDT    1. PERSNNUMBER    1. Select <code>E_MAIL</code> (using the checkbox) node under the object <code>MEREP_CONTACT_GETDETAIL.OUTPUT</code>.    1. Click <code>Map Item</code>. An item called E_MAIL is created for the business entity PERSON.    1. Select the business entity item <code>E_MAIL</code>. Open the <code>E_MAIL</code> and make the following as key fields:       1. MANDT       1. PERSNNUMBER       1. SEQNO_E_MAIL</p>"},{"location":"appdev/processagent/#define-functions","title":"Define Functions","text":"<p>Create functions in the Functions tab.</p>"},{"location":"appdev/processagent/#create-functions","title":"Create Functions","text":"<ul> <li>Click <code>+</code> Create Function to create a function</li> <li>Select the function in the function list</li> <li>Set the function properties in the standard Eclipse Properties View (to open the Properties View in Eclipse use: Menu -&gt; Window -&gt; Show View -&gt; Other -&gt; General -&gt; Properties)</li> </ul> Function Name Description Action GET_PERSON Get Person Get CREATE_PERSON Create Person Create"},{"location":"appdev/processagent/#map-input-and-output-business-entities","title":"Map Input and Output Business Entities","text":"<ul> <li>Select the function in the function list</li> <li>In the Input sub tab click <code>+</code> Add and select the business entity to map input.</li> <li>In the Output sub tab click <code>+</code> Add and select the business entity to map input.</li> </ul> Function Name Input Output GET_PERSON PERSON PERSON CREATE_PERSON PERSON - <p>Note: Create person returns the Person Number of the person created (SAP generates the person no) and provides the Person Number in the Success Message. So not output is mapped for CREATE_PERSON.</p> <p>Map Business Entities to Fulfilment System APIs Map the function input and output to the fulfillment system API objects / structures. - Select the function in the function list - Add the required interface from the fulfillment system under the interface section. Click <code>+ Add</code> under the Interface section. Select the System. Select the required Interface under the system. - Map by dragging and dropping as follows for the functions:</p> Function GET_PERSON Type Business Entity Interface Mapping Details Input PERSON MEREP_CONTACT_GETDETAIL Map PERSON_HEADER to MEREP_CONTACT_GETDETAIL. INPUT Output PERSON MEREP_CONTACT_GETDETAIL Map PERSON to MEREP_CONTACT_GETDETAIL.OUTPUT Function CREATE_PERSON Input PERSON MEREP_CONTACT_CREATE Map PERSON_HEADER to MEREP_CONTACT_CREATE.INPUT Output - Instead of the object we are using the message from the SAP interface as the output.Message provides the status of the operation along with the Person Number of the Person created."},{"location":"appdev/processagent/#code","title":"Code","text":"<p>Unvired application code is based on code generation and extension. - The base application code is generated along with extension classes. - Any augmentation or completion is made in the extension classes.</p>"},{"location":"appdev/processagent/#code-generate","title":"Code Generate","text":"<p>Bot code can generated as follows: - Go to the Landscape tab. - Click on the button <code>Generate and Deploy</code>. - In the pop up dialog, select <code>Generate</code>. Under this section select <code>Project Code</code>. Select <code>OK</code>. - Java source code is generated and is available in the project in the Eclipse Project Explorer. - All the source files are generated under the Java Package provided during the Unvired Application creation.</p> <p>Generated Java source code contains the following:</p> <ul> <li>All the generated source code are under 3 sub packages:</li> <li><code>&lt;base package&gt;.gen</code>:<ul> <li>Every generation overrides this package. Do not manually change the contents of this package.</li> <li>Contains the Business Entity POJOs, backend interface proxies, utility files and bot classes</li> <li>Application classes consist of:</li> <li>AppService: Contains all service methods that make the backend calls</li> <li>Abstract Implementations of Bots: Partial implementations taking care of boxing, unboxing and mapping of data objects</li> <li>Constant: Class with constant decelerations</li> </ul> </li> <li><code>&lt;base package&gt;.pa</code>:<ul> <li>Every generation does not override this package. All code extensions have to be done in this package.</li> <li>Each Function class extends the abstract class from the .gen package.</li> </ul> </li> </ul>"},{"location":"appdev/processagent/#code-extenstion","title":"Code Extenstion","text":"<p>Code extensions are done in the concrete implementations of the Function classes. These classes are in the sub package \u2018.pa\u2019 outside the \u2018.gen\u2019 package.</p> <ul> <li>Each Function class extends the abstract class from the .gen package.</li> <li>In the Function class there is a method called <code>execute()</code> where the extensions can be done.</li> <li>When the Function is called this is the method that gets executed.</li> </ul>"},{"location":"appdev/processagent/#deploy-application","title":"Deploy Application","text":"<p>The project is complete and ready for deployment. - Go to the Landscape tab - Click on the button <code>Generate and Deploy</code>. - In the pop up dialog, select <code>Generate</code>.   - Select Project Jar.    - Application code is compiled and a jar is generated under the Deploy folder.   - Click on the button <code>Generate and Deploy</code>.   - In the pop up dialog, select:     - <code>Definition and System Settings</code>.     - <code>Project Jar</code>   - Select <code>OK</code>   - Application code is deployed to the Unvired Server.</p>"},{"location":"appdev/processagent/#create-application-user","title":"Create Application User","text":"<p>Create an Application User in the Unvired server to test the application functions. Refer to the Unvired Server Application administration guide to create an Application user: Manage Users For the user get the following details: - User Id - Auth Token for the User - Device Id or the Frontend Id associated with the User</p>"},{"location":"appdev/processagent/#test-functions","title":"Test Functions","text":"<p>To test the Functions do the following:</p> <ul> <li>Select the Test tab</li> <li>In the Debug Properties section, set the following (created in the previous step):</li> <li>Application User</li> <li>Auth Token</li> <li>Device Id</li> <li>Select the <code>Function</code> to debug</li> <li>In the Input section modify the XML/JSON to the desired input maintaining the format</li> <li>Double click on the function to open the class associated. Set break points in Eclipse.</li> <li>In the Test tab, select Debug Function to debug the Function call</li> <li>To run and see the output choose Run Function instead of Debug Function</li> <li>The output of the Function is shown in the Output section.</li> <li>In the Eclipse Standard Console the execution steps and logs are shown.</li> </ul> Function Input Output GET_PERSON Set the fields:MANDTPERSNUMBER If the Person with the number exists in SAP the PERSON object is returned CREATE_PERSON Set the fields:FIRST_NAMELAST_NAME\u2026 Person is created and a message with the Person Number is returned"},{"location":"appdev/processagent/#attachments","title":"Attachments","text":"<ul> <li>Unvired Application supports attachments.</li> <li>Attachments are associated with Business Entities.</li> </ul> <p>Enable Attachment for a Business Entity - Open the Unvired application in Eclipse. - Go to the Business Entity tab - Open the Properties sheet (to open the Properties View in Eclipse use: Menu -&gt; Window -&gt; Show View -&gt; Other -&gt; General -&gt; Properties) - Set the property Attachment to <code>true</code> - Save the project</p> <p>Generate Business Entity - Generate the Project Code from the Landscape tab -&gt; Generate and Deploy -&gt; Generate Project Code - The Business Entity for which attachment was enabled now has a new item structure for attachment</p>"},{"location":"appdev/processagent/#download","title":"Download","text":"<p>Read an Attachment associated with the Business Entity (uploaded from the external system).</p> <p>In the Function implementation class access the attachment uploaded to the Unvired Application as follows (sample code):</p> <pre><code>  List&lt;IAttachment&gt; attachmentList = businessEntity.getAttachments();\nfor (IAttachment attachment : attachmentList) {\n   // Get the Attachment Id           \n   String uid = attachment.getUid();\n  // Get the Attachment Service\n  IAttachmentService attachmentService = process.getAttachmentService();\n  // Read the input stream of the attachment\n  InputStream inputStream = attachmentService.readAttachment(uid);\n  // Continue processing   ///...\n}\n</code></pre>"},{"location":"appdev/processagent/#upload","title":"Upload","text":"<p>Write attachment stream to Unvired cache. Add the attachment meta data information to the Business Entity.</p> <p>In the Function implementation class upload the attachment to the Unvired server as follows (sample code):</p> <pre><code>  // Get the Attachment Service\n      IAttachmentService attachmentService = process.getAttachmentService();\n      // Upload the attachment to the Unvired cache\n      attachmentService.loadAttachment(attachmentID, inputStream);\n      // Read the attachment object\n      IAttachment attachmentItem = attachmentService.getAttachmentByID(attachmentID);\n      // Add attachment item to the business entity (contains the attachment metadata an not the attachment)\n      businessEntity.addAttachment(attachmentItem);\n      // Continue processing (return the business entity to the caller with the attachment)\n      //...\n</code></pre>"},{"location":"appdev/processagent/#mobile-app-development-native","title":"Mobile App Development Native","text":"<ul> <li>Unvired mobile apps are developed based on the Unvired Application.</li> <li>Once the Unvired application component is deployed the mobile application can be developed using the following:</li> <li>Data Model from the Unvired Application</li> <li>Unvired SDK (Mobile or Hybrid)</li> <li>Generate Mobile App Data Objects:<ul> <li>In the Unvired Application go to the Landscape Tab</li> <li>Select Generate and Deploy</li> <li>Select Generate Mobile App Data Model under Mobile App</li> <li>A new folder called Device gets created in the Eclipse project folder</li> <li>Under the Device folder, data objects are generated for Android and iOS (both Objective C and Swift)</li> <li>Note: For Windows apps the source code is generated in MS Visual Studio. Refer to the Windows Development Guide.</li> <li>Copy the following and use the Android Studio or Apple XCode to develop the mobile apps:</li> <li>metadata.xml \u2013 Contains the Data Model definition to be used in the mobile app. Used to create the database.</li> <li>Data Object source code</li> <li>Refer to the corresponding mobile app development guide to develop the mobile apps:</li> </ul> </li> </ul> Device Development Guide Android 05. Android Apps iOS 06. iOS Apps Windows 08. Windows Apps"},{"location":"appdev/processagent/#hybrid-and-web-app-development","title":"Hybrid and Web App Development","text":"<ul> <li>Hybrid and Web apps are developed based on the Unvired Application.</li> <li>Hybrid apps are built using the Unvired Hybrid SDK</li> <li>Web apps are built using the Unvired Web SDK</li> <li>The Hybrid and Web SDKs are drop in replacements for each other</li> <li>Hybrid supports offline data while Web supports only online data</li> <li>Refer to the corresponding app development guides:</li> </ul> Device Development Guide Hybrid &amp; Web Apps 07. Hybrid &amp; Web Apps"},{"location":"appdev/processagent/#backend-as-a-service","title":"Backend as a Service","text":"<ul> <li>Unvired Application Functions can be used as APIs for any integration or Backend as a Service</li> <li>All Unvired Application Functions are exposed as REST APIs.</li> <li>Refer to the Unvired REST API app development guide: https://docs.unvired.io/en/home/udep/rest-api</li> </ul>"},{"location":"appdev/rest/","title":"Sample: REST","text":""},{"location":"appdev/rest/#introduction","title":"Introduction","text":"<p>REST Sample Application fetches data from a REST service using the Unvired Platform. </p>"},{"location":"appdev/rest/#installation","title":"Installation","text":"<p>To install the sample application in your preferred platform, refer Running Github samples docs.</p>"},{"location":"appdev/rest/#app-walkthrough","title":"App Walkthrough","text":""},{"location":"appdev/rest/#login-parameters","title":"Login Parameters","text":"<p>For trial credentials, please contact Unvired (https://unvired.com/contact/).</p>"},{"location":"appdev/rest/#get-weather-details","title":"Get Weather Details","text":"<p>To get the weather details of a city-  1. Enter the name of the concerned city in the city field. 1. Press <code>GET WEATHER</code> button to get weather details of the city</p> <p>The following information will be displayed - - Description - Temperature - Humidity</p> <p>Tip</p> <p>A valid city name should be entered to get weather details.</p>"},{"location":"appdev/windows/","title":"Windows","text":""},{"location":"appdev/windows/#setup","title":"Setup","text":"<p>Unvired has a Windows UWP SDK to build Windows-based Apps. UWP apps are application models built on Windows Runtime. Use WinRT APIs from the app built in any one of the application models: Win32, .NET, WinForms, and WP.</p>"},{"location":"appdev/windows/#install","title":"Install","text":"<p>Install Microsoft Visual Studio  - Download the latest version of Visual Studio 2019 from https://visualstudio.microsoft.com/vs/</p>"},{"location":"appdev/windows/#steps","title":"Steps","text":"<ol> <li>Create a New Project</li> <li>Initial Setup for Unvired Microsoft UWP SDK</li> <li>Authentication and Login</li> <li>Using Process Agent (PA)</li> </ol>"},{"location":"appdev/windows/#develop","title":"Develop","text":""},{"location":"appdev/windows/#sample-project-details","title":"Sample Project Details","text":"<p>In this guide, a sample project is used to explain the end to end application creation. The sample project details are as follows:</p> <ul> <li>The sample application is based on the REST API.</li> <li>Uses Process Agent (PA)</li> <li>The application gives Weather information for the given city</li> </ul>"},{"location":"appdev/windows/#create-new-project","title":"Create New Project","text":"<p>Create a new Windows UWP project in the Visual Studio.</p> <ul> <li>Create Windows UWP using the Visual Studio standard project creation wizard</li> <li>Open Visual Studio and click on <code>Create a New Project</code>.</li> <li>In Search Bar, type \u201cBlank App (Universal Windows)\u201d, select the corresponding first item on the result, and click on <code>Next</code>.</li> <li>Enter inputs for Project Name, Location, and Solution Name fields. Click on <code>Create</code>.</li> <li>Select the latest Windows version in the target version option of the \u201cNew Universal Windows Platform Project\u201d prompt dialog box. Click on OK to create a new project.</li> </ul>"},{"location":"appdev/windows/#initial-setup","title":"Initial Setup","text":"<p>Initial Setup to build a Windows UWP Application using Visual Studio Code.</p> <ul> <li>Add a new folder Entity under the project (Eg: <code>UNVIRED_REST_SAMPLE</code>)</li> <li>Copy generated Business Entity (BE) to the folder Entity folder.</li> <li>Copy metadata.xml to the project.</li> <li>Download UnviredFramework.x64 or UnviredFramework.x86 from the Nuget package.</li> <li>Download the NLog  (https://www.nuget.org/packages/NLog/) and the Newtonsoft.Json (https://www.nuget.org/packages/Newtonsoft.Json/) from the Nuget Package.</li> <li>Now the project is ready with all the basic requirements.</li> </ul>"},{"location":"appdev/windows/#authentication-and-login","title":"Authentication and Login","text":"<p>Open \"Launch Activity\" of the project (i.e. <code>App.xaml.cs</code>) Make sure App extends <code>ILoginListener</code>. implements LoginListener (from Unvired window SDK using <code>Unvired.Common.WinRT.Interface</code>) Initialize LoginParameters LoginParameters</p> <pre><code>LoginParameters.AssemblyName = GetType().GetTypeInfo().Assembly.FullName;\nLoginParameters.Protocol = LoginParameters.Protocols.https;\nLoginParameters.Url =URL (Note: UMP URL where the application is deployed)\nLoginParameters.AppTitle = \"Unvired REST Sample\";\nLoginParameters.AppName = \"UNVIRED_REST_SAMPLE\";(Note: App name must be same as mentioned in metadata.xml)\nLoginParameters.ShowCompany = true;\nLoginParameters.LoginListener = this;\n\nusing (var xr = XmlReader.Create(@\"metadata.xml\"))        \n{\n   var xDocument = XDocument.Load(xr);\n    LoginParameters.MetaDataXml = xDocument;\n}\nawait AuthenticationService.Login();\n</code></pre> <ul> <li>This launches the Login screen where the user has to enter URL, Company Name, User Name, and Password.</li> <li>Authentication callback will be given to the calling Activity (i.e. <code>App.xaml.cs</code>)</li> </ul> <pre><code>public void AuthenticateAndActivationSuccessful()\n      {\n\n      }\n</code></pre> <ul> <li>Navigate to HomeScreen upon successful Authentication and for Subsequent Logins</li> </ul> <pre><code>public void AuthenticateAndActivationSuccessful()\n        {\n            if (Window.Current.Content is Frame frame &amp;&amp; !frame.Navigate(typeof(Home), null, new SlideNavigationTransitionInfo { Effect = SlideNavigationTransitionEffect.FromRight }))\n            {\n                throw new Exception(\"Failed to create initial page\");\n            }\n        }\n</code></pre> <ul> <li>Now the Project is set up for further application development.</li> </ul>"},{"location":"appdev/windows/#using-process-agents","title":"Using Process Agents","text":"<p>Process Agent (PA) is used to call/execute different network APIs/Calls. Here we are using PA to call REST API.</p> <ul> <li>Develop a screen to get input for PA.</li> <li>Here it will be a BE named WEATHER_HEADER, with value \"CITY\".</li> <li>Use an instance of  Unvired.Kernel.Sync <code>Unvired.Kernal.Sync</code> to call REST API, pass WEATHER_HEADER as IDataStructure parameter value.</li> <li>The result will be in the form of <code>Unvired.Kernel.Sync.ISyncResponse</code></li> <li>Process ISyncResponse to get BE WEATHER_HEADER with all available information as values.</li> <li>Populate the values on the screen.</li> </ul> <p>For further detail please refer to the sample application available in Github (https://github.com/unvired/rest-sample-windows-uwp).</p>"},{"location":"builder/","title":"Introduction","text":""},{"location":"builder/#introduction","title":"Introduction","text":"<p>Turbo Apps Suite is a forms and workflow builder that makes it easy for analysts with little or no programming experience to design forms and automate backend processes by adding and connecting visual components together.</p> <p>Companies can digitize paper forms, automate workflows and integrate with backend systems so remote workers can easily manage and collect data on the go.  </p> <p>The Turbo Apps Suite consists of two products:  The Turbo Apps Builder (with Admin features) and the Turbo Forms filling applications.</p>"},{"location":"builder/#turbo-apps-builder","title":"Turbo Apps Builder","text":"<p>The Turbo Apps Builder is a web app for companies to provision users who will use the Turbo Forms App, design forms, assign forms to users, Automate  workflows for execution on form completion, monitor submissions and generate reports etc.  Administrators and Managers can login to the tool.</p>"},{"location":"builder/#turbo-forms","title":"Turbo Forms","text":"<p>The Turbo Forms App is an App for users to fill forms assigned to them.  Forms may be created by the users on an adhoc basis or created and assigned to them by other users.  System generated forms on a schedule for periodic data collection such as inspections can also be filled and completed.  Form filling includes entering textual data, capturing signatures, pictures, annotating pictures etc.</p>"},{"location":"builder/#features","title":"Features","text":""},{"location":"builder/#forms-builder","title":"Forms Builder","text":"<p>Drag and drop tools to build mobile forms, create workflows, and integrate with backend systems like SAP, Maximo, SharePoint, and OpenText. Create drop-down lists, check boxes, decision logic, and define role-based access to forms.</p>"},{"location":"builder/#fill-forms-online","title":"Fill forms online","text":"<p>Cross-browser app (Chrome, Safari, Firefox, Edge) with to fill forms.  Fill forms and submit and continue working on mobile devices.</p>"},{"location":"builder/#mobile-forms-app","title":"Mobile Forms App","text":"<p>Cross-platform app (iOS, Android &amp; Windows) with responsive design to access mobile forms, capture data and work Offline. Send the real-time data to the backend systems like SAP, Maximo, SharePoint, Databases etc.</p>"},{"location":"builder/#workflows","title":"Workflows","text":"<p>Populate pre-filled forms using data from the backend systems like SAP and Maximo, send forms to the right users, hide/show form fields based on user input, automatic calculations, send a push notification, and take actions like creating a notification in SAP.</p>"},{"location":"builder/#capture-rich-data","title":"Capture Rich Data","text":"<p>Capture images and send as attachments, add maps &amp; GPS location data, record the time and location of form submissions, scan barcodes &amp; QR codes, associate digital signatures, and more.</p>"},{"location":"builder/#signatures","title":"Signatures","text":"<p>Associate digital signatures for proof of service or delivery.</p>"},{"location":"builder/#attach-pictures-annotate","title":"Attach Pictures &amp; Annotate","text":"<p>Take before and after pictures and draw directly onto an image and annotate with a rich set of tools.  Identify faults and add comments for supervisors to check.</p>"},{"location":"builder/dashboards/","title":"Dashboards","text":""},{"location":"builder/dashboards/#dashboards","title":"Dashboards","text":"<p>Administrators can see the list of all Dashboards if it has been enabled for your company.</p>"},{"location":"builder/dashboards/#managing-dashboards","title":"Managing Dashboards","text":"<p>From the Dashboards tab, Administrators can import new Dashboards from Superset, delete unwanted ones and export/import dashboards across landscapes.</p> <p>Administrators and Managers can also choose their default Dashboard and also mark their Favourite Dashboards.</p>"},{"location":"builder/dashboards/#add","title":"Add","text":"<p>To Add a dashboard, click on the + icon.  If there are published dashboards in Superset that are not yet added, the list displays all of them.  Select the dashbaords to be imported and import them.</p>"},{"location":"builder/dashboards/#which-dashboards-can-be-added","title":"Which Dashboards can be added?","text":"<p>To be able to add dashboards, these dashboards need to be designed in Apache Superset and configured as follows:</p> <ul> <li>Slug has to be configured</li> <li>Needs to be published</li> </ul>"},{"location":"builder/dashboards/#favourite","title":"Favourite","text":"<p>Click on the Favourite icon to mark a dashboard as favourite.  These will appear first in the list of Dashboards in the Home Page</p>"},{"location":"builder/dashboards/#default","title":"Default","text":"<p>You can mark any dashboard as a Default one.  Whenever the Home page is displayed, the Default dashboard will be rendered,</p>"},{"location":"builder/dashboards/#delete","title":"Delete","text":"<p>You can delete a dashboard from the system by clicking on the hamburger icon and delete.  The dashboard has been removed from the system and others will not have access to the dashboard any longer. The dashboard is not deleted from Apache Superset and can be imported if required again.</p>"},{"location":"builder/dashboards/#export","title":"Export","text":"<p>You can export the dashboard from the Sandbox (Quality) landscape to the Production landscape after design and testing.  Click on the hamburger icon and then the Export option to export from current system and import it into the Production landscape.  After export/import the dashboard will be made available to all users in the Production landscape without any further action.</p>"},{"location":"builder/dashboards/#edit","title":"Edit","text":"<p>If your company has been enabled to edit dashboards, click on the hamburger icon and then choose the Edit option.  This opens up Apache Superset and allows Administrators to design / make changes to the dashboard.  Contact Unvired Support if you need to enable this option.</p>"},{"location":"builder/forms/","title":"Forms Management","text":""},{"location":"builder/forms/#forms","title":"Forms","text":"<p>Forms are used to collect inspection data, lookup information, approve requests and many other functions.  Forms can be desinged with the drag and drop Form Designer and then connected with Workflows to run operations on backend systems such as Databases, Sharepoint etc</p>"},{"location":"builder/forms/#categories","title":"Categories","text":"<p>Forms can be grouped into specific categories as desired. </p>"},{"location":"builder/forms/#create","title":"Create","text":"<p>Click on the Category header to expand the section.  Enter the desired Category name and click on the Add button.</p>"},{"location":"builder/forms/#adding-a-form","title":"Adding a Form","text":"<p>Select the Category by clicking on the desired Category.  The Forms (if any) belonging to that Category are now shown. Click on the <code>Add (+)</code> button at the bottom of the screen to add a form to the selected Category.</p> <p>Note</p> <p>All forms are automatically added to the Default category.  If additional categories are created you can then select a category by clicking on it and then creating the form.</p>"},{"location":"builder/forms/#managing-forms","title":"Managing Forms","text":"<p>Forms Tab allows Administrators to Create Forms, Design Forms using drag &amp; drop designer, associate Master Data with forms, update and publish Forms (revisions), Assign Forms to Teams, Include Forms in Formsets, Create Schedules and much more.</p>"},{"location":"builder/forms/#create_1","title":"Create","text":"<p>New forms can be created using the Forms tab. Once the Category is selected, click on the <code>Add (+)</code> icon in the bottom of the screen and enter the Title &amp; Description, and Choose an icon that helps identify the form to the closest (it could be difficult to get an ideal icon, choose one that is close). Select the type of flow you want to create by choosing Form or Wizard.</p> <ul> <li>Forms: Forms let you define what data is necessary to collect in a single page. Every form consists of sections, fields, and tables.</li> <li>Nested Forms: Nested Forms let you design reusable forms that can be included in any other form.</li> <li>Wizard: The form wizard is used to complete the tasks through a series of steps. The user enters data in each view and proceeds to the next step until completion.</li> </ul> <p>Short Name</p> <p>The Short Name (also called Technical Name or API Name) is a unique name to identify the form in/by the system.  This will be automatically created based on the description you enter.  Make sure that the description for each form is unique and self explanatory to the user to identify the form's functionality.</p> <p>The created form will be displayed as a card on the screen and can be clicked to access the details of the form.</p> <p>Form Type</p> <p>A label in the card indicates of the design is that of a standard Form or a step-by-step Wizard.</p>"},{"location":"builder/forms/#edit","title":"Edit","text":"<p>Existing forms can be edited using the Forms tab. Click on the Category and then the desired Form card that is displayed.  All form details are now displayed and can be edited.</p>"},{"location":"builder/forms/#delete","title":"Delete","text":"<p>Existing forms can be edited using the Forms tab. Click on the Category and then the Trash Can icon on the Form to delete.  The form will be deleted after confirmation. </p> <p>Deleting Forms</p> <p>This operation cannot be reversed.  When the form is deleted,  the form and its assignment to teams is removed.  However all form submissions (data) are retained and not deleted.</p>"},{"location":"builder/forms/#design-forms","title":"Design Forms","text":"<p>Once the Form is created, click on the design button to design the form using drag and drop tools available in the left-hand side toolbar.</p>"},{"location":"builder/forms/#form-components","title":"Form Components","text":"<p>Form Components are the form fields that are part of the form being designed. Users will enter their data in these form fields which will then be validated upon submission. There are various types of form components:</p> <ul> <li>Basic Components: Text Field and Text Area, Number, Password, Checkbox and Radio, Select, Static HTML content and Buttons.</li> <li>Advanced Components: Phone Number (US), Email, Address, Files for attaching, Digital Signature etc.</li> <li>Layout: Columns, Table, Tabs etc.</li> <li>Data: Data Grid, Edit Grid etc.</li> <li>Premium: Premium components to include in your forms like SmartID, BarCode, Smart Table, Nested Forms etc</li> </ul> <p>For more details on each component: User Guide for Designing</p>"},{"location":"builder/forms/#using-master-data-in-forms","title":"Using Master Data in Forms","text":"<p>To use Master Data in Forms and enable lookups to master data refer the Using Master Data documentation.</p>"},{"location":"builder/forms/#add-form-components","title":"Add Form Components","text":"<p>To add a form component, Drag and Drop the component from the toolbar on the left to the desired location within the form. Each new form starts with a submit button automatically added to it which needs to be left in place.   On adding a component an advanced view opens up which can be used to set additional properties for the component, validation etc.  If required custom validation in the form of JavaScript code can also be added.</p> <p>To edit an already added Form Component hover over the component and click on the Gear icon to make edits.  To delete click on the Trash Can icon.</p>"},{"location":"builder/forms/#layout-components","title":"Layout Components","text":"<p>Layout Components are used to design the layout of the Form. Below are the components which can be used to design the layout:</p> <ul> <li>Columns: Columns component can be used to align the various elements in the form as columns.</li> <li>Fieldset: A fieldset component can be used to create a title of an area of the form</li> <li>Panel: Panel component can be used to wrap groups of fields with a title and styling</li> <li>Table: The table component can be used to create a table with columns and rows that allow adding additional components within it</li> <li>Tabs: Tabs can be used to create Tabs to show form fields</li> <li>Well: Wells are wrapped in a div with a class</li> </ul>"},{"location":"builder/forms/#data-component","title":"Data Component","text":"<p>Below are the data components which can be used to define the form fields and fieldsets to collect data:</p> <ul> <li>Hidden: A hidden field can be added to a form to create a resource property that can be custom set in the form. You can also use JavaScript to set the value in the form and on submission the value can be used for additional processing.</li> <li>Container: A container is a wrapper around a set of fields, the fields are placed inside the object. This is useful for creating more-complex objects within your form.</li> <li>Data Grids: Data Grids allow add multiple form components inside of the data grid on to a line item.  Data Grids allow to design repeating sections that the user can add as required when filling the form.  The number of these repeating sections and their validation is controlled in the additional properties.</li> <li>Edit Grid: Edit Grids allow to add multiple components inside of the Edit Grid.   On edit a popup shows all the fields so data can be added/edited in a responsive view.</li> </ul>"},{"location":"builder/forms/#component-settings","title":"Component Settings","text":"<p>Below is a list of general settings that are offered for the majority of form components.</p> <ul> <li>Display: Customize the display settings of form components like label, position, placeholder, widget, description, tooltip, custom CSS, and many more.</li> <li>Data: Customize the data settings for user input data like default value, input format, manual override of the calculated value, data encryption, and much more.</li> <li>Validation: Customize the validation settings like enable/disable the validation, define the rules for validation or use JavaScript to perform validation on a field.</li> <li>API: A compatible API will automatically be mapped out as perform component. However, a new API can be added here as required.</li> <li>Conditional: Any form component can use conditional logic to determine when to hide or display itself. Set up the dynamic conditions using available settings or customized conditions using JavaScript or JSONLogic.</li> <li>Logic: Setup advanced logic to trigger the form component using JavaScript for any combination of conditions. Kindly note advanced conditional logic will only work if the simple conditional logic is not defined.</li> <li>Layout: Layout of a form component can be marginally changed using the HTML attributes, margins, and other settings.</li> </ul>"},{"location":"builder/forms/#save-test-and-publish","title":"Save, Test and Publish","text":"<ul> <li>Save: Click on the save button to save the form and continue building the form.  A new Draft version will be created if necessary.</li> <li>Test: Click on the test button to test the form before publishing.</li> <li>Publish: Click on the publish button to publish the form. Once the form is published, the assigned team can access the form and fill it.  A form is available for users only after its published.</li> </ul>"},{"location":"builder/forms/#revisions","title":"Revisions","text":"<p>Form revisions allow the admin to evolve current forms while preserving the integrity of previous iterations. Click on form \u2018details\u2019 to view the detailed revision history.  Similar to code revision systems, a mandatory comment is attached to every revision that is published and also tagged with a revision number.  Details of the revision number, change comment and when the change was made are displayed.</p> <p>The Administrator can configure the number of revisions or versions that the Forms App can work with.  Default is the latest version only (1 revision) but can be set to a maximum of 5.  What this achieves is if a user is working with revision 4 of a form and a new revision 5 is published, the current form being filled will continue to display revision 4.  This ensures that the user is not surprised by any new changes or fields that are added to the form.  In the next instance when they start filling the form newly, the latest revision 5 will be automatically used.</p>"},{"location":"builder/forms/#forms-assignment","title":"Forms Assignment","text":""},{"location":"builder/forms/#assign","title":"Assign","text":"<p>A form can be assigned to teams to fill out and complete the data collection. Click on the Assignment tab inside Form details and then the Add (+) icon at the bottom to display the Add Assignment dialog.  Search for existing teams by entering a few characters of the team name and then select from the displayed teams to assign the form. Assigned forms will be pushed to the teams and users will be able to immediately start using them.</p> <p>Form assignments have additional properties that can be configured for triggering various workflows.</p>"},{"location":"builder/forms/#shared-mode","title":"Shared Mode","text":"<p>If a team is expected to work together and fill the form (the workflow could be that a team is performing an inspection and different team members fill out different sections of the form).  All the users in a team can work on the same form and its underlying data.  Each user needs to enter the data for their sections of the form and mark as complete for the form submission to be considered as complete.  If working offline, it's quite possible that other users have updated data in the meantime and the user is working with old or outdated data.  Conflict resolution, in this case, helps the user to copy over parts of their data and resubmit.  No data is lost.  Refer to the Conflict Resolution described later to understand this in more detail.  Additionally in shared mode, a further configuration is possible to restrict forms to be filled by only one user while still sharing the data.  Except for the user working on the form, all other users see a read-only view.  When the user \"releases\" the form, another user can \"lock\" the form and start working on it.</p>"},{"location":"builder/forms/#review","title":"Review","text":"<p>Form submissions can always be reviewed by the Manager before final submission.  However, for advanced workflows where another User or Team needs to review, this option can be switched on and a reviewing User or Team selected.  When the form is completed, a Review of the form is initiated.  The reviewer(s) can either Approve or Reject.  If approved, the form data is considered final.  In case it is rejected, a Rework of the form is initiated to the initial set of users.  This workflow continues until the form is approved.</p>"},{"location":"builder/forms/#shift-handoff","title":"Shift Handoff","text":"<p>In case teams works in shifts, the team that has just completed entering data can initiate a Shift Handoff to the next Team.  The receiving team can now work on the already submitted data and continue.  Once the data is entered during the shift the team can then complete or initiate a handoff again.  This workflow continues until the form is completed and submitted.</p>"},{"location":"builder/forms/#remove-assignment","title":"Remove Assignment","text":"<p>To remove a Form assignment to a team, select the form and click on the Delete option.</p> <p>Removing Assignments</p> <p>Be careful when removing form assignments as the assignment is removed immediately and the form will not be available for the user any longer.</p> <p>Data is never deleted</p> <p>Removing a form assignment does not remove the submitted data.</p>"},{"location":"builder/forms/#workflows","title":"Workflows","text":"<p>Forms on submission are not just saved in the system (forms) database but can also be routed to various other systems such as other databases, SAP S/4 HANA, Salesforce, generic webhooks, Dropbox etc.</p> <p>This is achieved by configuring the required workflows, read detailed documentation on Designing Workflows</p>"},{"location":"builder/forms/#schedules","title":"Schedules","text":"<p>Schedules help create periodic data collection for planned inspections etc</p>"},{"location":"builder/forms/#create_2","title":"Create","text":"<p>Administrators can create Schedule for Forms and Formsets to be filled on a periodic basis by Team. Schedules can be Daily, Weekly or Monthly. Click on the Add (+) icon at the bottom of the screen to create a schedule. You can also create multiple schedules for a Form or Formset.</p> <p>Once the schedule is created, the system will automatically create and send the forms to the users for them to fill.  For example, if a schedule runs weekly every Monday, every Monday morning a new Form will be pushed to the users belonging to that team so that the users can fill the form.  All Form Assignment options (Shared, Review, etc) that are already configured will be used to initiate the workflows when the forms are being filled.</p>"},{"location":"builder/forms/#pause-and-resume","title":"Pause and Resume","text":"<p>If temporarily you need to stop a schedule from running (for e.g. a natural disaster prevents scheduled maintenance from happening) you can pause the schedule by clicking on the Pause icon.  This schedule will not run until it is Resumed again.</p>"},{"location":"builder/forms/#delete_1","title":"Delete","text":"<p>To permanently delete a schedule, select the schedule and click on the Delete option.</p> <p>Removing Schedules</p> <p>Removing a form schedule does not remove the submitted data.  However forms will no longer be sent to users to complete.</p>"},{"location":"builder/forms/#formsets","title":"Formsets","text":"<p>Form collections</p>"},{"location":"builder/forms/#what-is-a-formset","title":"What is a Formset?","text":"<p>A Formset is a collection or set of forms that need to be filled together.  For e.g. an Insurance company's enrollment process can involve the Enrollment Form, Self Health Declaration and a Bank Mandate.  While these are separate forms, they still need to be completed together.  In this case, two or more forms can be designed and then grouped in a Formset.</p>"},{"location":"builder/forms/#create_3","title":"Create","text":"<p>To create a new Formset, click on the <code>Add (+)</code> icon and enter the Title and Description.  You can also choose an icon for the Formset that is used to display in the Forms App for easy identification of the Formset.</p>"},{"location":"builder/forms/#delete_2","title":"Delete","text":"<p>To delete a Formset, click on the Trashcan icon and confirm.  Only the Formset and its assignments are deleted, the Forms and submissions (data) are not deleted.</p>"},{"location":"builder/forms/#add-form","title":"Add Form","text":"<p>Select the Formset from the list and click on the card to see the list of Forms assigned to the Formset. To add new Forms, click on the <code>Add (+)</code> icon in the bottom and enter the form name to search for Forms and add them to the Formset.</p>"},{"location":"builder/forms/#remove-form","title":"Remove Form","text":"<p>To remove a Form from a Formset, click on the Trashcan icon on the Form card.</p>"},{"location":"builder/forms/#assignment-and-schedule","title":"Assignment and Schedule","text":"<p>Similar to Forms, a Formset can also be assigned to teams.  You can also create schedules for the Forms in a Formset to be filled on a periodic basis.</p>"},{"location":"builder/forms/#pdf","title":"PDF","text":"<p>Configure automatic PDF generation to be emailed to users after completion here.  This is a simple configuration to send the completed form PDF to a pre-configured set of users.  You can also maintain PDF configuration like the layout here.  The main PDF configuration is maintained in the Application Settings</p>"},{"location":"builder/forms/#documents","title":"Documents","text":"<p>Documents allows you to associate PDF, Word and other documents so that users can access them when filling out forms. These could be user guides, repair manuals etc.  Training :fa-play: video links from YouTube or Vimeo (for eg) can also be included along with URLs to online content.</p> <p>Documents can be uploaded and associated with forms in a single step.  Documents already uploaded and available can be associated with multiple forms also.  This ensures that the document is only downloaded once to the device and is available for the user from multiple forms.</p>"},{"location":"builder/forms/#environment","title":"Environment","text":"<p>Environment variables are stanadrd configurations or custom Key-Value pairs that can be associated with forms.  These key-value pairs will be accessible to the form's workflow when its submitted. It can be used to save data like API keys or other custom data on a per form basis.  Environment variables are by definition strings and can hold any string data (comma separated values, keywords, JSON strings etc)</p> <p>To add an Environment Variable click on the Add button and choose a stanadard settings or Custom to enter the variable name and its value.  You can add as many variables as needed to the Form. These environment variables can be used in workflows while executing.</p>"},{"location":"builder/forms/#standard-environment-variables","title":"Standard Environment Variables","text":"<p>Standard environment variables are used to configure the awy Forms display and work.</p> <ul> <li>client-complete-check-field - In many cases its insufficient only for a form to be 100% filled to allow completion.  In certain cases it could be dependent upon computations that need to be made on fields before which completion can be allowed.  In such cases, add a hidden field (Checkbor or other) and compute its value.  In the environment variables add a client-complete-check-field variable and set the value to the name (id) of the hidden field.  Even if the form is now 100% filled, till this flag goes true, the form cannot be completed.</li> <li>client-dashboard-display-field - Set this to the name of a form field that you want to display in the forms application home screen.  Once a field is configured, the dashboard will now display that field allowing users to easily identify a Task. external-user-fname-field - If the workflow needs to create an External user with an email that has been entered in the form, identify the first name for this user using this setting. external-user-lname-field - If the workflow needs to create an External user with an email that has been entered in the form, identify the last name for this user using this setting.</li> </ul>"},{"location":"builder/forms/#standard-variables-in-forms","title":"Standard Variables In Forms","text":"<p>There are some standard environment variables that can be used in Forms for prefilling edit fields etc.  These variables are all valid for the user currently logged into the App:</p> <ul> <li>Form ID : window.form.id</li> <li>Team form has been assigned to : window.form.team</li> <li>User Name (technical user id) : window.form.user</li> <li>First Name : window.form.firstName</li> <li>Last Name : windows.form.lastName</li> <li>Email ID : window.form.email</li> <li>Company : window.form.company</li> <li>Role: window.form.role</li> </ul>"},{"location":"builder/forms/#translations","title":"Translations","text":"<p>Enter the form translations in i18-n format to internationalize the designed forms.  Each field in the form needs to have a translation string within the language code.  The user's login language is used to determine the language in which the forms will be rendered.</p> <p>Example of a French translation for a form designed in English</p> <pre><code>{\n  \"fr\": {\n    \"Name\": \"Nom\",\n    \"Address\": \"Adresse\"\n  }\n}\n</code></pre> <p>Example of an English translation for a form designed in French</p> <pre><code>{\n  \"en\": {\n    \"Nom\": \"Name\",\n    \"Adresse\": \"Address\"\n  }\n}\n</code></pre> <p>Default Language</p> <p>If the login langauge strings are not found or login language is not specified, the App will default to English</p>"},{"location":"builder/forms/#sharing","title":"Sharing","text":"<p>Forms can be initiated by named users after login to the system.  However created forms can also be shared with external users either to review or to fill in additional data.  This sharing supports use cases where a form can be embedded on a website for website visitors to submit queries etc (anonyous), sharing forms with external vendors via email to fill in Onboarding forms, Security questionnaires etc.</p> <p>The sharing tab displays all the current shares.  Click on the <code>Add (+)</code> icon to create a new share.</p>"},{"location":"builder/forms/#public-share","title":"Public Share","text":"<p>Enter a title to identify the share and an expiry date.  A URL is then generated.  Anybody who has the URL can then access the form and fill/submit the data.</p> <p>Expiry of Link</p> <p>Once the form expires on the preset date, the URL will not be valid any longer.  This does not affect data that may have already been collected/saved in the system.</p>"},{"location":"builder/forms/#private-share","title":"Private Share","text":"<p>Enter a title to identify the share and tap on Private to enable private share.  Next enter email id of one or more people to share the form with.  You can further choose whether the user can save partial data and revisit later to complete by enabling Allow Multiple Save.  Finally you can set an expiry date.  A URL is then generated.  </p> <p>Email(s) will be sent to the people the form has been shared with. Each person gets a private URL and the filled in data can be identified and associated with the email id.</p> <p>Expiry of Link</p> <p>Once the form is completed and submitted the URL will not be valid any longer to modify data.  Users will be able to see a copy of the submitted data.  Once the form expires on the preset date, the URL will not be valid any longer.</p>"},{"location":"builder/forms/#viewing-submissions","title":"Viewing Submissions","text":"<p>Click on a private share link to view the submitted data. Clicking on a public share will show a report of all submissions that can be viewed individually.</p>"},{"location":"builder/forms/#import-export","title":"Import / Export","text":"<p>Once forms are designed in the development system and pass quality checks, the forms need to be moved to production.  This can be achieved in two ways:</p>"},{"location":"builder/forms/#export-import-file","title":"Export / Import File","text":"<ul> <li>From the source system, select the Export option.</li> <li>Choose the list of forms to export or select all</li> <li>Export and download the file</li> <li>Login to the destination system and select the Import File option.</li> <li>Select the Publish option to publish the imported forms immediately.  If not selected they will remain in Draft mode and need to be manually published</li> <li>Select the Overwrite existing drafts during import to overwrite any forms that may be in draft mode on the destination server.  If this option is not selected these forms will be silently skipped.</li> <li>Upload the file downloaded from the source system previously and choose Import to import all the forms</li> <li>The export option can also be used to make a backup copy of the forms</li> </ul>"},{"location":"builder/forms/#import-from-remote-system","title":"Import From Remote System","text":"<p>You can also directly import from the source system directly</p> <ul> <li>Login to the destination system</li> <li>Choose the Import -&gt; Remote System option</li> <li>Enter the URL, User and Password for the remote (source) system</li> <li>Choose Import to import the required forms directly</li> </ul> <p>Workflows</p> <p>When forms are exported/imported, the related workflows will also be included.  This ensures that when a form is imported related workflows are also imported and can straight away be utilized in the production system.  However configuraitons for the associated systems needs to be maintained separately in the Production and Development systems.</p> <p>Assignments</p> <p>Form assignments are not copied over as teams and assignments in Development can be very different from Production. You can configure as required in the destination system.</p>"},{"location":"builder/glossary/","title":"Glossary","text":""},{"location":"builder/glossary/#glossary","title":"Glossary","text":"No Term Definition 1. Turbo Apps Builder The online App that manages the forms, workflows and its usage 2. Turbo Forms App The Web and Mobile forms application that users can use to fill forms 3. Users Provisioned users in the system who can be assigned forms to fill and use the application to fill forms 4. Roles Users can have one of the following roles in the applicationAdmin - These users can provision users, design forms and assign them, etc.Manager - Managers can access data filled by their team members and approve themUser - Users who can fill and submit formsNote:  Users of any role can use the Forms application and fill forms 5. Teams Teams are a set of users belonging to a logical grouping. This can be corporate teams like HR or maintenance teams etc. Users can belong to multiple teams. 6. Category Categories help to group Forms together.  Each category can have as many forms as desired. 7. Forms Forms are filled by users and capture data in the field.  Completed forms can be submitted for review and other advanced workflows by users. 8. Nested Forms Reusable form snippets that are designed independently and can be embedded in other forms. Changes to nested forms can be simultaneoulsy published to forms embedding them. 9. Formsets Formsets are a logical group or set of forms that belong together.  For e.g. a stockbroker enrollment form and a bank mandate are two individual forms that need to be filled together and make a Formset. 10. Master Data Master data are the fields/sets of data that do not change often and are referred to in forms.  For e.g. in a maintenance form, equipment is referred to and comprises master data.  This master data can be downloaded from external systems like SAP, Databases etc. 11. Workflows No code designer to generate workflows to run approvals, read master data and publish data to systems like Sharepoint, SAP etc.  Other systems include SQL compliant databases, OData, Microsoft Active Directory and many more.  Workflows can be run on form save, completion, fetch results online in forms and for downloading master data. 12. Smart Data Component Control that enables forms to read or write data online.  Also called SDC 13. Environment Key value pairs that can be associated with forms for use in the forms or workflows like API tokens etc 14. Documents Documents that can be uploaded and associated with forms.  Users can access these documents like repair manuals, training videos etc while filling out the forms"},{"location":"builder/home/","title":"Home","text":""},{"location":"builder/home/#home","title":"Home","text":"<p>Turbo Apps Suite Home page either displays a set of icons or forms insights / dashboards.  On the Turbo Cloud landscape dashboards are enabled by default for all tennats.  On premise installations are setup as per customer requirements.</p>"},{"location":"builder/home/#access-panel","title":"Access Panel","text":"<p>Icons for all the sub-modules within the Turbo Apps Builder are displayed and can be used to navigate directly to the respective pages.  This is displayed if Analytics / Dashboards are not enabled for your setup.</p>"},{"location":"builder/home/#analytics-dashboards","title":"Analytics / Dashboards","text":"<p>The Turbo Apps Suite uses [Apache Superset] (https://superset.apache.org/) to display dashboards that provide deep insights into the data collected.  Turbo Apps ships with a default dashboard that tracks:</p> <ul> <li>Number of users provisioned</li> <li>Active users (logged into the system in the last 30 days)</li> <li>Forms In Progress</li> <li>Forms Completed</li> <li>External Submissions of Forms</li> <li>Categories : Pie chart split of all the Form Categories where forms have been filled</li> <li>Forms Submitted : All the forms that are being filled by users</li> <li>Submissions by Users : Users submitting forms across timeline</li> <li>Approvals Submitted</li> </ul> <p>Drilldown</p> <p>The charts are enabled for drilldown.  Click on any Category for example to filter based on that Category or Click on a User to filter on submissions by that user.  Click on multiple charts to filter on all the conditions.  To clear the filter click on the blue clear icon on the charts</p>"},{"location":"builder/home/#switch-dashboard","title":"Switch Dashboard","text":"<p>If multiple dashboards are enabled for youy company, you can click on the Switch icon shown at the bottom right of the screen.  Once you click on the button, you can switch to any dashboard of your choice. If there is only the single system dashboard this button will not be displayed, talk to Unvired Support to enabled additional dashboards as required.</p> <p>Default</p> <p>Whenever the home page is displayed, the default dashboard is shown.  You can change the default dashboard in the (Dashboards Page)[dashboards.md]</p>"},{"location":"builder/masterdata/","title":"Master Data","text":""},{"location":"builder/masterdata/#master-data","title":"Master Data","text":"<p>Master Data is typically data that does not change often and is referred to in filling out and completing forms.  For e.g. an inspection form will require details of the Equipment being inspected or maintained.  The equipment information need not be entered by the user as this may lead to erroneous data capture but can be selected from a list that is displayed in the form.  Note that Master Data can only be used in Select (Drop Down) controls.  Additionally custom actions can be initiated when a particular item is chosen in the list.</p> <p>Master Data is also maintained in the forms system.  However, in most cases, the data is not \"owned\" by the system but is only a replica of data from another system.  For e.g. customers running SAP might have all their equipment maintained in SAP.  A microservice in the Forms platform can be used to pull the Equipment Master Data and update the Forms database or alternatively the Master Data Forms REST API can be used to push data to the system from SAP.   In cases where the data is more or less static and not voluminous (for e.g. the different plants that are to be inspected) the data can also be maintained manually in the Forms Master Data database.</p>"},{"location":"builder/masterdata/#design-master-data-entities","title":"Design Master Data Entities","text":"<p>In the Turbo Apps Builder, Master Data entities are also created by designing them similar to forms.  For e.g. to define an Equipment to use in forms, you can design a Master Data form with an Equipment Number and Equipment Name fields. </p> <p>This approach of designing Master Data entities using the same Forms designer, provides maximum flexibility for usage in forms.  Data models in backend systems such as SAP can be complicated and hierarchical. Forms require simple, flat structures.  The flat structures with limited fields can be designed in the Turbo Apps Builder and data populated so that the forms can leverage them. </p>"},{"location":"builder/masterdata/#key-field","title":"Key Field","text":"<p>Master Data entities need Key Field to be identified during design.  Add a textfield to the mster data design and select the Unique property in the the Validation tab to indicate a Key Field.</p> <p>One Unique Field Only</p> <p>Remember to set Unique for only any one textfield in the Master Data design</p>"},{"location":"builder/masterdata/#create","title":"Create","text":"<p>To create a Master Data entity, click on the Add (+) button at the bottom of the screen.  Enter the Master Data details required and add.  Once added, the entity can then be designed.  The process is identical to designing Forms.  Remember to keep the Master Data entity as simple as possible and restrict the fields required.</p>"},{"location":"builder/masterdata/#delete","title":"Delete","text":"<p>If a Master Data entity is not required any longer, you can delete it. </p> <p>Forms need to be redesigned</p> <p>Be careful when doing this as Forms using this will stop working.  You will need to ensure that the forms do not refer to this Master Data any longer.</p>"},{"location":"builder/masterdata/#maintaining-master-data","title":"Maintaining Master Data","text":"<p>Master Data can be maintained in many ways,  The mechanism chosen depends on where the Master Data resides.</p>"},{"location":"builder/masterdata/#maintain-in-forms-database","title":"Maintain In-Forms Database","text":"<p>In cases where the data is more or less static and not voluminous the data can also be maintained manually in the Forms Master Data database.  Administrators can view, add and update Master Data directly in the Turbo Apps Builder. Select the entry to view or update and the Master Data entry form is displayed to maintain.  You can also click on the <code>Add (+)</code> icon to add Master Data records directly.</p>"},{"location":"builder/masterdata/#integrate-data-from-other-systems-using-workflows","title":"Integrate data from other systems using Workflows","text":"<p>In most cases, the data is not \"owned\" by the Forms App but is only a replica of data from another system.  A workflow can be designed to pull the Master Data and update the Forms database (stage) for further distribution to the Forms users. Alternatively workflows can bypass caching and directly send data to the users device when requested.  While this ensures that there is no staging/caching of data, each time the application requires data it needs to be downloaded from the external system and can provide to be a time consuming and expensive operation. </p> <p>Data updates</p> <p>If Master Data is fetched from an external system, updating it directly may cause your changes to be lost.</p>"},{"location":"builder/masterdata/#add-master-data-to-forms","title":"Add Master Data to Forms","text":"<p>Master Data that is defined can be used in Forms.  Note that only Select fields support Master Data to be displayed and selected.</p>"},{"location":"builder/masterdata/#set-properties","title":"Set Properties","text":"<ul> <li>To add Master Data to a Form, drag and drop a Select or a Select Barcode (Select dropdown that allows to also scan a barcode) component. </li> <li>Advanced properties for the component are now displayed.  Navigate to the Data tab and change the Data Source Type to Master Data. </li> <li>Enable Lazy Load Data if you expect to have a lot of entries in the master data</li> <li>Set the Masterdata List to the name of the Master Data entity</li> <li>In the LabelProperty choose the field from the Masterdata that will be displayed to the user</li> <li>Set the Value Property to the value that needs to stored when the form is saved</li> <li>You can also optionally set a Limit to the number of entries to display.</li> </ul> <p>Lazy Loading &amp; Limit</p> <p>If Lazy Load is enabled, then Limit number of entries will be displayed and when the user scrolls the rest of the entries will be lazy loaded.  If Lazy Loading is disabled and Limit is set then only Limit entries will ever be displayed.</p> <ul> <li>Any changes made to Master Data will be pushed to mobile devices so that users can work with the new / modified Master Data.  Users can also download it on demand from the app.</li> </ul>"},{"location":"builder/others/","title":"Miscellaneous","text":""},{"location":"builder/others/#other-topics","title":"Other Topics","text":""},{"location":"builder/others/#conflict-resolution","title":"Conflict Resolution","text":"<p>Read more on conflict resolution in the Forms Application User Guide.</p>"},{"location":"builder/others/#pdf-generation","title":"PDF Generation","text":"<p>The Forms App also provides a PDF server.  Completed forms can be converted to PDFs and saved in Document Management Systems such as Sharepoint for audit purpose, sent onward to DocuSign for a digital signature workflow etc.  The Print layout of these forms is used to convert to PDF by stripping off all style information to generate crisp and clean PDFs.</p>"},{"location":"builder/recipes/","title":"Design Recipes","text":""},{"location":"builder/recipes/#design-recipes","title":"Design Recipes","text":"<ul> <li> <p>How can I add images to forms for display only?</p> </li> <li> <p>How can I add text or notes to forms for display only?</p> </li> <li> <p>I want to reuse some parts of a form in other forms.  How do I do that?</p> </li> <li> <p>How can I design and use Nested Forms?</p> </li> <li> <p>I need autogenerated unique ids in forms.  How can I achieve that?</p> </li> <li> <p>How can I add icons to text fields and buttons?</p> </li> <li> <p>How can I hide a control based on another control's value?</p> </li> <li> <p>How can I calculate values for fields?</p> </li> <li> <p>Can I remove the padding for a column?</p> </li> <li> <p>Can I make datagrid as a card layout on a mobile screen?</p> </li> <li> <p>How can I use custom CSS classes to style form components?</p> </li> <li> <p>I need my forms internationalised.  Where do I maintain translations?</p> </li> <li> <p>I want my forms to be responsive.  How do I do that?</p> </li> <li> <p>Signatures appear stretched in PDFs.  How can I fix that?</p> </li> <li> <p>How to work with HTML component?</p> </li> <li> <p>How can I customize look and feel with CSS?</p> </li> <li> <p>How do I use HTML Attributes?</p> </li> </ul>"},{"location":"builder/recipes/#how-can-i-add-images-to-forms-for-display-only","title":"How can I add images to forms for display only?","text":"<ul> <li>Drag and drop the HTML component from Layout Category and use img tag found in the display tab -&gt; HTML Tag</li> <li>Get the base64 image data for the image to embed.  For this you can use a service similar to https://www.base64-image.de/.  Make sure image is compressed so that form loads quick</li> <li>Specify src attribute and assign base64 encoded image data to src attribute (Display Tab -&gt; Attributes)<ul> <li>Attribute: src and Value: the base64 image string</li> </ul> </li> </ul>"},{"location":"builder/recipes/#how-can-i-add-text-or-notes-to-forms-for-display-only","title":"How can I add text or notes to forms for display only?","text":"<ul> <li>Drag and drop the Content Component from 'Layout' Category</li> <li>Enter text or note</li> <li>Select required font family and font size for styling at header</li> <li>Image and Media can also be added</li> </ul>"},{"location":"builder/recipes/#i-want-to-reuse-some-parts-of-a-form-in-other-forms-how-do-i-do-that","title":"I want to reuse some parts of a form in other forms.  How do I do that?","text":""},{"location":"builder/recipes/#how-can-i-design-and-use-nested-forms","title":"How can I design and use Nested Forms?","text":"<ul> <li>You need to create form of type 'nested form' and design the part of the form you want to reuse and publish that</li> <li>Design the form with reusable components and save the nested form and publish</li> <li>Now create a new form with type \"Form\" or open an existing form design where you need it to be included</li> <li>Drag and drop the \"Smart Nested Form\" component from the \"Turbo Premium\" category on to the form</li> <li>In the Nested Form component properties, select the Form Tab and then choose the nested form from the dropdown to include</li> </ul> <p>Publishing nested forms</p> <p>Any changes to the nested form when published will also change in the forms that include it</p>"},{"location":"builder/recipes/#i-need-autogenerated-unique-ids-in-forms-how-can-i-achieve-that","title":"I need autogenerated unique ids in forms.  How can I achieve that?","text":"<ol> <li> <p>Using Smart Id Component</p> <ul> <li>Drag and drop the \"Smart Id\" Component from the Turbo Premium Category</li> <li>Specify the Patterns under Patterns field in Data tab.  See the Smart ID component for more details</li> <li>The ID will be automatically generated by the system</li> </ul> </li> <li> <p>Using Javascript (if you want to custom create an ID on the client immediately)</p> <ul> <li>Use Text Field or Number component and check Disabled checkbox below in Display tab</li> <li>Under Data tab - Custom Default Value, use the code like the samepl below to generate random value for e.g. you can use something like:</li> </ul> </li> </ol> <pre><code>  value = (Math.random() * 100000) + 1;\n</code></pre>"},{"location":"builder/recipes/#how-can-i-add-icons-to-text-fields-and-buttons","title":"How can I add icons to text fields and buttons?","text":"<p>Use prefix to add icons 1.  text-field - Add icon tag in prefix or suffix field in display tab</p> <pre><code>  &lt;i class='fa fa-barcode'&gt;&lt;/i&gt;\n</code></pre> <ol> <li>button -  Add fontawesome icon class in Left icon or Right icon field under dispaly tab</li> </ol> <pre><code>ex: fa fa-barcode \n</code></pre>"},{"location":"builder/recipes/#how-can-i-hide-a-control-based-on-another-controls-value","title":"How can I hide a control based on another control's value?","text":"<p>Select the Conditional tab of the component</p> <ol> <li> <p>Under Simple Section</p> <ol> <li>For \"This component should display\" - Set to True to show the component or False to hide</li> <li>For \"When the form component\" - Select the required component from the list of form components that are displayed</li> <li>For \"Has the value\" - Set the value of the component selected in step (b) above that should control the display. If the value matches the configured value, the component will show or hide based on the configuration for step (a) above</li> </ol> </li> <li> <p>You can also use Advanced Condition to configure a more \"programmatic\" rule if a more complex condition needs to be satisfied</p> <ol> <li>Use any computation to decide if the component needs to show or hide</li> <li>Set that value to a variable \"show\"</li> </ol> </li> </ol> <pre><code>  // key1 and key2 are API key name of two components\n  // If the two values are equal the component may be displayed (true) and if not hidden (false)\n\n  show = (data.key1 == data.key2);\n</code></pre>"},{"location":"builder/recipes/#how-can-i-calculate-values-for-fields","title":"How can I calculate values for fields?","text":"<p>You can calculate a specific value and set it for a field.  Select the Data tab for that component and under Calculated Value, write the required code to set the value</p> <p>For e.g. lets assume that a form has three number fields.  The API names of these fields are num1, num2 and num3.  The requirement is to set the value of the third number field to the sum of the first two number fields</p> <pre><code>  // We want to set value of num3\n  value = data.num1 + data.num2;\n</code></pre>"},{"location":"builder/recipes/#can-i-remove-the-padding-for-a-column","title":"Can I remove the padding for a column?","text":"<p>In the column component, under the Conditional tab navigate to Advanced condition and put in the following code</p> <pre><code>var ele = document.querySelectorAll(`#${instance.id}`);\nele.forEach((e)=&gt;{console.log('e ', e.children);\ne.children[0].style.padding = '0px 2px'});  // Can set padding as required\n</code></pre>"},{"location":"builder/recipes/#can-i-remove-the-margin-for-a-column","title":"Can I remove the margin for a column?","text":"<ul> <li>By default -15 margin is present for a column</li> <li>It can be removed by using a Bootstrap css class</li> <li>Navigate to the Display Tab Custom css class and set it to m-0</li> </ul> <p>https://getbootstrap.com/docs/4.4/utilities/spacing/</p>"},{"location":"builder/recipes/#can-i-make-datagrid-as-a-card-layout-on-a-mobile-screen","title":"Can I make datagrid as a card layout on a mobile screen?","text":"<p>To display the datagrid as a card layout, set the custom css class name to 'datagridcard'  (you can fin the setting under Display tab)</p>"},{"location":"builder/recipes/#how-can-i-use-custom-css-classes-to-style-form-components","title":"How can I use custom CSS classes to style form components?","text":"<p>Add bootstrap predefined css class in  custom CSS class field found in the Display tab. https://getbootstrap.com/docs/4.4/utilities/</p>"},{"location":"builder/recipes/#i-need-my-forms-internationalised-where-do-i-maintain-translations","title":"I need my forms internationalised.  Where do I maintain translations?","text":"<ul> <li>Choose the form and then select Translations</li> <li>Add all label translations in json structure as mentioned below for each language using the standard 2 letter language key</li> <li>Note that the attribute name in the JSON below is the label as designed in the form.  For e.g in the example below there is a \"First Name\" with the label \"First Name\" and placeholder text \"Enter your first name\". This form is designed in English (en) which is the default language.  The Spanish translation for the form can be configured as below (from Google!)</li> </ul> <pre><code>  {\n    \"en\": {\n      \"First Name\": \"First Name\",\n      \"Last Name\": \"Last Name\",      \n      \"Enter your first name\": \"Enter your first name\".\n      \"Enter your last name\": \"Enter your last name\"\n    },\n    \"sp\": {\n      \"First Name\": \"primer nombre\",\n      \"Last Name\": \"apellido\",      \n      \"Enter your first name\": \"ponga su primer nombre\".\n      \"Enter your last name\": \"ingresa tu apellido\"\n    }\n  }\n</code></pre> <p>When the user logs in they have the option to select the language.  Forms will be displayed in the selected language automatically.  However if the language is not avaialable for that form it will be displayed in the default language</p>"},{"location":"builder/recipes/#i-want-my-forms-to-be-responsive-how-do-i-do-that","title":"I want my forms to be responsive.  How do I do that?","text":"<p>The Column layout needs to be used to make the form automatically responsive.  Drag and drop the Column layout found in the 'Layout' category.  All other components can be dropped inside the column component</p>"},{"location":"builder/recipes/#when-i-capture-signatures-on-a-mobile-phone-they-appear-stretched-in-pdfs-how-can-i-fix-that","title":"When I capture Signatures on a mobile phone, they appear stretched in PDFs.  How can I fix that?","text":"<ul> <li>First add a column component in the form</li> <li>Configure it to have 3 columns</li> <li>Drag and drop the Signature component inside the first column</li> <li>Leave the width - 100% and height - 150px of the signature component at default values</li> <li>Leave the other two columns empty</li> </ul>"},{"location":"builder/recipes/#how-to-work-with-html-component","title":"How to work with HTML component?","text":"<p>Just specify the tag name in HTML Tag field under Display tab. or use tags inside Content field as mentioned in the examples</p> <p>For headers - h1, h2, h3,h4, h5, h6</p> <pre><code>  &lt;h1&gt;Header text&lt;/h1&gt;\n</code></pre> <p>Bold text - b</p> <pre><code>  &lt;b&gt;Bold text&lt;/b&gt;\n</code></pre> <p>Paragraph - p</p> <pre><code>  &lt;p&gt;A paragraph&lt;/p&gt;\n</code></pre> <p>Line Break - br</p> <pre><code>  &lt;/br&gt;\n</code></pre> <p>Horizontal Line - hr</p> <pre><code>  &lt;hr&gt;\n</code></pre> <p>Image - img</p> <pre><code>  &lt;img&gt;\n</code></pre> <p>Ordered List - ol</p> <pre><code>  &lt;ol&gt;\n    &lt;li&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;/li&gt;\n    ....\n    &lt;li&gt;&lt;/li&gt;\n  &lt;/ol&gt;\n</code></pre> <p>Unordered List - ul</p> <pre><code>  &lt;ul&gt;\n    &lt;li&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;/li&gt;\n    ....\n    &lt;li&gt;&lt;/li&gt;\n  &lt;/ul&gt;\n</code></pre>"},{"location":"builder/recipes/#how-can-i-customize-look-and-feel-with-css","title":"How can I customize look and feel with CSS?","text":"<p>Add CSS class name by navigating to the  Display tab and setting Custom CSS Class </p> <ol> <li> <p>To customize Text color choose from one of the values below: </p> <ul> <li>text-primary</li> <li>text-secondary</li> <li>text-success</li> <li>text-danger</li> <li>text-warning</li> <li>text-info</li> <li>text-light</li> <li>text-dark</li> <li>text-muted</li> <li>text-white</li> </ul> </li> <li> <p>To customize Background color choose from one of the values below:</p> <ul> <li>bg-primary</li> <li>bg-secondary</li> <li>bg-success</li> <li>bg-danger</li> <li>bg-warning</li> <li>bg-info</li> <li>bg-light</li> <li>bg-dark</li> <li>bg-white</li> </ul> </li> </ol> <p>For other properties -  https://getbootstrap.com/docs/4.0/utilities/borders/</p>"},{"location":"builder/recipes/#how-do-i-use-html-attributes","title":"How do I use HTML Attributes?","text":"<ol> <li>Attributes in HTML component Add Attributes as key-value pair by navitaing to the Display tab and adding Attributes</li> </ol> <p>| Attribute | Value | | Height    | 50% | | width     | 80% | | src       | base64 Image encoded string |</p> <ol> <li>Attributes in Layout section Add Attributes as key-value pair under Layout &gt; HTML Attributes</li> </ol> <p>| Attribute | Value | | style     | color:red;width:50%;height:60%border:none; |</p> <p>For other tags - https://www.w3schools.com/TAGS/default.ASP</p>"},{"location":"builder/reports/","title":"Reports","text":""},{"location":"builder/reports/#reports","title":"Reports","text":""},{"location":"builder/reports/#submission-report","title":"Submission Report","text":"<p>Administrators and Managers can view the all form submissions submitted by their team.  This reporting is not meant to replace or augment any analytics of form data but more for Managers and Administrators to monitor work in progress.  Data that is partially completed and submitted in the field can also be seen online so that approximate progress of the data collection can be tracked.</p> <p>If permitted, Managers can also directly make changes / corrections to data and submit.  Submission with their User ID and date is also captured.</p>"},{"location":"builder/reports/#filter-criteria","title":"Filter Criteria","text":"<ul> <li>Start Date  </li> <li>End Date  </li> <li>Form Name  </li> <li>User who has submitted the form  </li> <li>Team that has submitted the form  </li> <li>Form Status  </li> <li>Open - Forms where work has not been started yet  </li> <li>In Progress - Forms in progress where users are still entering data  </li> <li>Completed - Forms completed and finalized  </li> <li>Failed - Forms that failed due to some errors  </li> <li>Delegated - Forms where users have delegated to others  </li> <li>Cancelled - Forms that have been cancelled by users  </li> <li>Archived - Forms that have been archived  </li> <li>Delayed Submissions - Lists all those forms that are past their due date</li> </ul> <p>Click on the row or the pencil icon to view the data in the form.  Make changes if permitted.</p> <p>Editing Submissions</p> <p>Based on settings, Managers can also edit this data to make any corrections as may be required.</p>"},{"location":"builder/reports/#report-builder","title":"Report Builder","text":"<p>Report builder allows to create custom reports from form data and export them to PDF or CSV files for further processing.</p>"},{"location":"builder/reports/#list-of-reports","title":"List of Reports","text":"<p>The list of reports already defined are listed here.  The following options are available: *  Run the report and view the data *  Mark report as Favourite *  Edit report to add/modify fields and selection criteria *  You can also Share the report you have defined with other users *  Setup schedules to have periodic reports in CSV or PDF emailed to you or other users *  Copy and create other reports *  Delete the report</p>"},{"location":"builder/reports/#building-reports","title":"Building Reports","text":"<p>Buulding reports is an easy process with the Turbo Apps graphical report builder.</p> <ol> <li>To build reports, click on the <code>Add (+)</code> icon in the Report Builder list screen  </li> <li>Enter a name and a description to identify the report and click Next  </li> <li>Select the form based on which the report needs to be defined  </li> <li>Now select the fields that you need to be a part of the report from the form fields that are displayed  </li> <li>Use the Query Builder UI to add And / Or condition groups.  Note that at least one condition is mandatory</li> <li>For example if And is chosen, all condition checks within that will be combined with an AND operator.  Similarly if Or is chosen, all condition checks within that will be combined with an OR operator.</li> <li>Add as many condition groups and conditions based on field data within to make up the condition  </li> <li>Now you can preview the query to check if the right data is selected.  You can proceed to save the query or go back to make modifications and then save  </li> </ol>"},{"location":"builder/reports/#downloading-pdf-and-csv","title":"Downloading PDF and CSV","text":"<p>Reports can be exported to PDF or CSV files as required.  </p> <p>Interactively: After running the report, click on the \"Download CSV\" or \"Download PDF\" buttons Scheduled: Define a schedule to run the report.  Choose from PDF or CSV output and the users who will receive the report</p>"},{"location":"builder/settings/","title":"Settings","text":""},{"location":"builder/settings/#settings","title":"Settings","text":"<p>The Turbo Apps Builder has various options that can be configured.</p>"},{"location":"builder/settings/#general","title":"General","text":"<ul> <li>Active Form Versions Allowed: Default active form version is set as one, i.e. users will always work on the latest version of the form only. Administrators can set the active form up to five as maybe required.</li> <li>Allow Managers to Edit Submissions: Managers can be given permission to also edit submitted data if required.</li> <li>API Authentication: Use these credentials to access the Forms App REST API to retrieve the completed forms data for analytics and other processing. Click on the Eye icon to copy the API token.  The token can also be regenerated if required.</li> <li>Dashboard Admin Password: Internal use only.  Will be configured by Unvired Support Team.</li> <li>Dashboard Database Password: Internal use only.  Will be configured by Unvired Support Team.</li> <li>Login Expiry: Enter the number of days a login token should be valid (maximum 30 days) after which user has to login again.</li> <li>Password Reset Expiry: Enter the number of minutes that a password reset token should be valid (maximum 1 day) after which a new link has to be requested by user.</li> </ul>"},{"location":"builder/settings/#email","title":"Email","text":"<p>Email configuration controls both the Email server to use (Gmail, Sendgrid etc) and the templates to use in the application.  Even if not configured the System configuration will be used to send out emails.</p>"},{"location":"builder/settings/#email-server","title":"Email Server","text":"<ul> <li>Email Settings: Set up the email configuration to send emails to Users and Administrators.  For self service for users to reset their passwords, email needs to be configured.</li> </ul>"},{"location":"builder/settings/#email-templates","title":"Email Templates","text":"<ul> <li>Customize the various emails that the forms application sends out</li> <li>Template Name: Choose the name of the template to customize</li> <li>Account Creation : Instructions on how to login, choose password etc</li> <li>Sign Up : For confirming email ownership</li> <li>PDF : Email with the PDF attachment</li> <li>Admin Portal Password Change : When the Administrator resets the password for Administrators</li> <li>Admin Portal Forgot Password : When the User requests to change their password (self service)</li> <li>App Password Change : When the Administrator resets the password for App Users</li> <li>App Forgot Password : When the User requests to change their password (self service) for the Turbo Forms App</li> <li>Share Email : The email informing users of the shared form</li> <li>Form Completion Reminder : The email reminding users to complete the form</li> <li>Subject: Enter the desired subject for the email</li> <li>Template HTML: Design the email in any HTML email designing tool (many tools are available online).  Minify and optimize the HTML and copy/paste it here.  Click on Preview to preview the email template.</li> <li>Save the template when done</li> <li>Many Variables are available for including in the template that will be substituted when the mail is sent.  </li> </ul>"},{"location":"builder/settings/#macros-variables-that-can-be-used-in-the-templates","title":"\"Macros / Variables that can be used in the templates\"","text":"<p>Check Template Variables for more details.</p>"},{"location":"builder/settings/#custom-email-templates","title":"Custom Email Templates","text":"<ul> <li>Click the <code>+</code> button to create custom templates.  Provide a name, subject and the email message</li> <li>Email message can use any of the available macors/variables as described in other templates</li> <li>These templates can then be used by the SendMail Workflow to send custom mails to recipients</li> </ul>"},{"location":"builder/settings/#sms","title":"SMS","text":"<p>Turbo Apps support Twilio to send SMS notifications to external users when forms are shared.  Enter the SMS Account ID and Auth Token to enable SMS based authentication for External Users.  You can retrieve the two settings from the Twilio Console.</p>"},{"location":"builder/settings/#css","title":"CSS","text":"<p>Provide CSS classes for altering the default Bootstrap theme that is used when displaying the Forms in the Forms App.  If only a few components are being restyled, remember to enable the \"Include Bootstrap CSS in addition to the custom CSS classes below\" option.  However if the entire theme is being overridden, then disable the option so that only the custom CSS definition is used for styling.  For e.g. you can copy over any Bootswatch Theme and paste it in the CSS editor to override all styles while rendering forms.</p>"},{"location":"builder/settings/#javascript","title":"JavaScript","text":"<p>This is not required usually and should be left empty.  However for complex handling in the Forms App client, you can write custom JavaScript code that is executed on submission of form data in the Forms App.  Please do this only after Support / Review by the Unvired team as errors here can prevent your forms from being processed.</p>"},{"location":"builder/settings/#pdf","title":"PDF","text":"<p>Various PDF generation settings can be customized - Header to include - Footer to include - Paper size - Margin (left/top/right/bottom)</p> <p>Layout</p> <p>PDF layout can be controlled for each form in the form's PDF settings</p>"},{"location":"builder/settings/#customization","title":"Customization","text":"<ul> <li>Set the Company Name to show in the Title bar</li> <li>Select the Company Logo (choose a logo with appropriate colors so it will be visible in the title bar)</li> <li>Set the working days (for auto scheduling of forms)</li> <li>Save to set the application customization</li> </ul>"},{"location":"builder/settings/#about","title":"About","text":"<ul> <li>Check the version/build information for support purposes</li> </ul>"},{"location":"builder/tutorials/","title":"Tutorials","text":""},{"location":"builder/tutorials/#workflow-samples-tutorials","title":"Workflow Samples &amp; Tutorials","text":"<p>Coming Soon</p>"},{"location":"builder/userguide/","title":"Forms Design","text":""},{"location":"builder/userguide/#user-guide","title":"User Guide","text":"<p>The Forms Designer helps you build beautiful forms with a drag and drop designer.  The form can have different components arranged in different layouts.  Each control or component can be configured separately and customized.</p>"},{"location":"builder/userguide/#managing-form-contols-or-components","title":"Managing Form Contols or Components","text":"<ul> <li>Adding Form Component: Drag and drop the component you need anywhere in the form.  If you need to add it to a column or other layout, drop it within that component</li> <li>Editing Form Component: Hover over the component to display a set of options on the right.  Without moving the mouse cursor away from the component, click on the gear icon to edit its properties</li> <li>Deleting Form Component: Hover over the component to display a set of options on the right.  Without moving the mouse cursor away from the component, click on the delete icon to remove it from the form</li> </ul> <p>Note</p> <p>In the following documentation the terms Component and Field are used interchangeably to indicate a component that has been added to a form</p>"},{"location":"builder/userguide/#general-properties","title":"General Properties","text":"<p>Note: The below properties are available for most components</p> Property Description Label Enter the label that you want displayed for this component in the form Label Position Select the desired label alignment Placeholder Enter the placeholder text to be displayed Description This is additional help text that can be provided and will always be displayed below the component Tooltip The tooltip text will be displayed when a user hovers over the :fa-question-circle: icon next to the label Custom CSS class If you need to customize the control, you can add the class name here. The CSS needs to be added in the CSS Settings Hidden The component will be hidden and will not be displayed in the form (it will be visible in the designer).  Hidden form fields can be used to hold any form data for processing via JavaScript etc Hide Label Hides the label Initial Focus Sets focus to this component when form is opened Disabled Form field will be displayed but cannot be edited Table View :fa-window-close: System Field, configuration not required and will be ignored Modal Edit Select this if the component should be displayed in a popup for edit. When the user taps on the component they can edit.  This is useful for components like Signatures wherein the full mobile screen can be available to sign in a popup panel for example <p>Preview</p> <p>Check preview to see how the form component will be rendered.  You can also test the Model Edit in the preview.  The preview is online (live) and will display immediately with any changes that have been made.</p>"},{"location":"builder/userguide/#common-validation-properties","title":"Common Validation Properties","text":"Property Description Required Make the field a required field, form cannot be submitted when empty Unique Valid only for Master Data Indicates a key field Validate On Select when the validation be done for this field Error Label Error label to display when this field validation results in an error Custom Error Message Set to a custom error message if required to display Custom Validation If the standard validation is insufficient and more complex rules are required, JavaScript code can be added for validating this field JSONLogic Validation Execute custom logic using JSONLogic"},{"location":"builder/userguide/#common-api-properties","title":"Common API Properties","text":"Property Description Property Name Unique name (in the current form) to identify this field/component Field Tags Add any tag for the field, this can be used to identify the field(s) in custom logic Custom Properties Any additional properties can be configured as key-value pairs, typically not requried"},{"location":"builder/userguide/#conditional","title":"Conditional","text":"<p>Any form component can use conditional logic to hide or display it. The component can show or hide iteself based on another component that is part of the form.  The condition logic can be based on text values of other components also.</p>"},{"location":"builder/userguide/#simple-logic","title":"Simple Logic","text":"Property Description Display Set to True to show or False to hide When the form component Choose the form component that this component depends on Has the value Set the value to check for"},{"location":"builder/userguide/#advanced-conditions","title":"Advanced Conditions","text":"<p>When additional conditions need to be checked and the Simple Logic is insufficient, you can enter JavaScript code in the Advanced Conditions field to control the visibility of the component.  Visibility is controlled by setting the variable show to true or false via your computations.</p>"},{"location":"builder/userguide/#jsonlogic","title":"JSONLogic","text":"<p>You can also choose to use JSONLogic to execute your rules modelled in JSON</p>"},{"location":"builder/userguide/#logic","title":"Logic","text":"<p>Any form component can use more flexible and powerful logic to control any property, value or even change multiple properties by working with the component's schema direclty.  </p> <p>Logic is defined via a Trigger that can run Actions.  Each trigger can run one or more actions to control multiple facets of the component itself.</p> Property Description Logic Name Provide a friendly name to identify the logic's purpose Trigger Type Choose the trigger type from Simple, JavaScript, JSONLogic or an Event that is raised by a Button or other components Trigger Type: Simple Choose the other component and the value it should have Trigger Type: JavaScript Code a JavaScript snippet to control the trigger Trigger Type: JSONLogic Execute custom logic using JSONLogic Trigger Type: Event Name of the event (from a button for e.g.) that will act as the trigger Action Name Provide a friendly name to identify the action Action Type Choose the action type from Property, Value or merging component schema Action Type: Property Choose the property that needs to be changed and choose the value to set it to Action Type: Value Code a JavaScript snippet to compute the value Action Type: Merge Schema Advanced.  You can make changes to multiple properties here via JSON definition <p>Remember to save the Action(s) and Logic</p>"},{"location":"builder/userguide/#basic-controls-components","title":"Basic Controls / Components","text":""},{"location":"builder/userguide/#textfield","title":"Textfield","text":"<p>Use a Textarea component to accept single line text input  </p> Property Description Prefix Enter the text to show before a field such as currency sign like $.  This can also be used to show a font-awesome icon in the control Suffix Enter the text to show after a field.  This can also be used to show a font-awesome icon in the control Input Mask An input mask provides a predefined format for data entry. Use 9: numeric, a: alphabetical and *: alphanumeric Multiple Values Allows to enter multiple values for this textfield Default Value Default value for the textfield Show Character Counter Displays the character count, useful to limit to a fixed number of characters Allow Spellcheck Enable spell checker Show Word Counter Displays the word count, useful to limit to a fixed number of words Persistent :fa-window-close: System Field, configuration not required and will be ignored Input Format Sanitize the input to plain text, HTML or raw data Protected :fa-window-close: System Field, configuration not required and will be ignored Database Index :fa-window-close: System Field, configuration not required and will be ignored Text Case Control what case the text is entered in Encrypted :fa-window-close: System Field, configuration not required and will be ignored Redraw On Choose the component that controls the redraw of this component Clear Value When Hidden When a value is hidden, clear it Custom Default Value Code a JavaScript snippet to compute the value Calculated Value Code a JavaScript snippet to compute the value Calculate on Server :fa-window-close: System Field, configuration not required and will be ignored Allow Manual Override of Calculated Value Allow user to change the calculated value Showing a Font Awesome Question icon as a prefix/suffix <p><code>&lt;i class='fa fa-question'&gt;&lt;/i&gt;</code> </p>"},{"location":"builder/userguide/#textarea","title":"Textarea","text":"<p>Use a Textarea component to accept multi line text input  </p> Property Description Prefix Enter the text to show before a field such as currency sign like $.  This can also be used to show a font-awesome icon in the control Suffix Enter the text to show after a field.  This can also be used to show a font-awesome icon in the control Multiple Values Allows to enter multiple values for this textarea Default Value Default value for the textarea Show Character Counter Displays the character count, useful to limit to a fixed number of characters Allow Spellcheck Enable spell checker Show Word Counter Displays the word count, useful to limit to a fixed number of words Rows Number of rows to display Editor Type of editor to use for the textarea Auto expand Textarea expands automatically as the user types Persistent :fa-window-close: System Field, configuration not required and will be ignored Input Format Sanitize the input to plain text, HTML or raw data Protected :fa-window-close: System Field, configuration not required and will be ignored Database Index :fa-window-close: System Field, configuration not required and will be ignored Text Case Control what case the text is entered in Encrypted :fa-window-close: System Field, configuration not required and will be ignored Redraw On Choose the component that controls the redraw of this component Clear Value When Hidden When a value is hidden, clear it Custom Default Value Code a JavaScript snippet to compute the value Calculated Value Code a JavaScript snippet to compute the value Calculate on Server :fa-window-close: System Field, configuration not required and will be ignored Allow Manual Override of Calculated Value Allow user to change the calculated value"},{"location":"builder/userguide/#number","title":"Number","text":"<p>Use a Number component to accept numeric input</p> <p>The properties are similar to those configured for a Textfield</p> Property Description Minimum Value Minimum value to accept Maximum Value Maximum value to accept"},{"location":"builder/userguide/#password","title":"Password","text":"<p>Use a password component to accept secret inputs.  While they are not diaplyed in the UI they are submitted as clear text to the server.  Make sure server runs only in https mode to ensure data is secure during transit</p> <p>The properties are similar to those configured for a Textfield</p>"},{"location":"builder/userguide/#checkbox","title":"Checkbox","text":"<p>Use a checbox input to accept True/False values or Radio inputs to accept one of many values</p> Property Description Label Width Width of the label in % Label Margin Margin of the label in % Input Type Checkbox or Radio Input Type: Radio Specify Key / value for label and value Inline layout Controls the display of the control and the text"},{"location":"builder/userguide/#selectboxes","title":"Selectboxes","text":"<p>Use a select box input to accept multiple True/False values</p> Property Description Values Add key/value pairs for each select box"},{"location":"builder/userguide/#select","title":"Select","text":"<p>Use a select (or dropdown list) to allow user to select one or more inputs from a prefilled list</p> Property Description Data Select the type of data to display in the list Data: Values Enter key/va;ue pairs to display in the select list Data: URL This will work only when online. Enter a URl that returns data in the required format Data: Master data Check the Master Data help doc Data: Custom Code JavaScript logic to compute the values Data: Raw Json Enter JSON data directly to be displayed in the list Enable Static Search Allow user to search entries Search threshold How exact the search needs to be. 0 for exact match and 1 for a loose match Use exact search Disabled Search threshold ChoiceJS options The ChoiceJS component is used for displaying the list.  Additional options from ChoiceJS can be configured here"},{"location":"builder/userguide/#radio","title":"Radio","text":"<p>Use a radio input to accept one of many values</p> <p>The properties are similar to those configured for a Checkbox where Input Type is set to Radio</p>"},{"location":"builder/userguide/#button","title":"Button","text":"<p>Add a button to perform a certain action when the user clicks on it</p> Property Description Action Choose from Submit, Smart Data Component, Event, Custom or Reset (other options are for future use) Action: Submit Do not set to this.  The form already has a Submit action button added automatically by the designer Action: Smart Data Component Check the Smart Data Component docs Action: Event Raise a custom event for other logic to run Action: Custom Code a JavaScript snippet to execute on button click Action: Reset Resets the form Theme Type of button to display Left Icon Enter the Font Awesome icon to display on the left side such as fa-question Right Icon Enter the Font Awesome icon to display on the right side such as fa-question Disable on form invalid Disables the button when there are any validation errors in the form.  Missing required fields is a good example of a validation error"},{"location":"builder/userguide/#advanced-components","title":"Advanced Components","text":""},{"location":"builder/userguide/#email","title":"Email","text":"<p>Use an Eamil component to accept a format validated email</p> <p>The properties are similar to those configured for a Textfield</p>"},{"location":"builder/userguide/#url","title":"Url","text":"<p>Use a URL component to accept a format validated URL</p> <p>The properties are similar to those configured for a Textfield</p>"},{"location":"builder/userguide/#phone-number","title":"Phone Number","text":"<p>Use a Phone number component to accept a format validated phone number</p> <p>The properties are similar to those configured for a Textfield</p>"},{"location":"builder/userguide/#tags","title":"Tags","text":"<p>Use a Tags component to accept multiple tags in the form</p> <p>The properties are similar to those configured for a Textfield</p> Property Description Delimiter Choose the delimiter between tags"},{"location":"builder/userguide/#address","title":"Address","text":"<p>Use an Address component to accept an address and validate it</p> <p>The properties are similar to those configured for a Textfield</p> <p>The Provider tab allows you to configure the provider for validation</p>"},{"location":"builder/userguide/#datetime","title":"Datetime","text":"<p>Use a Datetime component to accept a Date and Time from the user</p> <p>The properties are similar to those configured for a Textfield</p> Property Description Display in timezone Choose from viewer, UTC etc Use Locale Use locale settings to display date and time Allow Manual Input Allow user to enter date/time manually Format Date/Time format <p>In addition the Date and Time tabs control the date and time configuration individually</p>"},{"location":"builder/userguide/#day","title":"Day","text":"<p>Use a Day component to accept a day/month/year in the form</p> <p>The properties are similar to those configured for a Datetime</p> <p>In addition the Day, Month and Year tabs control the configuration individually</p>"},{"location":"builder/userguide/#time","title":"Time","text":"<p>Use a Time component to accept a time in the form</p> <p>The properties are similar to those configured for a Datetime</p>"},{"location":"builder/userguide/#currency","title":"Currency","text":"<p>Use a Curreny component to accept a currency value in the form</p> <p>The properties are similar to those configured for a Number</p>"},{"location":"builder/userguide/#survey","title":"Survey","text":"<p>Use a Survey component to include a Survey of questions in the form</p> Property Description Questions Add the question text and the value to submit Values Add as many responses as needed for each question.  For e.g. in a custmer satisfaction survey it could Be Excellent, Satisfactory, Needs Improvement"},{"location":"builder/userguide/#signature","title":"Signature","text":"<p>Use a Signature component to enable users to add a digital signature to the form.  Users can either draw their signature on mobile (with a mouse on desktop) or simply Click to Sign their name.  Signatures are embedded directly into the form and rendered as is in PDFs and also while printing.</p> Property Description Width Width of the signing panel in pixels or % Height Height of the signing panel in pixels or % Background Color Background color (rgb or short codes like black) of the signing panel Pen Color Pen color (rgb or short codes like black) for the signing panel"},{"location":"builder/userguide/#layout","title":"Layout","text":""},{"location":"builder/userguide/#html-element","title":"HTML Element","text":"<p>HTML elements allow to add HTML snippets directly to the form.  You can include any valid HTML</p> Property Description HTML Tag The tag for this HTML element, default <p></p> CSS Class Optional Bootstrap class Attributes Add Attribute/Value pairs that are valid for the chosen HTML Tag Content The actual HTML content to include Custom CSS Class Custom CSS class if any. Custom CSS needs to be added in the CSS Settings"},{"location":"builder/userguide/#content","title":"Content","text":"<p>Content allows to add any text to the form.  This could be notes for the user or any help text etc.  This data is not submitted to the server when the form is completed.  Enter the data to be displayed in the editor and format as required.</p> <p>No additional configuration required.</p>"},{"location":"builder/userguide/#columns","title":"Columns","text":"<p>Add a columns layout to the form to design a responsive form.  The maximum width is 12 and you can add as many columns as needed to make up that total.  For e.g. 2 columns of 6 width or 3 columns of 4 width etc. Also columns help to design responsive elements in the form.  For e.g. on a mobile form the screen would adjust to 1 column width automatically to show all elements vertically.</p> Property Description Column Properties Number of columns Auto adjust columns Adjust based on content Hide column when children hidden Hides the column if the child components within are hidden.  Useful to hide an entire column and save space on screen <p>Add Components</p> <p>Once the column layout is added to the form, drag and drop other components into the columns.</p>"},{"location":"builder/userguide/#fieldset","title":"Fieldset","text":"<p>A fieldset can be used to create a title area as part of the form. This can be placed inside other Layout components or in between lots of data fields. Other components can be added into this layout.  The data from the fieldset is directly submitted as part of the form and not under a separate key.</p> Property Description Legend The Legend appears prominently at the top of the Fieldset layout"},{"location":"builder/userguide/#panels","title":"Panels","text":"<p>Panels can be used to create collapsible sections as part of the form. Other components can be added into the panel layout.</p> Property Description Collapse Allow panel to be collapsed or not Initially Collapsed Panel displays collapsed when form opens"},{"location":"builder/userguide/#table","title":"Table","text":"<p>A table can be used to create a tabular section as part of the form. Other components can be added into the cells of the table.  For web view this is suitable but Tables are not responsive and its recommended instead to use a Column layout</p> Property Description Rows Number of rows Columns Number of columns Clone Row Components If checked, the components from the first row are copied to all the other rows Cell Alignment Choose the desired alignment Striped Table styling with stripes Bordered Table styling with border Hover Highlight a row on hover Condensed Condensed table"},{"location":"builder/userguide/#tabs","title":"Tabs","text":"<p>Tabs layout can be used to create a set of Tabs as part of the form. Other components can be added into the individual tabs.  Use tabs when a lot of data has to be entered and the form should not have a \"busy\" view.</p> Property Description Tabs Add the Tab name and the key"},{"location":"builder/userguide/#well","title":"Well","text":"<p>A Well is a Bootstrap well that can be added to the form for a simple layout container.  Add components into the well to group them together.</p> <p>No additional configuration required.</p>"},{"location":"builder/userguide/#hidden","title":"Hidden","text":"<p>A Hidden component is not displayed.  It can be used to compute a value using JavaScript and the computed value will be submitted to the server.  The value will not be displayed in the client.</p> <p>No additional configuration required.</p>"},{"location":"builder/userguide/#container","title":"Container","text":"<p>A Container is similar to a Fieldset that can be added to the form for a simple layout container.  Add components into the well to group them together.  The only difference is that the submitted data is grouped under the Container API key.</p> <p>No additional configuration required.</p>"},{"location":"builder/userguide/#datamap","title":"Datamap","text":"<p>Data Map allows to collect a variable number of key / value pairs of data</p> Property Description Label for Key column Label to display Disable Adding/Removing rows If set, the Add and Delete button are hidden.  Useful to collect a fixed number of rows of data Show Key Column before value Displays key column and then value column"},{"location":"builder/userguide/#datagrid","title":"Datagrid","text":"<p>Data Grids allow users to add multiple components on to a line item grid. Add multiple components as required inside of the Data Grid. Datagrids have the flexibility to collect a variable number of rows while filling in data and is best suited for data sets like order items, inspection observations etc.</p> <p>Any number of grids can be added within a form which is especially useful when needing the ability to add or duplicate multiple fields sets.</p> Property Description Disable Adding/Removing rows If set, the Add and Delete button are hidden.  Useful to collect a fixed number of rows of data Allow Reorder Move rows up and down to change their order Conditional Add Button Determine with JavaScript when the Add button is displayed Add Another Text Text to display to add another Add Another Position Choose where to display the button Default Open Row Displays open rows Equal Column Width Equal column width Enable Row Groups Choose if rows need to be grouped together Initialize Empty Start empty Minimum Length Minimum number of rows Maximum Length Maximum number of rows"},{"location":"builder/userguide/#editgrid","title":"Editgrid","text":"<p>Edit Grids allow users to add multiple components on to a line item grid. Add multiple components as required inside of the Edit Grid. Editgrids have the flexibility to collect a variable number of rows while filling in data.  The grid as such displays data read only and provides an edit icon to edit all the data.</p> Property Description Disable Adding/Removing rows If set, the Add and Delete button are hidden.  Useful to collect a fixed number of rows of data Open First row when Empty Open row when empty Templates Header and Row templates can be customized and defined based on the example Add Another Text Text to display to add another"},{"location":"builder/userguide/#tree","title":"Tree","text":"<p>Similar to other grid layouts which hold other controls</p>"},{"location":"builder/userguide/#turbo-premium","title":"Turbo Premium","text":""},{"location":"builder/userguide/#smartid","title":"SmartID","text":"<p>SmartID can be used in a form to generate a unique ID for each form when it is created.  The template for the ID can be configured flexibly.  Counter should mandatorily be part of the ID template.</p> Property Description Pattern Create custom numbers by specifying a pattern. Available variables: ${counter} - Number, ${day} - 01 to 31, ${month} - 01 to 12, ${year} - 2021.  For example, ${year} - ${counter} would be converted to 2021-00001 if zero prefix is true Start Counter The number to start generating from <p>One ID Per Form</p> <p>Remember to add only one SmartID per form</p>"},{"location":"builder/userguide/#barcode","title":"Barcode","text":"<p>Many Forms like Inventory count etc. require Barcode scanning functionality. Any Barcode can be scanned and the scanned text copied to a text field. </p> <p>The properties are similar to those configured for a Textfield</p> Property Description Update Value to Scanned Barcode Set the barcode text scanned to the textfield Trigger Smart Data Component Raises an event to the selected Smart Data Component so that the SDC can download the requried data. Check the Smart Data Component docs"},{"location":"builder/userguide/#selectbarcode","title":"SelectBarcode","text":"<p>Barcode scanning functionality can also be attached to a Select (dropdown) field.  Use a Select Barcode component to enable scanning in a select choice (dropdown) list.  The scanned text is used to automatically select the correct item in the list.  This is useful when scanning equipment for e.g. and selecting associated details automatically.</p> <p>The properties are similar to those configured for a Select</p>"},{"location":"builder/userguide/#smartdata","title":"SmartData","text":"<p>Use a Smart Data Component (also referred to as SDC) when data needs to be fetched online from a .  This allows you to online fetch data from backend systems using Workflows and updating the form.</p> Property Description Trigger on form init Run the workflow when the form is initialized when opened (run once) Triggered by form component Triggered by another form component such as Barcode Select and Button Event Trigger on data change Trigger when the data in the selected component changes Post executing fetch API Section determines actions to take after SDC is run and data fetched.  This can be used to chain flows in the form and update other fields or initiate other SDC after this has run Fire Event Name of event that must be fired after the SDC has run JavaScript Custom JavaScript code snippet that needs to be executed after the SDC has run Datasource Type Select from Workflow or URL and provide additional details <p>Pro Tip</p> <p>Creating a form and assigning a Smart Data Component to it is a 2 Step Process </p> <ul> <li>Create form without the SDC but add all the other remaining fields  </li> <li>Create the SDC Workflow using the form  </li> <li>Return to the design view of the form  </li> <li>Add a new SDC component  </li> <li>Associate the newly created Workflow to the SDC  </li> </ul>"},{"location":"builder/userguide/#smarttable","title":"SmartTable","text":"<p>Use a Smart Table component to show data in a responsive tabular form.  Also displays nested data.  Typical use cases include running an SDC and populating data in the Smart Table based on user input like get list of Approvals to approve etc.</p> <p>Note:  The powerful Tabulator control is used for this purpose.  For additional information check the Tabulator docs.</p> Property Description Columns Layout Mode Choose the display mode for columns Responsive Columns Layout Choose the desired layout Column Grouping If columns are grouped, the required alignment Frozen Columns Freeze the first column from scrolling Filter Header Allow filtering each column Movable Rows Allow moving rows to change order Multiselect Allow multiselect of table rows Add action button to each row Adds an icon button to click and perform any action Column Selection Menu Allows to show or hide columns Columns Configure the columns to display Column Header Label to display, value identifies data field to display, Allow edit or not. Set Item Headers Add this configuration if you have a nested item table to display <p>Enabling Column Groups</p> <p>To enable column groups, enter the group name and column name separated by a comma in the header field.  For e.g, Name, First Name, Last Name will have one grouped column Name with two separate columns First Name and Last Name.  And in value field enter fname,lname to associate the data field fName with First Name and lName with Last Name.  Note that there are 3 entries in the label and only 2 in the value since the first label is the Group label.</p>"},{"location":"builder/userguide/#file","title":"File","text":"<p>Use a File component to attach files, pictures from camera etc to the form.</p> Property Description Storage Choose Smart Storage for the most optimized storage, or BASE64 Display as Images Thumbnails will be displayed Upload only Use to only upload files Enable Web Camera Enable capturing images via camera Change Default Compression Achieve better transmission speeds and optimizations by enabling this and setting the desired compression size and maximum Height or Width.  The compressor will choose the most appropriate settings between them to performa  lossless compression File Types Add the list of file types that can be attached File Minimum Size File Minimum Size File Maximum Size File Maximum Size <p>Annotations</p> <p>Once the image is captured in the form, a powerful cropper and annotator are made available by default to markup the image for further details</p>"},{"location":"builder/userguide/#smartnestedform","title":"SmartNestedForm","text":"<p>Use to nest another form within this form.  This allows to reuse Nested Forms across forms and also to propagate changes to nested forms to all forms by maintaining once.</p> Property Description Form Choose the nested form Form Version The current nested form version and comment is displayed Form Update The new nested form version and comment if any is displayed and allows to update <p>Updates to Nested Form</p> <p>When a nested form is changed and published, it does not automatically updated in all forms where it is used.  You can either update it individually from within the form or Update all by going to the detail view of the Nested Form.</p> <p><sub><sup>Note: The builder embedded is based on an opensource builder (Apache licensed) from form.io.  This has been enhanced and customized by Unvired for Enterprise usage within the Turbo Apps and Forms products.</sup></sub></p>"},{"location":"builder/users/","title":"User Management","text":""},{"location":"builder/users/#users","title":"Users","text":"<p>Administrators can see the list of all users and manage them.  User details such as Name, Email, Teams users belong to and their role can be modified.</p>"},{"location":"builder/users/#provisioning","title":"Provisioning","text":""},{"location":"builder/users/#managed","title":"Managed","text":"<p>Users can be provisioned in the system by administrators.  They can also be bulk created via importing of CSV files.</p>"},{"location":"builder/users/#automatic","title":"Automatic","text":"<p>Users can also be allowed to sign up using their email id from permitted domains.  </p> <p>Role for auto provisioned users</p> <p>All users who are auto provisioned will by default have the User role and need to be edited by an Admin user and provided a different roles if necessary.</p>"},{"location":"builder/users/#enterprise-login","title":"Enterprise Login","text":"<p>For enterprise customers login using Active Directory credentials is allowed. SAML login with any identity providers such as Azure ADFS, MS AD etc are also supported.</p>"},{"location":"builder/users/#managing-users","title":"Managing Users","text":"<p>From the user tab, Administrators can add new users, modify users, reset their password and assign users to teams.</p> <p>Administrators can also allow users to select their own password or set a default one and email it to them automatically.</p>"},{"location":"builder/users/#create","title":"Create","text":"<p>To create a new user, click on the <code>Add (+)</code> icon in the bottom of the screen and enter the required details of the new user such as First Name, Last Name, Email, Assign a role and optionally set a password.  Users can also be added to teams they work for / belong to. Administrator can also assign a user one of the three roles- Admin, Manager or User based on their job function.</p>"},{"location":"builder/users/#update","title":"Update","text":"<p>By selecting a user in the list, Administrators can view user details, role and the teams the user belongs to. Administrators can update user details, change user role and add or remove from teams.</p>"},{"location":"builder/users/#search","title":"Search","text":"<p>Admin can easily search for particular users by entering a partial user name in the search bar. This is particularly useful when you have a large number of users and need to quickly access a user.</p>"},{"location":"builder/users/#roles","title":"Roles","text":"<p>A user can be assigned to one of the three roles:</p> <ul> <li>Admin: Admin users have full access to all the features in the admin portal. They can create and manage users, create and manage teams, create forms or form sets and assign to teams, add master data, and much more.</li> <li>Manager: Manager is the team leader who is responsible for all the forms assigned to their team. Managers can also review the submitted data and make changes before completion.</li> <li>Users: Users are team members who work on forms assigned to them and complete them.</li> </ul> <p>Access to Turbo Forms App</p> <p>Users of all roles can fill forms using the Turbo Forms App.</p>"},{"location":"builder/users/#bulk-upload-create-users","title":"Bulk Upload / Create Users","text":"<p>Upload a CSV file using the <code>Upload File</code> option to bulk create users.</p>"},{"location":"builder/users/#managing-teams","title":"Managing Teams","text":"<p>Teams allow multiple users to collaborate on the same forms and formsets. Teams are created by Administrators. Users cannot join or leave teams, only Administrators can Add/Remove users from teams.</p>"},{"location":"builder/users/#create_1","title":"Create","text":"<p>To create a new team, click on <code>Add (+)</code> icon in the bottom of the screen and enter the required details like Team Name, Description  and assign the Team Manager.</p>"},{"location":"builder/users/#add-users-to-team","title":"Add Users to Team","text":"<p>To add the users, click on the Team Name to display existing user details. Now click on the <code>Add (+)</code> icon in the bottom of the screen. Enter a part of the user name to auto search and display matching users.  Select the user to add to the team.</p>"},{"location":"builder/users/#assign-the-forms-formsets","title":"Assign the Forms / Formsets","text":"<p>Forms / Formsets can only be assigned to the teams.   Select form to assign after clicking the (+) icon and assign.</p> <p>Pro Tip</p> <p>In case only one user needs to work on a form, you will still need to create a team and add that user to the team to assign the form.</p>"},{"location":"builder/users/#view-details","title":"View Details","text":"<p>The list of the teams is displayed along with no. of users, no. of forms etc. To see the details about a particular team, click on the team name and you will find User details, Forms, and Formsets etc.</p>"},{"location":"builder/users/#search_1","title":"Search","text":"<p>Use the search bar to type a part of the team name to find the desired team.</p>"},{"location":"builder/users/#delete","title":"Delete","text":"<p>Admins can delete teams as required. Select the team(s) in the list and then click on delete teams near the search bar to delete.</p> <p>Note</p> <p>When teams are deleted, the team and associations with forms etc are only removed.  Users, Forms and submitted data are not deleted.</p>"},{"location":"builder/video/","title":"Video Tutorials","text":""},{"location":"builder/video/#video-tutorials","title":"Video Tutorials","text":"<p>Want to follow a few videos to get familiar with the Turbo Apps Builder?  We got you covered.  </p> <p>We have a set of video tutorials that will talk you through the process of login and working with your forms using the Turbo Apps Builder.  While the tutorials are organized as a series, you can still watch any individual video to get familiar with only that topic.</p>"},{"location":"builder/video/#getting-started","title":"Getting Started","text":"<p>How do I get started with the Apps Builder? Watch Video (opens new window)</p>"},{"location":"builder/video/#overview","title":"Overview","text":"<p>Working with the Turbo Apps Builder (Dashboard) Watch Video (opens new window)</p>"},{"location":"builder/video/#user-management","title":"User Management","text":"<p>Working with Users and Teams Watch Video (opens new window)</p>"},{"location":"builder/video/#forms","title":"Forms","text":"<p>All about forms! Watch Video (opens new window)</p>"},{"location":"builder/video/#forms-design","title":"Forms Design","text":"<p>Design forms the way you want them! Watch Video (opens new window)</p>"},{"location":"builder/video/#master-data","title":"Master Data","text":"<p>What is master data and how to work with it? Watch Video (opens new window)</p>"},{"location":"builder/video/#workflows","title":"Workflows","text":"<p>What are workflows? Watch Video (opens new window)</p>"},{"location":"builder/video/#dashboards","title":"Dashboards","text":"<p>Forms Dashboards Watch Video (opens new window)</p>"},{"location":"builder/workflows/","title":"Workflows","text":""},{"location":"builder/workflows/#turbo-automate-workflow-reference","title":"Turbo Automate - Workflow Reference","text":"<p>Turbo Apps Suite is a forms and workflow builder that makes it easy for analysts with little or no programming experience to design forms and automate backend processes by adding and connecting visual components together.</p> <p>Turbo Automate - Modernize your forms processing with Turbo Automate.</p> <p>This is a no-code (for certain use cases you can also use low-code) orchestrator to update data in all supported backend systems.  Workflows are powerful, shareable and human readable and can automate any process in a flexible fashion. You can use readymade workflows or build your own.</p>"},{"location":"builder/workflows/#process-driven","title":"Process Driven","text":"<p>Turbo Automate takes a process-based approach to automation, allowing you to define how your automation works and empowering you to also address dynamic cases such as fetching data from systems like SharePoint, Salesforce, SAP or SQL compliant databases and deciding on next steps based on the dynamic state of the data!  You have complete control in designing the workflow with our graphical, drag and drop builder and customizing it to your specific needs.</p>"},{"location":"builder/workflows/#ready-made-automation","title":"Ready-made Automation","text":"<p>Although designing your own Workflow is easy using the Workflow Builder, there is also a growing repository of ready-made content that integrates with most enterprise systems and communication channels. Use our readymade workflows to send PDF versions of forms to DocuSign for Digital Signatures, Notify users on Teams, Slack etc, send Alerts and Emails at will and much more.  These workflows can be embedded in other workflows to automate complex processes.</p>"},{"location":"builder/workflows/#drag-and-drop-builder","title":"Drag and Drop Builder","text":"<p>The Turbo Apps Suite has a drag and drop Workflow Builder.  You get a limitless canvas to add as many automation steps as you require and connect them up to fulfil every conceivable workflow.  Starting from simple use cases like updating SQL compliant database, creating Service Orders in Salesforce, sending documents for eSignature via DocuSign or creating Notifications on SAP, setting up Approvals of forms lke Leave Requests, Purchase Orders etc can all be automated in a simple, lucid fashion.  </p> <p>Workflow designers do not need any specific coding skills but only need knowledge of the JSON data format and interpreting result sets from systems.  To work with databases you have the choice of using SQL queries or no-code, model drive table updates.  REST API integration requires understanding of the end points you are posting to and nothing more.  OData services can be consumed in a model driven, guided approach.  JSON data transformation can be transformed with a graphical editor without writing a single line of code!</p>"},{"location":"builder/workflows/#glossary","title":"Glossary","text":"Sl. Term Definition 1. Workflow The series of steps to execute 2. Workflow steps The individual steps / parts of the workflow,  It consists of the operation, the data definition for the step and the system configuration 3. Operations The predefined operations that can be used to define the workflow steps.  Operations are the technical building blocks to access databases, REST or OData services etc 4. Systems Systems are the backend systems that you need to connect to fulfil your processes.  For e.g. to create an opportunity in Salesforce you will need to configure the Salesforce systems as part of the workflow step 5. Forms Each workflow has to be associated with a form.  A form can have any number of workflows associated with it but each workflow is associated to one form.  The workflow has access to the user submitted data of the associated form 6. Task ID Every form that has to be filled is treated as a task for a user and identified with a unique TaskID 7. Submission ID Every form that is filled and submitted is identified with a unique SubmissionID.  Every form filling task has at least one submission id.  If a task is for a form set, each form of the form set that is completed will also have a submission id 8. Run on Save Workflow to run when a form is saved. Note that a form can be saved any number of times until it is completed 9. Run on Complete Workflow to run when a form is completed.  This workflow is run only once (unless there is an error) and data is finalized 10. Run on Create Workflow to run when a form is created or instantiated.  The workflow can be used to prefill the data of the form 11. Run for Masterdata Workflow to run when master data is required to be updated in the system or sent directly to the Turbo Forms App for form filling 12. Run via Smart Data Component (SDC) The workflow is run as part of a Smart Data Component to fetch data from external systems based on user input and update form with results 13. Test Data Test data for a form that you can save for testing workflows before deploying them 14. Run Run a workflow in the builder to test it.  View detailed results and copy intermediate results 15. Save Saving a workflow also runs a syntax check and returns a list of errors to fix. The workflow step with the error is also highlighted 16. Deploy Deploy a workflow so that it can be run with the associated action (Save, Complete, Create, SDC, Masterdata)"},{"location":"builder/workflows/#the-workflow-builder","title":"The Workflow Builder","text":"<p>The workflow builder canvas allows you to drag and drop any number of operations and create the different steps of the workflow.  Chain steps by connecting them so that dependent steps can be created.  Add decision steps to decide on how the process has to proceed.  Success of the current step will result in the next step chained to the \"Success\" connector being executed.  Signal an error and terminate the workflow at will.</p>"},{"location":"builder/workflows/#how-is-a-workflow-created","title":"How is a workflow created?","text":"<p>In the Workflows tab click <code>+</code> Add and fill in the details.  The most important step is to select the form that the workflow is associated with.  Once added the panel is displayed where the different steps and their flow is organized.</p>"},{"location":"builder/workflows/#toolbar-icons","title":"Toolbar Icons","text":"<ul> <li><code>+</code> : The plus button is used to add steps to the workflow</li> <li><code>i</code> : Information on the Workflow</li> <li>Form : Navigates to the form associated with the workflow</li> <li>Undo : Undo last operation</li> <li>Redo : Redo last operation</li> <li>Zoom In : Zoom In and increase the zoom level of the panel</li> <li>Zoom Out : Zoom Out and decrease the zoom level of the panel (fit more steps in the screen)</li> <li>Arrange : Arrange the workflow steps in the panel</li> <li>Save : Save and Validate the workflow</li> <li>Deploy : Deploy the workflow to run on form actions</li> <li>Test Data : Create test data for test run of the workflow</li> <li>Submission JSON : Get a view of the JSON data of the form that is actually submitted.  Useful when the input data needs to be transformed or parts extracted and the format is necessart to visualize the data</li> <li>Run  : Test run the workflow and display the results from each of the workflow steps</li> </ul> <p>Pro Tip</p> <p>When a workflow is designed and results from a step are needed for transformation in the next step, run the workflow without the transformation step.  Copy the JSON results of the previous step and then add the data mapper for transformation.  The copied data can now be pasted in the editor to see real time results of the extraction / transformation.  Use the intermediate results to copy data from any of the steps.</p>"},{"location":"builder/workflows/#expression-builder","title":"Expression Builder","text":"<p>Expression builder is used to specify the input to the workflow operations (steps).  Expressions can be made up of: - Form fields - Eventdata - Previous workflow step results - Calculated values (using different functions) - Data mapper (JSON extraction) - Defined Environment variables - Pre-defined macros</p> <p>For any input to operations, choose the  icon to access the Expression Builder.  The expression Builder has multiple panes to organize the data.  </p> <ul> <li>Left Pane: Select form fields, select functions to operate on strings and numbers in calculate nodes</li> <li>Right Pane: Select from previous node results.  If the current node is a Calcualte node, then the variables/expressions already calculate are also available.  Any environment variables that are defined for the form can also be used. And a few predefined macros such as the form submitter's First Name, Last Name etc can also be used.</li> <li>Bottom Pane: The expression</li> </ul> <p>Pro Tip</p> <p>Any input from above that is added to the expression is depicted as ${xxxxx}.  The actual variable is enclosed as a Turbo Apps Macro idenfitied by ${ prefix and } as suffic.  If the value is a result of a previous step, the result is prefixed with the step name.  Do not modify the values as entered by the builder. When the workflow is exeuted, the macros identified by ${macro} are all replaced with actual values</p>"},{"location":"builder/workflows/#jsonata-expression-builder","title":"JSONata Expression Builder","text":"<p>Turbo Apps supports JSONata expressions to extract and convert JSON formats.  JSONata allows to manipulate JSON data without the need to write any code.</p> <p>The JSONata expression builder has three panes: - Left Pane : The sample data to operate on - Right Top Pane : The JSONata expression.  Refer JSONata Docs - Right Bottom Pane : The result of applying the expression on the data. This is a live preview and results are calculaed and displayed as the expression is built</p> <p>Pro Tip</p> <p>For JSONata expression builder, sample data is very important so you can check that the expression provides the desired results.  To ease this process, in the Run workflow screen, all results from each workflow step are displayed.  For e.g. if the data that is obtained by calling a REST API needs to be converted, Run the workflow and choose that node in the results.  Copy the displayed JSON to the example data field.</p>"},{"location":"builder/workflows/#database-expression-builder","title":"Database Expression Builder","text":"<p>Coming Soon     </p>"},{"location":"builder/workflows/#odata-expression-builder","title":"OData Expression Builder","text":"<p>Turbo Apps supports loading metadata from OData services.  Once the endpoint is configured, the builder automatically loads all the OData services.</p> <p>The OData Expression Builder allows to: - Select the Entity type(s) - Select all the required fields from the selected entities - Choose the operation - Select the main Entity to work on</p> <p>Other fields can then be manually configured</p>"},{"location":"builder/workflows/#sap-expression-builder","title":"SAP Expression Builder","text":"<p>Turbo Apps supports loading metadata from SAP RFC and BAPI.  Once the endpoint is configured, you can search for RFC and BAPI functions from the SAP system.</p> <p>The SAP Expression Builder allows to: - Search and select the custom RFC or BAPI - Select all the required fields for Input to the function and map form fields and other calculated values to the input - Select all the fields that need to be returned from the Output of the function</p>"},{"location":"builder/workflows/#systems","title":"Systems","text":"<p>All the Integration Services in the workflow such as REST, OData, Database etc operate on systems.  Systems can be configured in the individual operations.  </p> <p>Systems typically define: - URL / Server Address - Port / Protocol - Authentication Mechanism such as OAuth, Basic etc - Optional User ID / Password - And other optional parameters  </p> <p>Systems are defined for each operation type and can be used across workflows.  For e.g. a workflow upload document to SharePoint can define the SharePoint system and in another workflow the same system can be used with a differente REST API</p>"},{"location":"builder/workflows/#authentication","title":"Authentication","text":"<p>System authentication can be configured at a system level (Common user id / password, API token etc) or at an individual level based on UserID/Password or OAuth.  The entire authentication process is seamlessly managed by Turbo Apps and workflow designers only need to choose the authentication model.</p>"},{"location":"builder/workflows/#workflow-operations","title":"Workflow Operations","text":"<p>Various operations are supported by Turbo App.  They are grouped as below - Services : Operations for Integration   - REST : REST web services   - Database : SQL queries on databases   - Stored Procedure : Execute database stored procedures   - Active Directory : Lookup on MS Active Directory   - OData : OData web services   - SAP RFC : Connect to SAP custom RFC functions and BAPI - Forms : Operations on forms and form data   - Create : Create and assign a new form   - Update : Update the existing form data   - Assign : Assign (add) the form to a new user   - Read : Read a form's data   - Search : Search for forms   - Share : Share the form with external users   - Archive : Archive the form and create an archive URL to view archived data   - Create PDF : Create a PDF of the form   - Alert : Send an alert - Script Executors : Low code script executors to customize the workflow   - Execute PA : Execute a Java function as part of the workflow   - Execute JavaScript : Execute JavaScript function as part of the workflow   - Execute Python Script : Execute Python Script function as part of the workflow - Others : Miscellaneous operations   - Data Mapper : Extract and transform JSON data without writing code   - Condition : Add conditions to determins next steps   - Calculate : Add expressions to calculate values   - Send Email : Send an email as part of the workflow   - Inject : Inject a value as the final result / error of the workflow   - Download File : Download a cached file or a form attachment as a BASE64 string for further processing  </p>"},{"location":"builder/workflows/#common-properties","title":"Common Properties","text":"<p>Every workflow step (comprising of an operation)) has a set of common properties - Name : Technical workflow step name.  Needs to be all lowercase and used when accessing the results of this step - Description : Detailed notes about the workflow step and its purpose - System : System to use for the workflow step (if required)</p>"},{"location":"builder/workflows/#integration-services","title":"Integration Services","text":""},{"location":"builder/workflows/#rest","title":"REST","text":""},{"location":"builder/workflows/#restrequest","title":"restrequest","text":"<p>Execute any REST request on a remote server. The authentication for the endpoint is provided via the SystemProperty file</p> <ol> <li>Add or choose an existing system providing the REST end point  </li> <li>Choose the contenttype and accepttype  </li> <li>Choose the HTTP Verb that is to be executed (default GET)  </li> <li>Add other optional parameters that are necessary  </li> <li>For all variables make use of the Expression Builder to inject fields and other results that will be substituted with actual values at run time  </li> <li>Save  </li> </ol>"},{"location":"builder/workflows/#parameters","title":"Parameters","text":"Param Type Required Default Description formdata JSON True The input form data to calculate from.  Will be set by default, override if form data has been updated in workflow or as required eventdata String False The data from any event raised (primarily) for SDC system String True The REST system endpoint configuration contenttype String True application/json The content type accept String True application/json The accept type httpverb String True get The HTTP verb (action) to call postquerystring Boolean False False Indicates if the post parameters also have to be sent as a query string (True or False) instanceurl String False With some services like Salesforce, ServiceNow etc, the URL is dynamic and may need to be changed from what is configured in the system properties. This is usually referred to as the instanceUrl and can be set to override the system properties urlpath String False The (url) path for the call attachments String False Comma separated list of Attachment IDs of the files to be posted to the end point.  The attachment IDs are obtained by uploading the files to the Unvired Platform using the attachmentrequest workflow headerparameters Key-Value False JSON array of header parameters to pass to this call postparameters Key-Value False JSON array of post parameters to pass to this call body String False Data to be posted as raw body to the endpoint failonerror Boolean False False If this is a non-critical step in the workflow, failonerror can be set to false so that the workflow will continue"},{"location":"builder/workflows/#output","title":"Output","text":"Output Type Value result String The result of the REST execution error String The error from the REST execution if any"},{"location":"builder/workflows/#navigation","title":"Navigation","text":"Navigation Comment SUCCESS If the REST call executed successfully FAILURE If there was an error while executing the REST call"},{"location":"builder/workflows/#database-operation","title":"Database Operation","text":""},{"location":"builder/workflows/#dbrequest","title":"dbrequest","text":"<p>Run a SQL query on a database or insert/update/delete data directly using JSON input</p> <ol> <li>Add or choose an existing database system  </li> <li>Add other optional parameters that are necessary  </li> <li>For all variables make use of the Expression Builder to inject fields and other results that will be substituted with actual values at run time  </li> <li>Save  </li> </ol>"},{"location":"builder/workflows/#parameters_1","title":"Parameters","text":"Param Type Required Default Description system String True The Database system configuration query String False False The query to execute on the database. operation String False The database operation: insert, update or delete keys String False The keys of the table(s) for the specified operation data JSON False The data to be persisted in the database as JSON for the specified operation flattenoutput Boolean False False Flatten output if single row of data errormessageonnodata String False If no data found has to be treated as an error, set this error message <p>Pro Tip</p> <p>Either query or operation/keys/data has to be specified</p>"},{"location":"builder/workflows/#output_1","title":"Output","text":"Output Type Value result String The result of the DB execution error String The error from the DB execution if any"},{"location":"builder/workflows/#navigation_1","title":"Navigation","text":"Navigation Comment SUCCESS If the DB call executed successfully FAILURE If there was an error while executing the DB call or if errormessageonnodata is set and no data found"},{"location":"builder/workflows/#database-stored-procedure","title":"Database Stored Procedure","text":""},{"location":"builder/workflows/#dbsprequest","title":"dbsprequest","text":"<p>Run a Stored Procedure on a database</p> <ol> <li>Add or choose an existing database system  </li> <li>Set the stored procedure name to execute  </li> <li>Add other optional parameters that are necessary  </li> <li>For all variables make use of the Expression Builder to inject fields and other results that will be substituted with actual values at run time  </li> <li>Save  </li> </ol>"},{"location":"builder/workflows/#parameters_2","title":"Parameters","text":"Param Type Required Default Description system String True The Database system configuration spname String True The stored procedure name spinput JSON True The input for the stored procedure (SP) specified above. A valid input provides the input and output parameters as JSON errormessageonnodata String False If no data found has to be treated as an error, set this error message <p>Pro Tip</p> <p>spinput is of the form:  </p> <p><code>{\"whereclause\":{\"type\":\"in\",\"value\":\"'colname'=2\"}, \"countrows\":{\"type\":\"OUT\"}}</code> </p> <p>Here the parameter whereclause is an input parameter and has the value 'colname=2' and countrows is an output parameter</p>"},{"location":"builder/workflows/#output_2","title":"Output","text":"Output Type Value result String The result of the stred procedure execution error String The error from the stored procedure execution if any"},{"location":"builder/workflows/#navigation_2","title":"Navigation","text":"Navigation Comment SUCCESS If the stored procedure executed successfully FAILURE If there was an error while executing the stored procedure or if errormessageonnodata is set and no data found"},{"location":"builder/workflows/#active-directory","title":"Active Directory","text":""},{"location":"builder/workflows/#adsrequest","title":"adsrequest","text":"<p>Query a Microsoft Active Directory Service for user and other information</p> <ol> <li>Add or choose an existing MS Active Directory system  </li> <li>Choose the desired action          a. Authenticate: Authenticate the give domain, user and password on the ADS server         b. GetAttributes: Retrieves the given User's attributes from the ADS         c. SetAttribute: Sets the provided attrubute for the user. Attributes may be added (Add), changed (Replace) or deleted (Delete) as specified in the input         d. ListObjects: Retrieves a list of users matching the listing (input) criteria         e. SearchObjects: Searches for a list of users matching the searc (input) criteria  </li> <li>Add other optional parameters that are necessary.  Depending on the Action, additional parameters need to be provided  </li> <li>For all variables make use of the Expression Builder to inject fields and other results that will be substituted with actual values at run time  </li> <li>Save  </li> </ol>"},{"location":"builder/workflows/#parameters_3","title":"Parameters","text":"Param Type Required Default Description formdata JSON True The input form data to calculate from.  Will be set by default, override if form data has been updated in workflow or as required eventdata String False The data from any event raised (primarily) for SDC system String True The Active Directory system configuration action String True The action to perform on the Active Directory server (Authenticate,  GetAttributes, SetAttribute,   ListObjects,  SearchObjects) operation String False The operation to perform, required if action is SetAttributes (Add/Replace/Delete) searchcontrols String False The scope of the search to be performed, required if action is SearchObjects (Object, OneLevel, SubTree) field String False The attibute to modify or the field to search for (e.g. sAMAccountName) value String False The value to set for the attibute or the field value to search for basedn String False base DN or point from where to search for users, specified here or in system configuration domain String False ADS domain of the authenticating user, specified here or in system configuration user String False ADS user id of the authenticating user, for other operations can be specified here or in system configuration password Sensitive False ADS password of the authenticating user, for other operations can be specified here or in system configuration"},{"location":"builder/workflows/#output_3","title":"Output","text":"Output Type Value result String The result of the ADS operation specified error String The error if any from running the ADS operation"},{"location":"builder/workflows/#navigation_3","title":"Navigation","text":"Navigation Comment SUCCESS If the operation executed successfully FAILURE If there was an error while executing the operation"},{"location":"builder/workflows/#odata","title":"OData","text":""},{"location":"builder/workflows/#odatarequest","title":"odatarequest","text":"<p>Execute any OData request on a remote server. The authentication for the endpoint is provided via the SystemProperty file</p> <ol> <li>Add or choose an existing database system  </li> <li>Set the metadata to the OData definition from the service metadata.  Use the Odata Expression Builder as required  </li> <li>Choose the operation     a.  Create: Create an entity     b.  Update: Update an entity     c.  Merge: Merge an entity     d.  Delete: Delete an entity     e.  Select: Search for entities based on filter     f.  Read: Read/Get an entity</li> <li>Set the desired entity name</li> <li>Add other optional parameters that are necessary  </li> <li>For all variables make use of the Expression Builder to inject fields and other results that will be substituted with actual values at run time  </li> <li>Save  </li> </ol>"},{"location":"builder/workflows/#parameters_4","title":"Parameters","text":"Param Type Required Default Description formdata JSON True The input form data to calculate from.  Will be set by default, override if form data has been updated in workflow or as required eventdata String False The data from any event raised (primarily) for SDC system String True The OData system configuration metadata JSON True Metadata of Entities and fields to retrieve/save as part of this operation operation String True The operation to perfor (Create, Update, Merge, Delete, Select, Read) entity String True Name of the entity to operate on entitydata JSON False The entity to process filter String False Refer OData documentation to provide the filter https://www.odata.org/getting-started/basic-tutorial/#filter parameters String False Refer OData documentation to provide the filter https://www.odata.org/getting-started/basic-tutorial/#count expand String False Refer OData documentation to provide the filter https://www.odata.org/getting-started/basic-tutorial/#expand errormessageonnodata String False If no data found has to be treated as an error, set this error message <p>Example</p> <p>Metadata:   </p> <p><code>[{\"entitySet\":\"Customers\",\"entityType\":\"customer\",\"keys\":[\"CustomerID\"],\"fields\":[{\"name\":\"CustomerID\",\"type\":\"String\",\"nullable\":false},{\"name\":\"CompanyName\",\"type\":\"String\",\"nullable\":false}],\"navigation\":[\"Orders\",\"CustomerDemographics\"]}]</code></p>"},{"location":"builder/workflows/#output_4","title":"Output","text":"Output Type Value result String The result of the OData execution error String The error if any from running the OData service"},{"location":"builder/workflows/#navigation_4","title":"Navigation","text":"Navigation Comment SUCCESS If the operation executed successfully FAILURE If there was an error while executing the operation  or if errormessageonnodata is set and no data found"},{"location":"builder/workflows/#script-executors","title":"Script Executors","text":""},{"location":"builder/workflows/#execute-process-agents-java","title":"Execute Process Agents (Java)","text":""},{"location":"builder/workflows/#parequest","title":"parequest","text":"<p>Execute any Java function (Process Agent) that is designed and developed using the Unvired Modeller</p> <ol> <li>Choose the library that has the function that needs to be executed</li> <li>Choose the function that needs to be executed (based on the Library selected above)</li> <li>Add as many inputs as may be required for the function.  You will need to use any documentation provided for the function or check with the developer.  Every input is added as a key-value pair and will be posted to the function in the right format</li> <li>For all variables make use of the Expression Builder to inject fields and other results that will be substituted with actual values at run time  </li> <li>Save  </li> </ol>"},{"location":"builder/workflows/#parameters_5","title":"Parameters","text":"Param Type Required Default Description function String True Function that needs to be executed input Key-Value False Choose as many key value pairs providing the parameter name and the value that forms to input to the function"},{"location":"builder/workflows/#output_5","title":"Output","text":"Output Type Value result String The result of the function execution error String The error if any from running the function"},{"location":"builder/workflows/#navigation_5","title":"Navigation","text":"Navigation Comment SUCCESS If the function executed successfully FAILURE If there was an error while executing the function"},{"location":"builder/workflows/#execute-python-script","title":"Execute Python Script","text":""},{"location":"builder/workflows/#runpyscript","title":"runpyscript","text":"<p>Execute a Python script snippet as part of the workflow</p> <ol> <li>Choose all the input parameters that are required for the Python script using the Expression Builder</li> <li>Click Generate to generate the function stub.  Add your code to the execute() method only</li> <li>Any additional local functions you require can be added after this method and before the main reference section  </li> <li>Follow the inline comments and edit the Python code as required</li> <li>Outputs that need to be returned from the function and available for subsequent workflow steps are returned as part of a result[] JSON dictionary. </li> <li>Save  </li> </ol> <p>Need other inputs?</p> <p>If you need additional inputs after the stub is generated, add the required input parameters and hit the Generate button.  Don't worry, all changes made by you after the indicated comment will be retained</p> <p>Need to return more outputs?</p> <p>If you need to return additional outputs after the stub is generated, add the required output parameters to the result[] dictionary and Save. The outputs will be extracted automatically.</p>"},{"location":"builder/workflows/#parameters_6","title":"Parameters","text":"Param Type Required Default Description input String True Comma separated list of input parameters that are required as input for the Python script function String True Choose the function that needs to be executed Script Python True The skeleton of the script is generated for you.  Subsequently when changes are made to the input parameters, the input propagation will be automatically regenerated.  Outputs that need to be returned from the function and available for subsequent workflow steps are returned as part of a result[] JSON dictionary.  Follow the inline comments to ensure proper syntax and structure"},{"location":"builder/workflows/#output_6","title":"Output","text":"Output Type Value result String All the variables that are assigned to the result[] JSON dictionary error String The error if any from running the function present in the result[] dictionary"},{"location":"builder/workflows/#navigation_6","title":"Navigation","text":"Navigation Comment SUCCESS If the function executed successfully FAILURE If there was an error while executing the function <p>Python Version</p> <p>Turbo Apps uses Jython to execute these scripts and hence only Python version 2.7 is supported. All Jython supported packages are installed and available.  We may at a later date support Python versions &gt; 3 later.</p>"},{"location":"builder/workflows/#execute-javascript","title":"Execute JavaScript","text":""},{"location":"builder/workflows/#runjsscript","title":"runjsscript","text":"<p>Execute a JavaScript snippet as part of the workflow</p> <ol> <li>Choose all the input parameters that are required for the JavaScript using the Expression Builder</li> <li>Click Generate to generate the function stub.  Type in your code in the execute() method only  </li> <li>Any additional local functions you require can be added after this method  </li> <li>Follow the inline comments and edit the JavaScript code as required</li> <li>Outputs that need to be returned from the function and available for subsequent workflow steps are returned as part of a result[] JSON dictionary. </li> <li>Save  </li> </ol> <p>Need other inputs?</p> <p>If you need additional inputs after the stub is generated, add the required input parameters and hit the Generate button.  Don't worry, all changes made by you after the indicated comment will be retained</p> <p>Need to return more outputs?</p> <p>If you need to return additional outputs after the stub is generated, add the required output parameters to the result[] dictionary and Save. The outputs will be extracted automatically.</p>"},{"location":"builder/workflows/#parameters_7","title":"Parameters","text":"Param Type Required Default Description input String True Choose all the input parameters that you require for the Pytho script to operate on function String True Choose the function that needs to be executed Script JavaScript True The skeleton of the script is generated for you.  Subsequently when changes are made to the input parameters, the input propagation will be automatically regenerated.  Outputs that need to be returned from the function and available for subsequent workflow steps are returned as part of a result[] JSON dictionary.  Follow the inline comments to ensure proper syntax and structure"},{"location":"builder/workflows/#output_7","title":"Output","text":"Output Type Value result String All the variables that are assigned to the result[] JSON dictionary error String The error if any from running the function present in the result[] dictionary"},{"location":"builder/workflows/#navigation_7","title":"Navigation","text":"Navigation Comment SUCCESS If the function executed successfully FAILURE If there was an error while executing the function <p>JavaScript NPM Modules</p> <p>Turbo Apps uses the GraalVM to run JavaScript snippets.  Given the need to keep the environment secure, no additional packages are made available.  You can inline add additional functions to complete the required functionality.  If any standard npm module is required please contact Unvired Support and the DevOps team will provide access or alternatives after security evaluation.</p>"},{"location":"builder/workflows/#form-operations","title":"Form Operations","text":""},{"location":"builder/workflows/#create-form","title":"Create Form","text":""},{"location":"builder/workflows/#formcreate","title":"formcreate","text":"<p>Creates a new form / formset (and the corresponding task) and assigns it to a team or user</p> <ol> <li>Choose the Form from the dropdown.  If the technical name of the form has to be picked up from a different form field (for e.g. based on a user's choice a particular form has to be created), choose form field and select the form field  </li> <li>Enter the comment to inform the user of the need of this form assignment to them  </li> <li>Add any of the optional parameters to provide more input to the creation  </li> <li>For all variables make use of the Expression Builder to inject fields and other results that will be substituted with actual values at run time  </li> <li>Save</li> </ol>"},{"location":"builder/workflows/#parameters_8","title":"Parameters","text":"Param Type Required Default Description formname String True The (technical) formname to create a submission user String False User (named user who is part of the company/domain) to whom the form needs to be assigned to. team String False Team to whom the form needs to be assigned to. Note that either user or team needs to be provided comment String True Helpful notes to fill the form formdata JSON False Data to prefill the form if required relatedtask String False Provide the related task id if this form is a consequence of the other form.  It could be for e.g. the form that is currently creating this new form tasktype String False fill Choose from fill or review priority String False low Choose the priority for filling this form.  Acceptable values are low, medium and high duedate Date False Provide an optional due-date by when the form has to be completed.  MM/DD/YYYY format. extreference String False External reference for the task.  For e.g if this form is being created due to a Service Order in Salesforce, the extreference can be set to the Service Order ID of Salesforce for later association"},{"location":"builder/workflows/#output_8","title":"Output","text":"Output Type Value result String The task ID of the form / formset created error String The error from the creation if any"},{"location":"builder/workflows/#navigation_8","title":"Navigation","text":"Navigation Comment SUCCESS If the form / formset was created successfully FAILURE If there was an error while creating the form / formset"},{"location":"builder/workflows/#update-form","title":"Update Form","text":""},{"location":"builder/workflows/#formupdate","title":"formupdate","text":"<p>Updates the (current) form and saves it.  Use this operation if you want to update the data that has been submitted and make changes to it and save.  For e.g. the external system might compute certain values that need to be also saved in the form.</p> <ol> <li>Set the updated form data  </li> <li>Add any of the optional parameters to provide more input to the creation  </li> <li>For all variables make use of the Expression Builder to inject fields and other results that will be substituted with actual values at run time  </li> <li>Save</li> </ol>"},{"location":"builder/workflows/#parameters_9","title":"Parameters","text":"Param Type Required Default Description updateddata JSON True Form data to update and save formdata JSON True The input form data to calculate from.  Will be set by default, override if form data has been updated in workflow or as required eventdata String False The data from any event raised (primarily) for SDC extreference String False External reference for the task.  For e.g if this form is being created due to a Service Order in Salesforce, the extreference can be set to the Service Order ID of Salesforce for later association"},{"location":"builder/workflows/#output_9","title":"Output","text":"Output Type Value result String The data of the updated form error String The error from the update if any"},{"location":"builder/workflows/#navigation_9","title":"Navigation","text":"Navigation Comment SUCCESS If the form data was updated successfully FAILURE If there was an error while updating the formdata"},{"location":"builder/workflows/#assign-form","title":"Assign Form","text":""},{"location":"builder/workflows/#formassign","title":"formassign","text":"<p>Assigns the (current) form to another user.  You can also unassign (delete) a user from a form if they are not required any longer.</p> <ol> <li>Enter a comment for the change</li> <li>Choose the user to assign/unassign</li> <li>Alternatively you can choose a team to assign/unassign</li> <li>Set the parameter remove to true to unassign</li> <li>For all variables make use of the Expression Builder to inject fields and other results that will be substituted with actual values at run time  </li> <li>Save</li> </ol>"},{"location":"builder/workflows/#parameters_10","title":"Parameters","text":"Param Type Required Default Description comment String True Helpful notes for the user/team user String False User (named user who is part of the company/domain) to whom the form needs to be assigned to. team String False Team to whom the form needs to be assigned to. Either one of user or team needs to be provided remove Boolean False False Set to true to unassign the form"},{"location":"builder/workflows/#output_10","title":"Output","text":"Output Type Value result String If the form is assigned or unassigned error String The error from the assignment or unassignment if any"},{"location":"builder/workflows/#navigation_10","title":"Navigation","text":"Navigation Comment SUCCESS If the form data was assigned successfully FAILURE If there was an error while assigning the form"},{"location":"builder/workflows/#read-form","title":"Read Form","text":""},{"location":"builder/workflows/#formread","title":"formread","text":"<p>Reads the form identified by the task id (and submission id if form set) and returns the data.  Useful if data from an already filled in form is needed for any other operation later.</p> <ol> <li>Enter the task Id that identifies the submission uniquely.</li> <li>Enter the submission Id also if it task refers to a form set.</li> <li>For all variables make use of the Expression Builder to inject fields and other results that will be substituted with actual values at run time  </li> <li>Save</li> </ol>"},{"location":"builder/workflows/#parameters_11","title":"Parameters","text":"Param Type Required Default Description taskid String True Unique ID identifying the task to fill the form submissionId String False Unique ID identifying the form submission (required if the task is for a formset) team String False Team to whom the form needs to be assigned to. Either one of user or team needs to be provided remove Boolean False False Set to true to unassign the form"},{"location":"builder/workflows/#output_11","title":"Output","text":"Output Type Value result String If the form is assigned or unassigned error String The error from the assignment or unassignment if any"},{"location":"builder/workflows/#navigation_11","title":"Navigation","text":"Navigation Comment SUCCESS If the form data was assigned successfully FAILURE If there was an error while assigning the form"},{"location":"builder/workflows/#search-forms","title":"Search Forms","text":""},{"location":"builder/workflows/#formsearch","title":"formsearch","text":"<p>Search submissions matching the criteria provided.  At least one of the search criteria (users, teams, fornname, status or date) is required</p> <ol> <li>Enter any one of the search criteria for searching for submissions  </li> <li>Enter the submission Id also if it task refers to a form set.</li> <li>For all variables make use of the Expression Builder to inject fields and other results that will be substituted with actual values at run time  </li> <li>Save</li> </ol>"},{"location":"builder/workflows/#parameters_12","title":"Parameters","text":"Param Type Required Default Description formname String False The technical form name to search for submissions returnfields String False List of comma separated field names to return as part of search fields in addition to the standard search fields completedbyusers String False User(s) who have completed the forms completedbyteams String False Team(s) who have completed the forms submitstartdate Date False Submissions that were submitted after this date (format based on user's locale) submitenddate Date False Submissions that were submitted before this date (format based on user's locale) status String False Status of the forms to search for (open, inprogress, completed, archived, failed) formdata JSON False Search based on form data.  The input is a JSON object of fieldname:value.  Multiple fields can be included. extreference String False External reference to find submissions"},{"location":"builder/workflows/#output_12","title":"Output","text":"Output Type Value result JSON JSON array of submissions matching the criteria error String The error from the search if any"},{"location":"builder/workflows/#navigation_12","title":"Navigation","text":"Navigation Comment SUCCESS If the search was successful FAILURE If there was an error during the search"},{"location":"builder/workflows/#share-form","title":"Share Form","text":""},{"location":"builder/workflows/#formshare","title":"formshare","text":"<p>Create a link to share with external users who do not have a login to the forms system</p> <ol> <li>Enter task ID to share, for current you can set it to ${taskid}</li> <li>Choose the share type.  Public will allow anyone with the common URL to submit data and private can be accessed only by the user with the URL (each private share generates a unique share URL)</li> <li>Enter the days for the share to be valid</li> <li>Enter the email ids to share with (These users should already be present as external users in the system)</li> <li>Choose if (in private share only) users can save and return to the form later or they need to complete it in one session  </li> <li>Optionally disable email invite (if the URL is going to be shared otherwise for e.g. maybe via text)</li> <li>For all variables make use of the Expression Builder to inject fields and other results that will be substituted with actual values at run time  </li> <li>Save</li> </ol>"},{"location":"builder/workflows/#parameters_13","title":"Parameters","text":"Param Type Required Default Description taskId String True Task ID identifying the form to be shared sharetype String True The type of shared link to create.  Public share can be accessed by anyone with the link, private share links are for sharing with the specified users email expirydays Number True The number of days until when the shared link is valid shareto String False Comma separated list of email ids for sharing, required only if share type is private draftsave Boolean False False Allow users to save the form with partly filled data and fill later, required only if share type is private sendshareemail Boolean False True Should an email with a link be sent?"},{"location":"builder/workflows/#output_13","title":"Output","text":"Output Type Value result String Share link on success error String The error from the share if any"},{"location":"builder/workflows/#navigation_13","title":"Navigation","text":"Navigation Comment SUCCESS If the share was successful FAILURE If there was an error during the share"},{"location":"builder/workflows/#master-data","title":"Master Data","text":""},{"location":"builder/workflows/#masterdata","title":"masterdata","text":"<p>Manage master data.  Use this operation to create workflows that download master data from backend systems such as SAP and cache the data in the Turbo Apps database.</p> <ol> <li>Compute the data and set it</li> <li>Optionally choose the mode to perform from Create, Update and Delete. This mode is valid for all rows. Note that the mode can also be passed as an attribute of the rows of data and each row can have a different mode in this case.</li> <li>For all variables make use of the Expression Builder to inject fields and other results that will be substituted with actual values at run time  </li> <li>Save</li> </ol>"},{"location":"builder/workflows/#parameters_14","title":"Parameters","text":"Param Type Required Default Description data JSON True JSON object with rows of data for udpating the database mode String False create Choose mode from create, update or delete"},{"location":"builder/workflows/#output_14","title":"Output","text":"Output Type Value result String Message that all master data is updated successfully error String The error while performing the masterdata operations"},{"location":"builder/workflows/#navigation_14","title":"Navigation","text":"Navigation Comment SUCCESS If the master data creation / modification / deletion was successful FAILURE If there was an error while performing the required action on the master data"},{"location":"builder/workflows/#external-user","title":"External User","text":""},{"location":"builder/workflows/#extuser","title":"extuser","text":"<p>Manage external users.  For external form sharing with external users, the external users need to be maintained in the system.  Use this operation to Create/Modify/Delete external users.</p> <ol> <li>Choose the action to perform from Create, Update and Delete</li> <li>Set the First Name if creating or updating it</li> <li>Set the Last Name if creating or updating it</li> <li>Set the Email ID of the external user</li> <li>Choose if the external user is private to you or to be shared with other members of your organization</li> <li>Enter the phone number if required</li> <li>For all variables make use of the Expression Builder to inject fields and other results that will be substituted with actual values at run time  </li> <li>Save</li> </ol>"},{"location":"builder/workflows/#parameters_15","title":"Parameters","text":"Param Type Required Default Description action String True Create Choose the action to perform with the external user (Create/Update/Delete) firstname String False First Name needs to be provided for Create and optionally for update lastname String False Last Name needs to be provided for Create and optionally for update email String True Email ID of the external user. External users are uniquely identified by their email id. private Boolean False False Public contacts will be shared with other users within your organization phone String False Phone number of the external user"},{"location":"builder/workflows/#output_15","title":"Output","text":"Output Type Value result String Unique ID of the created/modified/deleted user error String The error from the operation if any"},{"location":"builder/workflows/#navigation_15","title":"Navigation","text":"Navigation Comment SUCCESS If the external user creation / modification / deletion was successful FAILURE If there was an error while performing the required action on the external user"},{"location":"builder/workflows/#archive-form","title":"Archive Form","text":""},{"location":"builder/workflows/#formarchive","title":"formarchive","text":"<p>Archive the form and create a link to the archived data to view it. Archived data cannot be modified any longer.</p> <ol> <li>Enter task ID to archive, for current you can set it to ${taskid}</li> <li>Enter the submission Id also if it task refers to a form set.</li> <li>For all variables make use of the Expression Builder to inject fields and other results that will be substituted with actual values at run time  </li> <li>Save</li> </ol>"},{"location":"builder/workflows/#parameters_16","title":"Parameters","text":"Param Type Required Default Description taskId String True Task ID identifying the form to be shared submissionId String False Unique ID identifying the form submission (required if the task is for a formset)"},{"location":"builder/workflows/#output_16","title":"Output","text":"Output Type Value result String Archive link on success error String The error from the archive operation if any"},{"location":"builder/workflows/#navigation_16","title":"Navigation","text":"Navigation Comment SUCCESS If the archive was successful FAILURE If there was an error during the archive operation"},{"location":"builder/workflows/#create-pdf-of-form-submittions","title":"Create PDF of form submittions","text":""},{"location":"builder/workflows/#material-pdf-box-formpdf","title":":material-pdf-box: formpdf","text":"<p>Export the form to PDF</p> <ol> <li>Enter task ID to export to PDF, for current you can set it to ${taskid}</li> <li>Enter the submission Id also if it task refers to a form set.</li> <li>Choose the orientation desired (portrait or landscape)</li> <li>Enter the Header and Footer text if you want to override defaults from settings</li> <li>Optionally choose if the workflow has to stop / fail if the PDF creation failed for some reason</li> <li>For all variables make use of the Expression Builder to inject fields and other results that will be substituted with actual values at run time  </li> <li>Save</li> </ol>"},{"location":"builder/workflows/#parameters_17","title":"Parameters","text":"Param Type Required Default Description taskId String True Task ID identifying the form to be shared submissionId String False Unique ID identifying the form submission (required if the task is for a formset) orientation String False The orientation for generating the PDF (portrait or landscape) header HTML False The PDF header HTML footer HTML False The PDF footer HTML failonerror Boolean False False If this is a non-critical step in the workflow, failonerror can be set to false so that the workflow will continue"},{"location":"builder/workflows/#output_17","title":"Output","text":"Output Type Value result String Attachment ID of the cached PDF file if successful error String The error from the PDF export if any"},{"location":"builder/workflows/#navigation_17","title":"Navigation","text":"Navigation Comment SUCCESS If the PDF was successfully exported FAILURE If there was an error during the PDF export"},{"location":"builder/workflows/#send-an-alert-for-a-form","title":"Send an Alert for a form","text":""},{"location":"builder/workflows/#formalert","title":"formalert","text":"<p>Send an alert to a user or team regarding a form they are working on</p> <ol> <li>Enter task ID to attache the alert to, for current you can set it to ${taskid}</li> <li>Choose the orientation desired (portrait or landscape)</li> <li>Enter the Header and Footer text if you want to override defaults from settings</li> <li>Optionally choose if the workflow has to stop / fail if the PDF creation failed for some reason</li> <li>For all variables make use of the Expression Builder to inject fields and other results that will be substituted with actual values at run time  </li> <li>Save</li> </ol>"},{"location":"builder/workflows/#parameters_18","title":"Parameters","text":"Param Type Required Default Description taskId String True Task ID identifying the form to be shared formdata JSON True The input form data to calculate from.  Will be set by default, override if form data has been updated in workflow or as required eventdata String False The data from any event raised (primarily) for SDC users String False User (named user who is part of the company/domain) to whom the alert needs to be sent to. teams String False Teams to whom the alert needs to be sent to. Either users or teams needs to be specified comment String True The alert message / comment severity String False Info The alert severity.  Choose from Error, Warning, Info, Mention failonerror Boolean False False If this is a non-critical step in the workflow, failonerror can be set to false so that the workflow will continue"},{"location":"builder/workflows/#output_18","title":"Output","text":"Output Type Value result String Alert text on success error String The error from the alert creation if any"},{"location":"builder/workflows/#navigation_18","title":"Navigation","text":"Navigation Comment SUCCESS The alert was sent successfully FAILURE If there was an error during the alert creation <p>Alert Icon</p> <p>Based on the severity an Alert icon is also displayed in the App.  Use Error to show an error message to the user.  Similarly use Warning for non fatal issues and Info for information alerts.  If the comment is @mentioning someone, then you can set the severity to Mention</p>"},{"location":"builder/workflows/#other-operations","title":"Other Operations","text":""},{"location":"builder/workflows/#data-mapper","title":"Data Mapper","text":""},{"location":"builder/workflows/#datamapper","title":"datamapper","text":"<p>Run a JSONata expression on the source data to extract the required data</p> <ol> <li>Choose from either Forms Fields or Previous Nodes</li> <li>Click on the expression builder</li> <li>Paste a sample JSON to operate on (It is expected that at run time, the variable you selected at step 1 will have this data).</li> <li>Type in your JSONata expression.  Refer the JSONata Docs for more information.</li> <li>Use the JSONata Expression Builder to check the sameple output and make sure that the data is what you need and has no errors.</li> <li>Save</li> </ol>"},{"location":"builder/workflows/#parameters_19","title":"Parameters","text":"Param Type Required Default Description sourcedata JSON True The input JSON data to extract from. mapexpression String True Choose the function that needs to be executed"},{"location":"builder/workflows/#output_19","title":"Output","text":"Output Type Value result String The extracted JSON data error String The error from the JSONata extraction"},{"location":"builder/workflows/#navigation_19","title":"Navigation","text":"Navigation Comment SUCCESS If the extraction executed successfully FAILURE If there was an error while running the extraction"},{"location":"builder/workflows/#condition","title":"Condition","text":""},{"location":"builder/workflows/#rulesrequest","title":"rulesrequest","text":"<p>Evaluate a condition to decide on what the next step in the workflow should be.  Conditions are typical If-Then-Else steps.  Conditions can be chained in that Then or Else can lead to other condition evaluations.</p> <ol> <li>Use the Query Builder UI to add And / Or condition groups.</li> <li>For example if And is chosen, all expressions within that will be combined with an AND operator.  Similarly if Or is chosen, all expressions within that will be combined with an OR operator.</li> <li>Add as many condition groups and expressions within to make up the condition.</li> <li>Select from form fields, calculated expressions and previous step results for the condition expressions.</li> <li>Save the condition</li> </ol>"},{"location":"builder/workflows/#parameters_20","title":"Parameters","text":"Param Type Required Default Description query JSON True The JSON representation of the designed condition"},{"location":"builder/workflows/#output_20","title":"Output","text":"Output Type Value result String The result of the evaluation of condition as a True or False error String The error from the JSONata extraction"},{"location":"builder/workflows/#navigation_20","title":"Navigation","text":"Navigation Comment THEN Condition evaluated to a True, execute the THEN step ELSE Condition evaluated to a False, execute the ELSE step FAILURE If there was an error while evaluating the condition"},{"location":"builder/workflows/#calculate","title":"Calculate","text":""},{"location":"builder/workflows/#calculaterequest","title":"calculaterequest","text":"<p>Evaluate expressions and store results that can be used in following workflow steps.  Expressions can be made from form fields, previous results and combined with functions as required.  Expressions already defined can be used in further computations.</p> <ol> <li>You can add a simple Expression (String/Math) or JSONata expression to operate on JSON data</li> <li>Once added set the variable name.</li> <li>Expression:     a.  Set the variable type (String, Number, Date)     b.  Use the Expression Builder to combine fields and functions</li> <li>JSONata expression:       a.  Set the variable type (String, Number, Date)     b.  Choose the field or other results on which the JSONata expression has to be applied     c.  Use the JSONata Expression Builder to build and test the expression</li> <li>Add as many variables as required (maximum 50 in each calculat enode)</li> <li>Save the condition</li> </ol>"},{"location":"builder/workflows/#functions-supported-as-part-of-expressions","title":"Functions supported as part of Expressions","text":"<p>A number of functions are supported as part of the calculate expression.  Complete list below:</p> Category Name Input Details Example Date adddates DateFld1, DateFld2 Adds two dates (form fields formats are used) adddates(${start}, ${end}) diffdates DateFld1, DateFld2 Difference of DateFld2 - DateFld1 (form fields formats are used) diffdates(${end}, ${start}) advancedate DateFld, Number, Unit Advances date in field by number of days,weeks,months or years as specified by unit.  If time in field then unit is hours,minutes or seconds advancedate(${start}, days, 2) Number + NumFld1, NumFld2 Adds two numeric fields ${num1} + ${num2} - NumFld1, NumFld2 Subtracts two numeric fields ${num1} - ${num2} * NumFld1, NumFld2 Multiplies two numeric fields ${num1} * ${num2} / NumFld1, NumFld2 Divides two numeric fields ${num1} / ${num2} round NumFld, Decimals Rounds numeric field to desired decimals round(${num1},2) truncate NumFld, Decimals Truncates numeric field to desired decimals truncate(${num1},2) String assign StrFld Assigns string value to variable assign(\"Text to assign\") concat StrFld1 to StrFldN Concatenates all the string values and/or fields concat(\"This\", \"is\", \"a\", ${StrFld}) trim StrFld Trims leading and trailing spaces trim(${StrFld}) uppercase StrFld Uppercase of string field uppercase(${StrFld}) lowercase StrFld Lowercase of string field lowercase(${StrFld}) length StrFld Returns length of string (number) length(${StrFld}) indexof StrFld, SearchStr Returns index of SearchStr in StrFld if found, else -1 indexof(${StrFld},\"search\") substring StrFld, Start, End Substring from Start index to End index (0 based) substring(${StrFld}, 1, 3) search StrFld, SearchStr Returns JSON array of all occurences of search string, empty array if not found search(${StrFld}, \"search\") searchregex StrFld, Regex Returns JSON array of all occurences of regular expression, empty array if not found search(${StrFld}, \"search\") replace StrFld, Search, Replace Replaces all occurences of search string with replace string replace(${StrFld}, \"search\", \"replace\") replaceregex StrFld, Regex, Replace Replaces all occurences of search string with replace string replace(${StrFld}, \"regex\", \"replace\") split StrFld, Pattern Splits string field into a JSON array based on pattern split(${StrFld}, \",\") base64encode StrFld Encodes string field base64 base64encode(${StrFld}) base64decode StrFld Decodes base64 string base64decode(${StrFld}) encrypt StrFld Encrypts string field AES256 encrypt(${StrFld}) decrypt StrFld Decrypts string field AES256 decrypt(${StrFld}) <p>Pro Tip</p> <p>If you need to set a variable to a string literal do not set value directly but use the assign function.  For e.g. to set a variable strvar = \"some-string\" use assign(\"some-string\")</p>"},{"location":"builder/workflows/#parameters_21","title":"Parameters","text":"Param Type Required Default Description query JSON True The JSON representation of the designed condition"},{"location":"builder/workflows/#output_21","title":"Output","text":"Output Type Value variable-name(s) String Result of the expressio error String The error from the evaluation"},{"location":"builder/workflows/#navigation_21","title":"Navigation","text":"Navigation Comment SUCCESS If the evaluation executed successfully FAILURE If there was an error while evaluating the expression"},{"location":"builder/workflows/#send-email","title":"Send Email","text":""},{"location":"builder/workflows/#material-email-send-sendemail","title":":material-email-send: sendemail","text":"<p>Send emails to users as part of the workflow.  This could be notifications or other messages as required.</p> <ol> <li>Set the subject of the email.  You can use form fields and other results as part of the subject text   </li> <li>Set the message of the email.  You can use form fields and other results as part of the message text  </li> <li>Add users and/or groups who are part of the Forms application.  You can also add external users by typing in their email directly</li> <li>Add any attachments that you may need.  These could be PDF versions of the filled form or files that have been attached to the form.  If needed use the Data Mapper to extract the Attachment IDs from the forms which can then also be attached to the email.</li> <li>Save</li> </ol>"},{"location":"builder/workflows/#parameters_22","title":"Parameters","text":"Param Type Required Default Description formdata JSON True The input form data to calculate from.  Will be set by default, override if form data has been updated in workflow or as required eventdata String False The data from any event raised (primarily) for SDC system String True The REST system endpoint configuration users String False List of users to send email to groups String False List of groups to send email to emails String False List of external email ids to send email to subject String True Email subject message String True Email message attachment String False Comma separated list of attachments to attach to the email failonerror Boolean False False If this is a non-critical step in the workflow, failonerror can be set to false so that the workflow will continue"},{"location":"builder/workflows/#output_22","title":"Output","text":"Output Type Value result String The result of the send email operation error String The error from the email sending"},{"location":"builder/workflows/#navigation_22","title":"Navigation","text":"Navigation Comment SUCCESS If the send email executed successfully FAILURE If there was an error while executing the send email call"},{"location":"builder/workflows/#download-file","title":"Download File","text":""},{"location":"builder/workflows/#downloadfile","title":"downloadfile","text":"<p>Downloads a file from the Attachment cache in the BASE64 format.</p> <ol> <li>Set the attachment ID to download.</li> <li>Save</li> </ol>"},{"location":"builder/workflows/#parameters_23","title":"Parameters","text":"Param Type Required Default Description attachentid String True Unique ID identifying the attachment to retrieve.  Could be the output of a PDF conversion call or attachments that are uploaded as part of the form etc. format String False base64 Format to return the data in, only base64 supported now"},{"location":"builder/workflows/#output_23","title":"Output","text":"Output Type Value result String The base64 version of the file error String The error from the file download"},{"location":"builder/workflows/#navigation_23","title":"Navigation","text":"Navigation Comment SUCCESS If the file was downloaded successfully FAILURE If there was an error while downloading the file"},{"location":"builder/workflows/#inject","title":"Inject","text":""},{"location":"builder/workflows/#inject_1","title":"inject","text":"<p>A simple operation that publishes (injects) the result and error to that passed in</p> <ol> <li>Either the result or error to be injected has to be provided.  Choose the Add optional parameter option to add one of them.  </li> <li>Set the result to be injected for the workflow result  </li> <li>Alternatively set the errror to be injected for the workflow  </li> <li>Save</li> </ol>"},{"location":"builder/workflows/#parameters_24","title":"Parameters","text":"Param Type Required Default Description injectresult String False Result to be injected injecterror String False Error to be injected"},{"location":"builder/workflows/#output_24","title":"Output","text":"Output Type Value result String The injectted result error String The injected error if any"},{"location":"builder/workflows/#navigation_24","title":"Navigation","text":"Navigation Comment SUCCESS If injectresult has been provided, the operation results in a success FAILURE If injecterror has been provided, the operation results in an error"},{"location":"chyme/advanced/","title":"Advanced Topics","text":""},{"location":"chyme/advanced/#rules","title":"Rules","text":""},{"location":"chyme/advanced/#digital-assistant","title":"Digital Assistant","text":"<ul> <li>Dos Examples:</li> <li>Use specific names for a Digital Assistant</li> <li>Sales Order Alert and Sales Order Approval are the right candidates to be clubbed under a Sales Approvals Digital Assistant</li> <li>Sales Order Alert, Purchase Order Alert, Leave Request Alert and associated Approvals are the right candidates to be clubbed under an Approval Digital Assistant</li> <li>Don\u2019ts Examples:</li> <li>Do not club sales and purchasing digital assistants together</li> <li>Do not use generic names for a Digital Assistant</li> <li>Dos:</li> <li>Keep messages simple and direct</li> <li>Embed the data in the message like a conversational natural statement</li> <li>Keep the data points to a minimal in a message</li> <li>Don\u2019ts:</li> <li>Do not use passive messages</li> <li>Do not use very long messages</li> <li>Do not embed too many fields in a message</li> <li>Dos:</li> <li>Take as less input parameters as possible</li> <li>Separate the input from the main statement so that the input is taken once the intent is understood</li> <li>Limit the number of input parameters under 5 fields. Ideally 3 fields.</li> <li>Suggest values to the user so that the user can choose the value</li> <li>Don\u2019ts:</li> <li>Do not expect the user to input a lot of parameters</li> <li>Do not expect users to pass all the input in one statement for the bot call</li> </ul>"},{"location":"chyme/advanced/#messages","title":"Messages","text":""},{"location":"chyme/advanced/#bot-command-input","title":"Bot Command Input","text":"<p>Do not expect users to provide input in a specific format that is complicated. Example: Date in yyyy-mm-dd</p>"},{"location":"chyme/advanced/#webhooks","title":"Webhooks","text":"<p>Webhooks are URLs that can be called by external systems to post messages or data to Chyme. Chyme supports 2 types of webhooks: - Event Webhooks:   - Event webhooks are supported via the Event Bots created in the Chyme Bots Bundle   - For each system (based on system name) there is a single webhook created for all events under the system   - Event webhook is created when the Chyme Solution is activated   - Event webhook URL can be copied from the Chyme Web App-&gt;Admin Menu-&gt;Solutions-&gt;Webhooks   - External messengers call the event webhook URL to post data (data can be in any format \u2013 event bot code has to interpret the incoming data)   - Event bot associated with the event webhook gets called when the event webhook is called from the external system   - Event bot can post the event data to any users, teams or channels after processing the data   - Event webhook can contain any plain text or structured text (JSON, XML, etc.) content in the HTTP request body   - The content if the HTTP body is given as a String to the Event bot for processing - Message Webhooks:   - Chyme allows messages to be posted directly to end-users, teams or channels bypassing the bots   - System that requires to post a message directly has to be added to the Chyme Bots Bundle   - Create a Webhook on the system from Chyme Web App-&gt;Admin Menu-&gt;Solutions-&gt;Webhooks-&gt;Create Webhook</p> Name Value Comments Webhook Name Description System Or create a system and choose <ul> <li>Enable the webhook and copy the URL</li> <li>Post messages to the webhook using the URL along with the following parameters:</li> </ul> Name Value Comments message Mandatory. Message sent to the users messenger. assistant Mandatory. Assistant name on which the message is posted in the messenger. recipients Mandatory. Recipients who should receive the message. Can be one of the following:Email id of the userChannel or group name (group of users part of the channel or the group) data Optional. Business entity JSON that Chyme can use for memory context <ul> <li>The message is posted to the recipients directly via the Chyme server</li> </ul>"},{"location":"chyme/advanced/#non-english-language-support","title":"Non English Language Support","text":"<p>Chyme supports non-English languages as follows. - Translation has to be enabled in Chyme Settings. Otherwise, every message is treated as English. - Every user has a default language setting. Users can change this to set the default language. - User can send messages in any of the supported languages - For each message:   - Language is detected and translated to English if the message is not in English   - English translation of the message is given to the NLP engine for processing   - Bot call is made with the English translation   - Bot is expected to provide the output in English   - Bot output message is translated to the user\u2019s default language setting and sent to the user</p> <p>Note</p> <p>Command input parameters that are not part of the base message are not translated</p> <p>Translation Settings: - In the Chyme web app Admin Menu select Settings - Select the Translation Engine tab - Select the Translation Engine as Google - Enter the Google API Key and <code>Save</code></p> <p>Languages Supported: All languages supported by Google Translation Engine are supported.</p>"},{"location":"chyme/advanced/#miscellaneous","title":"Miscellaneous","text":"<ul> <li>Business Entities are data objects in Chyme.</li> <li>Business Entities are modeled using the Chyme Bots Builder and used in the Bot code.</li> <li>Business Entities have the following structure:</li> <li>Name: Every business entity has a name</li> <li>Header: There is a mandatory structure called header in every business entity. The header structure can have any name and there can be only one header structure in a business entity. Header contains field name-value pairs.</li> <li>Item: Item is an optional structure in a business entity. Items are used to hold additional but related data to the header. There can be different types of items in a business entity. Each item type has a unique name and can have multiple such items. Each item contains field name-value pairs.</li> <li>JSON of a sample Business Entity is shown below.</li> </ul> <pre><code>{\n  \"po\": [\n    {\n      \"header\": {\n        \"poNo\": \"4500031157\",\n        \"vendor\": \"ABC Enterprise, NY\",\n        \"poDate\": \"15 aug 16\",\n        \"poValue\": \"200 USD\"\n      },\n      \"item\": [\n        {\n          \"itemNo\": \"1\",\n          \"material\": \"Fountain Pen\",\n          \"quantity\": \"2 PC\",\n          \"price\": \"50 USD\"\n        },\n        {\n          \"itemNo\": \"2\",\n          \"material\": \"Writing Pad\",\n          \"quantity\": \"4 PC\",\n          \"price\": \"25 USD\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"chyme/advanced/#function-mapping","title":"Function Mapping","text":"<ul> <li>Bot function output business entities can be mapped to system interfaces.</li> <li>Business Entity \u2013 System Interface mapping is supported for select system types:</li> <li>SAP ABAP RFCs</li> <li>SAP Gateway</li> <li>Salesforce</li> <li>ServiceNow</li> <li>Database Tables</li> <li>In the Chyme Bots Builder Function tab do the following to map the business entity with the system interface:</li> <li>Note: One entity can be mapped with one interface only.</li> <li>Output Business Entity: For the Bot function add an Output Business Entity using the Add option in the Output section.</li> <li>System Interface: Add the required interface using the Add option in the Interface section.</li> <li>Mapping: Under the Mapping section:<ul> <li>Drag and drop the Business Entity name from the left on the system name on the right</li> <li>Drag and drop the Business Entity header name from the left on the system interface name on the right</li> <li>If there are items similarly map the Items from the Business Entity to the interface structures</li> </ul> </li> </ul>"},{"location":"chyme/advanced/#follow-up","title":"Follow Up","text":"<p>Follow up is an action that can be proposed to the user while responding to a user. Follow up actions can be proposed as follows: - NLP: In the NLP while sending a response message follow up options can be set in the API. - Bot: In the Bot code the follow ups can be set using the addFollowup API on the Message class object. - Each bot (Command or Event) can have contextual attributes or properties associated with them. - Bot context properties can be set in the Chyme Bots Builder during the Bot definition. - Bot context property names are set in the Bot. - Bot property values are configured once the Bot is deployed to the Chyme web app: Chyme Web App -&gt; Admin menu -&gt; Solutions -&gt; Bots -&gt; Choose Bot and Edit</p>"},{"location":"chyme/advanced/#bot-context","title":"Bot Context","text":""},{"location":"chyme/develop/","title":"Development","text":""},{"location":"chyme/develop/#overview","title":"Overview","text":""},{"location":"chyme/develop/#digital-assistant-vs-bots","title":"Digital Assistant vs Bots","text":"<p>A bot is a program that does a specific task inside a Digital Assistant. So a digital assistant can be a collection of bots with each bot performing a specific task. Terms Digital Assistant and Chatbots are used interchangeably in this document.</p>"},{"location":"chyme/develop/#steps","title":"Steps","text":"<p>Digital assistant development involves the following steps:</p> <ol> <li>Create Chyme Account: Create an account with Chyme to get access to the Chyme environment. This could be either on the public cloud or on-premise (private cloud).</li> <li>Define the Digital Assistant: Identify the tasks that your digital assistant is supposed to perform.</li> <li>Build Bots:  3.1.  Identify the conversational points that require interactions with the fulfillment systems via the bot. 3.2.  List the fulfillment systems with which the interactions are required. 3.3.  Identify the bots, the input, and output for the bots. 3.4.  Build the bots using the Chyme Bots Builder IDE and deploy the bots to Chyme. Test the bots.</li> <li>Model Conversations: Model the conversations for the user-digital assistant interaction to achieve the tasks defined in the previous step. Identify the places where bot calls are required in the conversations. Chyme uses the ChatScript NLP Engine along with wrappers to model the conversations and information exchange.</li> <li>Configure Digital Assistant: Configure the Digital Assistant using the Chyme Web App. Choose the target messenger. Add the Digital Assistant to the messenger and converse.</li> </ol>"},{"location":"chyme/develop/#technical-information","title":"Technical Information","text":""},{"location":"chyme/develop/#deployment-models","title":"Deployment Models","text":"<p>Chyme Digital Assistant can be used as follows: - Public cloud (multi-tenant) - On-premise or private cloud (single-tenant)</p>"},{"location":"chyme/develop/#componenets","title":"Componenets","text":"<p>Chyme Digital Assistant has the following major components: - Chyme Messenger: Enterprise messenger for mobile phones and web that can be used for messaging with people and digital assistants (chatbots). - External Messengers: Integration with external messengers and webchat components. Read more here. - Chyme Messaging Server: Orchestrates the exchange of messages between users and digital assistants (chatbots) using Natural Language Processing Engine, Bots Engine, and translations. - Chyme Web App: Web app to manage the configurations for the users and digital assistants in the Chyme Messaging Server &amp; Bots Engine. - Natural Language Processing (NLP) Engine: Chyme uses an open-source NLP engine with enhancements to manage the natural language interactions between the users and digital assistants (chatbots). - Chyme Bots Engine: Provides integrations with fulfillment systems like Sales, Service, Billing, ERP, CRM, etc. Digital assistants use the bots engine to get and put the required information from and to fulfillment systems. - Chyme Bots Builder: IDE to model and build digital assistants (chatbots).</p>"},{"location":"chyme/develop/#chyme-account","title":"Chyme Account","text":"<p>Create a Chyme account in the Chyme development environment (development has to be done only in the development servers). - Public Cloud: If you are using the Chyme public cloud then go to https://app.sandbox.chyme.io to create an account. - Private Cloud or On-Premise: Check with your Chyme administrator for the development system URL.</p> <p>Create Account - On the Chyme app page enter your domain (company name) and check if the domain already exists.  - If it does not exist then click <code>Create New</code> to create a new account. - If your domain already exists, then check if your user id exists. If you user exist check if you have the role Admin or Bot Admin. - If your domain exists and your user does not exist then sign-up. Ask your administrator to give you the Bot Admin role - Only Admin or Bot Admin role can develop on Chyme.</p> <p>Note</p> <p>The first user who creates the account shall become the administrator automatically.</p>"},{"location":"chyme/develop/#define-digital-assistant","title":"Define Digital Assistant","text":"<p>Digital assistants are more user-friendly when digital assistants have a narrowly defined purpose. This also helps to set expectations for the user.</p> <p>A generic digital assistant that can do many thinks is unsuitable for an enterprise. The generic nature of the digital assistant can cause user confusion leading to user frustration. Users would not know where to start and where to end.</p> <p>So it is very important to define the digital assistant keeping in mind the following rules.</p> Rule Example Clearly define what a digital assistant can do in terms of specific business function PurchasingSalesCustomer SupportEtc. Narrow the number of actions the digital assistant can perform under the business function Purchasing: Purchase order alerts and approvalsSales: Get and update demand info by-product and timelineCustomer Support: View and change cellular plan, register compliant, alerts for complaints resolutions It is better to have many digital assistants that do specific actions very well rather than a few that do too many things not so well Purchasing assistant vs. ERP assistant <p>Definition - Purpose: Define the purpose of the digital assistant - Actions: Define the specific actions that shall be performed under the stated purpose - Enterprise Systems and API: Identify the fulfillment systems that APIs that help satisfy the stated actions - Bots: Identify the enterprise system interactions and identify the bots - Channels: Identify the channels of engagement for the user in line with the purpose. Facebook or Webchat for customer support, Microsoft Lync for enterprise users, etc.</p>"},{"location":"chyme/develop/#example","title":"Example","text":"<p>To explain the Digital Assistant development the following example scenario shall be developed. The source code is available on GitHub.</p> Name SalesAssistant Purpose Manage sales leads Actions / Bots - Create Lead- Search Leads- Update Lead Status- Lead Alert Enterprise System and APIs - System: Simple database with tables- APIs: Table access Channels - Facebook- Skype- Chyme Messenger <p>Note</p> <p>Only Create Lead and Lead Alert actions are shown in the example.</p>"},{"location":"chyme/develop/#chyme-bots-builder-java","title":"Chyme Bots Builder - Java","text":""},{"location":"chyme/develop/#overview_1","title":"Overview","text":"<p>Chyme Bots Builder is an add-on to Eclipse IDE. Chyme Bots are built using Java.</p>"},{"location":"chyme/develop/#install","title":"Install","text":"<ul> <li>Download the latest version of Mars or Neon Eclipse IDE for Java EE Developers from http://www.eclipse.org</li> <li>Install Eclipse, start it and create a new workspace. Follow Eclipse guides to do this.</li> </ul> <p>Install Chyme Bots Builder Add-on - Start Eclipse - Open an internet browser and open the link: http://marketplace.eclipse.org/content/unvired-modeler-and-chyme-bots-builder-ump-v4 - Drag and drop the <code>Install</code> button from the above web page inside Eclipse - Proceed with the installation and complete it</p> <p>Or Use the Eclipse update site to install the plugin: http://eclipse.unvired.io/umpmodeler4</p> <p></p>"},{"location":"chyme/develop/#fulfillment-system-database","title":"Fulfillment System: Database","text":"<p>Script for the sample MySQL database is here. Create the database from the script. This is required for the Sales Assistant.</p>"},{"location":"chyme/develop/#create-chyme-bundle","title":"Create Chyme Bundle","text":"<ul> <li>Create a new Chyme Bundle project in Eclipse (using the Chyme Bots Builder Plugin).</li> <li>Create a Chyme Bundle using the Eclipse standard project creation wizard</li> <li>In the Eclipse main menu select: File -&gt; New -&gt; Other -&gt; Unvired -&gt; Chyme Bundle</li> <li>Click <code>Next</code> to see the Chyme Login Page</li> <li>Login to Chyme: Enter the following details:</li> </ul> Name Value Comments Chyme URL https://.sandbox.chyme.io Replace  with the account name that was created previously. If you are using an on-premise instance of Chyme then provide the Chyme URL Email Id Enter the email id registered for your user with Chyme Password Enter the Chyme Password Company Enter the account name created with Chyme <ul> <li>Click <code>Next</code> to see the Bundle Creation page</li> <li>Bundle Creation: Create a bundle as follows.</li> </ul> Name Value Comments Application Name CHYME Filled by default. Cannot be changed. Solution SalesSample Click '<code>+</code>' to create a solution. In the popup enter the following to create the solution Name: SalesSampleDescription: Sales SampleNLP Bot Name: SalesSamplesClick <code>Create</code> to create the solutionThe solution gets created and populated in the Solution list Bundle New Select the radio button Bundle Name SALES_SAMPLE Description Sales Sample Version 0.1 Vendor E.g.: Unvired Java Package E.g.: com.unvired.salessample <ul> <li>Click <code>Next</code> to Create a Java Project</li> <li>Java Project: Standard Eclipse Java project</li> <li>Click <code>Next</code> to proceed</li> <li>Click <code>Finish</code> to create the project</li> <li>Chyme bundle project gets created and Chyme Bots Builder opens</li> <li>Sales Sample project is shown in the Chyme Bots Builder</li> <li>After a couple of seconds in the Bots Builder tab, a message is shown to download the missing SDKs</li> <li>Click <code>Check</code> for Updates in the Bots Builder tab to download the Chyme SDKs and add them to the Java build path</li> </ul>"},{"location":"chyme/develop/#chyme-bots-overview","title":"Chyme Bots Overview","text":"<p>Chyme Bots Builder contains the following tabs: - Bots Builder: Set the basic properties of the Chyme Bundle - Landscape: Manage all the systems that are needed to build the digital assistant bots - Bots: Model the Bots - Functions: Manage the functions associated with the bots - Business Entities: Model and manage the output objects associated with the bots - Test: Console to test the bots</p>"},{"location":"chyme/develop/#system-landscape","title":"System Landscape","text":"<p>In the Landscape tab set up the systems required for the bots in the digital assistant. Chyme supports many standard enterprise systems. APIs from the following types of systems can be added and used for bot integration: - Web: REST and SOAP - Databases: Tables and Store Procedures - SAP: RFCs, OData Services - OData Server: OData services - Salesforce: Salesforce SObjects - ServiceNow: ServiceNow REST APIs - Add a MySQL database system as follows.</p> <p>Add MySQL System - Select the MySQL DB from the list of systems - Open the default Eclipse Properties tab. (Eclipse Menu Window -&gt; Show View -&gt; Other -&gt; General -&gt; Properties) - Select the MySQL DB under the section Enterprise Systems - Set the Properties in the Properties tab as follows:</p> Name Value Comments Name SalesSampleDB Description Sales Sample DB Server <code>&lt;server name where the mysql db is installed&gt;</code> Port 3306 Standard port for MySQL is 3306 Database Name chyme_sample User Name <code>&lt;db user name&gt;</code> Password <code>&lt;db password&gt;</code> <ul> <li>Click <code>Save</code> or Ctrl + S to save the project</li> </ul> <p>MySQL Connection Test Test the connection to the db. In the Landscape tab button bar click Test Connection. A success message for the database connection appears.</p> <p>Import Tables from MySQL Under the Enterprise Systems section select the MySQL DB. A database browser is shown on the right side in the Landscape tab.</p> <ul> <li>Click <code>Refresh</code> to refresh the schemas</li> </ul> Name Value Comments Object Type Table Select Radio Button. Click Search / Filter Objects button beside the radio button.Tables are listed below. Tables Lead Select the table using the check boxSelect <code>+</code> (Add Table) to add the table to the list of tables used in the Chyme bundle <p>Click <code>Save</code> or Ctrl + S to save the project</p> <p>Generate Proxy Click on <code>Generate Proxy</code> to generate the database proxies</p>"},{"location":"chyme/develop/#bot-creation","title":"Bot Creation","text":"<p>A bot is an individual command or program in the digital assistant that does a specific task. Chyme bots are of 2 types: - Command Bot: Command bot is initiated when the user sends a message. The command bot can take the message and input data to process and return a response. - Event Bot: Event bot is initiated when an external system makes an API call via the event webhook. The event not can take the message and input data to process. The event bot\u2019s response shall be published to the Chyme Channel for which has subscribed to the event (Channel-Event subscription is done in the Chyme Digital Assistant Configuration using the web app). Additionally, the event can also choose to publish this information to other users, channels and groups in Chyme.</p>"},{"location":"chyme/develop/#create-a-new-command-bot","title":"Create a New Command Bot","text":"<p>In the Bots Builder:</p> <p>Go to the Bots tab Click <code>+</code> (Create) to create a new bot A popup dialog to choose the bot type is shown \u2013 choose Command and click <code>OK</code> A new command bot gets added to the bot list Select the new bot (if it is not already selected) In the right panel set the Bot Details as follows: | Name  | Value     | Comments  | |-  |-  |-  | | Bot Details   |   |   | | Name  | CreateLead    |       | | Description   | Create Lead   |       | | Search Tags   | lead, crm     | These are tags used to search for the bot from the Chyme Web Configuration App    | | Type  | Command   | Set during bot creation. It cannot be changed.    | | Function  | COMMAND_CREATELEAD    | Auto-created from the bot name. It cannot be changed.This is the Java function associated with the bot that gets executed when the bot is called.     | | Command Details   |   |   | | Action Type   | ADD   | A standard action type that is performed on the object \u2013 GET/ADD/MODIFY/DELETE    | | Validate Input    | Check     | Is the validation required for the input parameters? For each input parameter, a separate validation call is made to the Validation function.     |</p> <ul> <li>Input Parameters: Input fields for the command. Input is provided by the user or defaulted based on the business scenario. Click + Create (Create Parameter) to add an input field.</li> <li>Parameter: Parameter name</li> <li>Type: Parameter data type<ul> <li>Text: Text input</li> <li>List: List of values to choose from (if the list is dynamic then leave it empty and use Validation function to propose the values to the user)</li> <li>Date: Date input</li> <li>Time: Time input</li> <li>Number: Integer input</li> <li>Location: Location input (data is based on Messenger used - typically longitude and latitude)</li> <li>Media: Attachment files input</li> </ul> </li> <li>Prompt Text: Text to be promoted to the user in the messenger when the value is required</li> <li>Mandatory: Is the field value mandatory or optional</li> </ul>"},{"location":"chyme/develop/#bot-input","title":"Bot Input","text":"<ul> <li>Command bot\u2019s input is the input parameters provided. The input parameters are collectively grouped under a Business Entity.</li> <li>For command bots the input business entity is automatically mapped to the bot function and cannot be manipulated.</li> <li>Typically the output of a bot is a text message.</li> <li>If a business object has to be associated with the message to be stored and used automatically later in the conversation a Business Entity can be created in the Business Entity tab.</li> <li>Check the section on Business Entity to understand and more and create a Business Entity.</li> </ul>"},{"location":"chyme/develop/#bot-output","title":"Bot Output","text":"<p>For this example, we shall create a Business Entity called lead. 1. Go to the tab Business Entities. 1. Click on the button <code>Explore Services</code> at the top right corner. The list of systems and interfaces selected in the Landscape tab while setting up the enterprise systems are available here. 1. Select the MySQL database table to create an output object.</p> Name Value Comments System SalesSampleDB MySQL System added in the Landscape Function JDBC_EXECUTE Standard function for all database systems Type chyme_sample - Database Schema Database Schema from the database Name Chyme_sample Select the schema node from the list Table Lead Select the lead table under the schema <ul> <li>Click on the <code>Map Header</code> button to create a business entity.</li> <li>A business entity called lead is added to the list of business entities in the left section.</li> <li>Select the lead business entity.</li> <li>The business entity definition is shown in the Definition section.</li> <li>Open the business entity lead and the header lead_HEADER.</li> <li>Select the field ID and mark it as the Key field from the column Key. (Set it to true.)</li> <li>Save the project.</li> <li>Every bot has a function associated with it.</li> <li>A function has input and provides an output.</li> <li>For a command bot, the function input is the business entity created from input parameters.</li> <li>For the output, a business entity can be mapped explicitly apart from the message.</li> </ul>"},{"location":"chyme/develop/#bot-functions","title":"Bot Functions","text":"<p>For select systems and APIs, enterprise system interface and business entity data mapping is allowed. Mapping helps in auto code generation later. Check how to map backend interfaces and business entities here.</p> <p>For this example, we shall map the business entity to the function associated with the Command Bot CreateLead. - Go to the tab Functions - Select the function COMMAND_CREATELEAD under the Command Bot - Select Output tab in the Business Entity section - Click <code>+ Add</code> and select the lead business entity as the output entity - In the Interface section:   - Select <code>+</code> (Add)   - Select the system: SalesSampleDB - Sales Sample DB   - Select the function: JDBC_EXECUTE   - Click <code>OK</code>   - Select the interface JDBC_EXECUTE. The objects available under this system are shown in the table below the Interface section.   - Under the Mapping section drag and drop as follows:     - Select lead from the left side and drop it on chyme_sample on the right side     - Select lead_HEADER from the left side and drop it on lead on the right side     - Save the project</p>"},{"location":"chyme/develop/#create-a-new-event","title":"Create a new Event","text":"<p>In the Bots Builder: Click <code>+</code> (Create) to create a new bot A popup dialog to choose the bot type is shown \u2013 choose Event and select the System generating the event (Sales Sample DB) and click <code>OK</code>. A new event bot gets added to the bot list Select the new bot (if it is not already selected) In the right panel set the Bot Details as follows: | Name  | Value     | Comments  | |-  |-  |-  | | Name  | LeadAlert     |       | | Description   | Lead Alert    |       | | Search Tags   | lead, crm     | These are tags used to search for the bot from the Chyme Web Configuration App    | | Type  | Event     | Set during bot creation. Cannot be changed.   | | Function  | EVENT_LEADALERT   | Auto created from the bot name. Cannot be changed.This is the Java function associated with the bot that gets executed when the bot is called.    | | Event Details     |   |   | | Event System  | Sales Sample DB   | System generating the event. Set during bot creation. Cannot be changed.  | | Source    | ONLY VALID FOR SAP AND SALESFORCE SYSTEMS     | Choose the event source for valid systems     |</p>"},{"location":"chyme/develop/#bot-input_1","title":"Bot Input","text":"<ul> <li>Event bot\u2019s input is a standard Business Entity and cannot be explicitly mapped</li> <li>Based on the Event source either an SAP, Salesforce or a Web event object is mapped as the input and available for consumption via APIs.</li> <li>Typically the output of a bot is a text message.</li> <li>If a business object has to be associated with the message to be stored and used automatically later in the conversation a Business Entity can be created in the Business Entity tab.</li> <li>Check the section on Business Entity to understand and more and create a Business Entity.</li> <li>Every bot has a function associated with it.</li> <li>A function has input and provides an output.</li> <li>For an event bot the function input is the standard object mapped automatically.</li> <li>For the output a business entity can be mapped explicitly apart from the message.</li> </ul>"},{"location":"chyme/develop/#bot-output_1","title":"Bot Output","text":""},{"location":"chyme/develop/#bot-functions_1","title":"Bot Functions","text":""},{"location":"chyme/develop/#bot-function-interface-data-mapping","title":"Bot Function Interface Data Mapping","text":"<p>For select systems and APIs, enterprise system interface and business entity data mapping is allowed. Mapping helps in auto code generation later. Check how to map backend interfaces and business entities here.</p> <p>For this example, we shall only send text as the output without mapping a business entity.</p>"},{"location":"chyme/develop/#bot-code","title":"Bot Code","text":"<ul> <li>Chyme bot code is in Java.</li> <li>Bot code is based on code generation and extension.</li> <li>The base bot code is generated along with extension classes.</li> <li>Any augmentation or completion is made in the extension classes.</li> </ul>"},{"location":"chyme/develop/#bot-code-generation","title":"Bot Code Generation","text":"<p>Bot code can be generated as follows: 1. Go to the Landscape tab. 1. Click on the button <code>Generate and Deploy</code>. 1. In the pop-up dialog, select Generate. Under this section select Bot Code. 1. Java source code is generated and is available in the project in the Eclipse Project Explorer. - All the source files are generated under the Java Package provided during the Chyme Bundle creation.</p> <p>Generated Java source code contains the following:</p> <p>All the generated source code are under 3 sub-packages: - <code>&lt;base package&gt;.gen</code>:   - Every generation overrides this package. Do not manually change the contents of this package.   - Contains the Business Entity POJOs, backend interface proxies, utility files, and bot classes   - Bot classes consist of:     - BotService: Contains all service methods that make the backend calls     - Abstract Implementations of Bots: Partial implementations taking care of boxing, unboxing and mapping of data objects     - Constant: Class with constant declarations - <code>&lt;base package&gt;.pa</code>:   - Every generation does not override this package. All code extensions have to be done in this package.   - Each Bot class extends the abstract class from the .gen package.</p>"},{"location":"chyme/develop/#bot-code-extension","title":"Bot Code Extension","text":"<p>Code extensions are done in the concrete implementations of the bot classes. These classes are in the subpackage \u2018.pa\u2019 outside the \u2018.gen\u2019 package. - Each Bot class extends the abstract class from the .gen package. - In the bot class there is a method called execute() where the extensions can be done. - When the bot is called this is the method that gets executed.</p>"},{"location":"chyme/develop/#validation","title":"Validation","text":"<p>Command bots might need their input fields to be pre-processed or validated. If pre-processing or validation is required for any command then enable the \u2018Validate Input\u2019 for the command.</p> <p>A common validation class called VALIDATION_HANDLER is generated in the package <code>&lt;base package&gt;.pa</code>. This class extends the class ABSTRACT_VALIDATION_HANDLER in the package <code>&lt;base package&gt;.gen.pa</code>. The ABSTRACT_VALIDATION_HANDLER has stubs for validation of each Bot Command that require validation.</p>"},{"location":"chyme/develop/#pre-processing","title":"Pre-processing","text":"<p>For a command bot parameters pre-processing is called in the following cases: - Dynamic List: Parameter type is a dynamic list (no static values are provided during design time) and the list is required to suggest values for the user - Optional Parameter: If a parameter is set as non-mandatory then the command bot is is given an option at run time to request this value from the user Fill the corresponding methods in the validation implementation class to do the pre-processing.</p>"},{"location":"chyme/develop/#validating-parameter-values","title":"Validating Parameter Values","text":"<ul> <li>For each parameter when a value is provided by the user the validation method is called so that the bot can validate the value suggesting either an acceptance or error for the value. In case of an error the bot can suggest a list of values from which the user can choose the value.</li> <li>To add validation code for a bot command:</li> <li>Override the bot validation method for the bot command in the class VALIDATION_HANDLER. Example: <code>public void validateCreateLead()</code></li> <li>Get the ValidateRequest object from ChymeAPI object.</li> <li>Read the request parameter from the request object</li> <li>Validate the parameter</li> <li>Create a ValidateResponse object to set the validation response:<ul> <li>Set the validation response message in the constructor is there is an error</li> <li>Set the validated value \u2013 if the input value is correct or you have to replace the user input value with a different value (Example: Priority Code instead of user-provided priority description)</li> <li>Add values for the user to choose from if you want to propose a list of values for the user to choose from a list (Note: the list can contain dynamic values too)</li> <li>Set the validation response back in ChymeAPI object.</li> </ul> </li> </ul> <p>Validation Options: - User input valid: If the user input is alright then set the same value back in the response without a message - User input valid but has to be replaced with a technical key: If the user input has to be replaced then set the replacement value back in the response without a message - User input invalid and has to reenter: If the user needs to be prompted for a new value as the current value does not meet the validation criteria then set a validation message in the response without setting any value - User input invalid and prompt to choose from valid list of values: If you want to propose a list of values instead of the user-provided input then set a message in the response along with the list of values (has to be added one by one in the response).</p>"},{"location":"chyme/develop/#deploy-bot","title":"Deploy Bot","text":"<p>The project is complete and ready for deployment.</p> <ul> <li>Go to the Landscape tab.</li> <li>Click on the button <code>Generate and Deploy</code>.</li> <li>In the pop-up dialog, select <code>Generate</code>. Under this section select Bot Program (Jar).</li> <li>Bot code is compiled and a jar is generated under the Deploy folder.</li> <li>Click on the button <code>Deploy and select</code>:</li> <li>Bot Definition</li> <li>Landscape System Settings</li> <li>Bot Program Jar</li> <li>Select <code>OK</code></li> <li>Bot code is compiled and a jar is generated under the Deploy folder.</li> </ul> <p>The bot project is deployed to Chyme.</p>"},{"location":"chyme/develop/#chyme-bots-builder-javascript","title":"Chyme Bots Builder - JavaScript","text":""},{"location":"chyme/develop/#conversation-design-nlp","title":"Conversation Design &amp; NLP","text":"<p>Conversations are a set of messages exchanged between the digital assistant and the user. For each user message, the response is a message either with or without bot interaction.</p> <p>The conversations are in natural language. - The conversation is a set of messages between the user and the digital assistant - Either the user or the digital assistant (via alerts) can initiate the conversation - Conversation can be a simple question and answer or include follow up questions, clarifications and multiple actions (bot calls)</p>"},{"location":"chyme/develop/#natural-language-processing-nlp-chatscript-engine","title":"Natural Language Processing (NLP) &amp; ChatScript Engine","text":"<p>Chyme uses NLP to interpret user messages. Chyme uses the open-source ChatScript NLP Engine.</p> <p>ChatScript download and documentation links:</p> <p>Download: http://chatscript.sourceforge.net/</p> <p>Tutorials: The tutorials are embedded in the installable and available online too. https://github.com/bwilcox-1234/ChatScript/tree/master/HTMLDOCUMENTATION</p> <p>The basic and advanced user manuals are sufficient to start modeling conversations.</p>"},{"location":"chyme/develop/#create-conversations","title":"Create Conversations","text":"<p>Creating a conversation is done in 2 steps.</p>"},{"location":"chyme/develop/#chat-transcript","title":"Chat Transcript","text":"<p>In the first model the conversation between the user and the bot \u2013 makes the conversation as natural as possible avoiding technical and enterprise lingo. Chat transcripts help us to understand the flow of the conversation.</p> <p>The same chat can have multiple variations. One model is shown below for the Lead example we are developing.</p> Conversation to create a lead User: Hi!Sales Assistant: Hi! What can I do for you today?User: Create a lead for Acme CorpSales Assistant: Provide the Lead DescriptionUser: 500 iPhones required next monthSales Assistant: Lead created for Acme Corp with the description \u2018500 iPhones required next month\u2019 Conversation to search a lead and follow up with an update User: Hi!Sales Assistant: Hi! What can I do for you today?User: Can you search for a lead?Sales Assistant: Provide the Lead DescriptionUser: iPhonesSales Assistant: There is a lead for this search: \u2018iPhone\u2019.Company: Acme CorpLead Description: \u2018500 iPhones required next month\u2019Lead Status: WarmDo you want to change the lead status?User: Yes. Set it to hot.Sales Assistant: Status changed to Hot for lead \u2018500 iPhones required next month\u2019"},{"location":"chyme/develop/#chatscript-conversation","title":"ChatScript Conversation","text":"<p>The chat transcript is now converted to the format that ChatScript can understand. The transcript can contain regular expressions and concepts so that multiple variants can be handled easily.</p> <p>The link to the ChatScript files are here.</p>"},{"location":"chyme/develop/#chyme-nlp-framework","title":"Chyme NLP Framework","text":"<p>Chyme uses the following to map natural language to enterprise or fulfillment system language.</p> <ul> <li>Bot Name \u2013 Every bot is identified using its name (same name provided in the Chyme Bots Builder)</li> <li>Parameters \u2013 Attributes or properties of the object used either to identify it or change values. E.g.: Leave request type = paid leave, Sales order created on = yesterday, etc.</li> </ul>"},{"location":"chyme/develop/#chyme-chatscript-apis","title":"Chyme ChatScript APIs","text":"<p>Chyme ChatScript APIs are functions (macros) in ChatScript that have to be used to communicate with the Chyme server. The APIs are as follows:</p> Name Description Parameters chymeBotMessage Identifies the bot that needs to be called at that point botName \u2013 command bot to be called params \u2013 comma separated input parameters with parameter name and value. \u201cparam1\u201d: \u201cvalue\u201d, \u201cparam2\u201d:\u201dvalue\u201d, \u201cparam3\u201d:\u201dvalue\u201d messageText \u2013 message to be returned to the user when the bot is sent for execution followup \u2013 follow up message suggestions to be shown to the user along with the bot response message to continue the conversation newCoversationFlag \u2013 indicates that a new conversation starts from this point chymeMessage Message to be sent to the user from ChatScript messageText \u2013 message to be returned to the user newCoversationFlag \u2013 indicates that a new conversation starts from this point followup \u2013 follow up message suggestions to be shown to the user along with the message to continue the conversation This is a structured substitute to the direct inline messages in ChatScript. chymeBotIterator Indicates that the message (user) is asking for the next data object Iterator \u2013 iterator key in the message <p>Note</p> <p>Action and object are specified in the bot definition using the Chyme Bots Builder tool</p>"},{"location":"chyme/develop/#knowledge-base","title":"Knowledge Base","text":""},{"location":"chyme/develop/#configuration","title":"Configuration","text":"<p>Chyme Digital Configuration is done using the web app. Load the Chyme web app in a browser using the Chyme URL. - Public Cloud: If you are using the Chyme public cloud then go to https://app.sandbox.chyme.io - Private Cloud or On-Premise: Check with your Chyme administrator for the development system URL.</p> <p>Login to the Chyme web app and start the configuration</p> <p>Note</p> <p>Your id should have the Bot Admin or Admin role for configuration options to be enabled.</p>"},{"location":"chyme/develop/#assistant","title":"Assistant","text":"<p>An Assistant or a Digital Assistant is the endpoint or application with which a user converses. An assistant associates the Chyme Solution with the Natural Language Processing Component.</p> <ul> <li>In the Chyme web app select the Admin Menu Solutions option from the menu.</li> <li>The list of Solutions deployed to Chyme are shown.</li> <li>From the drop-down above Solutions select the Assistants option. The list of available Assistants are shown.</li> <li>Click + to create a new Assistant</li> <li>Enter the following and select <code>Next</code></li> </ul> Name Value Comments Assistant Name SalesSample Name of the assistant as it appears in the messenger Description Sales Sample Assistant Description of the Assistant NLP Bot Name Salessample ChatScript Bot Name associated with the Assistant <ul> <li>Select the associations required from the list of messengers (Facebook, Skype, Slack, etc.). If no messenger is selected the default association shall be with the Chyme Messenger.</li> <li>Select <code>Create</code> to create the Assistant</li> </ul>"},{"location":"chyme/develop/#solution","title":"Solution","text":"<p>Chyme Solution is a grouping of the Chyme Bots Bundles.</p> <ul> <li>Bots Bundles: A solution can contain one or more bots bundles.</li> <li>Systems: Systems referred to in the bots bundles</li> <li>Bots: Bots in the bundles</li> </ul> <p>Configuration &amp; Activation: - New Solution: When the Bots Bundle was created using the Bots Builder a new Solution was created or an existing Solution was chosen for the Bots Bundle. - Deploy Solution: When the bots bundle is deployed from the Chyme Bots Builder the Solution and the related components are created in Chyme. - Select Solution: Use the Chyme web app Admin Menu and select Solutions. Select the Solution from the list in the Chyme Web App. - Activate Solution &amp; Choose Assistant: In the selected Solution click on <code>Activate</code> to activate the assistant. A list of existing assistants are shown for selection. Either choose an assistant or create a new assistant and select it. Select <code>Next</code>. System configuration options are shown. - System Configuration: The system server URL and other communication properties can be set here. - Activate: Select Complete Activation to activate the Solution.</p> <p>Note</p> <p>If the Solution contains Events then an Event Webhook per system is created. Event webhooks can be used to post data from external systems.</p>"},{"location":"chyme/develop/#testing","title":"Testing","text":""},{"location":"chyme/develop/#bot-code_1","title":"Bot Code","text":"<p>Bot code can be tested and debugged using the Chyme Bots Builder. - Open the Bots project in the Chyme Bots Builder - Select the Test tab - Select the Command, Event or Validation Handler function to debug - In the Input section modify the JSON to the desired input maintaining the JSON format - Double click on the function to open the class associated. Set break points in Eclipse. - In the Test tab, select Debug Function to debug the Bot call - To run and see the output choose Run Function instead of Debug Function</p>"},{"location":"chyme/develop/#messenger","title":"Messenger","text":"<p>To test the natural language statements with bots use the appropriate Messenger where the Digital Assistant is enabled and test the messages.</p>"},{"location":"chyme/digital-assistant/","title":"Digital Assistant","text":""},{"location":"chyme/digital-assistant/#overview","title":"Overview","text":"<p>A digital assistant is an application that can understand natural language and provide suitable responses. Digital assistants are conversational. So consider digital assistants as an application where typical screens with buttons, text fields and other such traditional UI elements are enmasse replaced with a common screen of a text or a voice messenger. Instead of clicking traditional UI elements to make data requests users shall send voice or text messages in natural language to make data requests. Instead of displaying the response for the data request in lists and detail pages the response from the digital assistant is given as natural language text (can be enhanced based on the messenger's capability) or voice.</p> <p>Example of a user conversation with a digital assistant: Hermoine: What's the cost of a Quidditch broomstick servicing kit? Wizarding Sport Sales Digital Assistant: Hey Hermoine! It is 75 galleons. Do you want to order one?</p> <p>In the traditional web or mobile app world, the app would have a catalog of products. The user would browse the products and click on the product to get to know the cost. In the digital assistant world, you just ask a question via a text or a voice message and get back an answer! A digital assistant is created as a set of skills for a generic set of tasks or for a specific domain. The natural language input is provided either via text using messengers or voice using devices like phones and intelligent speakers. Siri, Cortana, Google Now, Alexa, etc. are created as generic digital assistants that are capable of handling a variety of tasks for consumers. Chyme is an enterprise digital assistant that enables business conversations for consumers and employees alike via text and voice. Chyme digital assistants are created domain-specific to handle a set of skills. Ex: Helpdesk, sales, etc. The hierarchy is as follows:  - Digital assistant is a set of skills or capabilities - Skills are set of natural language enabled conversations - Conversation a set of messages exchanged between the user and the assistant - Assistant uses programs called bots to execute the required tasks and provide responses</p>"},{"location":"chyme/digital-assistant/#use-cases","title":"Use Cases","text":"<p>Enterprise digital assistant use cases can be broadly categorized into Consumer and Employee.</p>"},{"location":"chyme/digital-assistant/#consumer","title":"Consumer","text":"<p>Consumer engagement, in general, is via a website chat or a social messenger like Facebook Messenger or a voice assistant like Alexa. Typical use cases are: - Customer support - Customer engagement (Q&amp;A on products) - Many more...</p>"},{"location":"chyme/digital-assistant/#employee","title":"Employee","text":"<p>Employees, in general, use an enterprise messenger to communicate with colleagues at the workplace. Using the same enterprise messengers employees can communicate with digital assistants. Typical use cases are: - Helpdesk agents handling support requests via chat - Sales executives creating leads &amp; getting the list of events for the day from the sales system - Employees applying for leave &amp; filling timesheets - Managers approving business documents like contracts, purchase orders, etc. - Many more...</p>"},{"location":"chyme/digital-assistant/#messengers-devices","title":"Messengers &amp; Devices","text":"<p>Chyme digital assistants can be used from text and voice-enabled sources like website chat, consumer messengers (Facebook Messenger), enterprise messengers (Skype, Slack, etc.), always awake phone assistants (Google Home) and intelligent speakers (Amazon Alexa).</p>"},{"location":"chyme/external/","title":"External Messengers","text":""},{"location":"chyme/external/#skype","title":"Skype","text":"<p>Chyme supports multiple enterprise and social messengers. Chyme Digital Assistants can be enabled on Messengers as follows:</p> <ul> <li>In the Chyme web app select the Admin Menu Messengers option from the menu.</li> <li>Enable the Skype Messengers</li> <li>Click <code>+</code> to add the Assistant to the Messenger</li> <li>Select the Messenger from the list and enter the details required for the messenger</li> </ul> <p>The documentation available at https://dev.botframework.com/bots/new</p>"},{"location":"chyme/external/#facebook-messenger","title":"Facebook Messenger","text":"<ul> <li>In the Chyme web app select the Admin Menu Messengers option from the menu.</li> <li>Enable the Facebook Messengers</li> <li>Click <code>+</code> to add the Assistant to the Messenger</li> <li>Select the Messenger from the list and enter the details required for the messenger</li> <li>The documentation available at https://developers.facebook.com/docs/messenger-platform</li> </ul>"},{"location":"chyme/external/#workplace-chat","title":"Workplace Chat","text":"<ul> <li>In the Chyme web app select the Admin Menu Messengers option from the menu.</li> <li>Enable the Workplace Messengers</li> <li>Click <code>+</code> to add the Assistant to the Messenger</li> <li>Select the Messenger from the list and enter the details required for the messenger</li> <li>The documentation available at https://developers.facebook.com/docs/messenger-platform</li> </ul>"},{"location":"chyme/external/#slack","title":"Slack","text":"<ul> <li>In the Chyme web app select the Admin Menu Messengers option from the menu.</li> <li>Enable the Slack Messengers</li> <li>Click <code>+</code> to add the Assistant to the Messenger</li> <li>Select the Messenger from the list and enter the details required for the messenger</li> <li>The documentation available at https://api.slack.com/apps?new_app=1</li> </ul>"},{"location":"chyme/integrate/","title":"Integration","text":""},{"location":"chyme/integrate/#android-native-apps","title":"Android Native Apps","text":""},{"location":"chyme/integrate/#overview","title":"Overview","text":"<p>Chyme SDK is an android plugin that can be used to add Chatbots to any android application.</p> <p>Required</p> <p>Add the following dependencies to app build.gradle file</p> <pre><code>implementation 'de.hdodenhof:circleimageview:2.2.0'\nimplementation 'com.github.dmytrodanylyk.circular-progress-button:library:1.1.3'\nimplementation 'com.orhanobut:dialogplus:1.11@aar'\nimplementation 'com.android.support:customtabs:27.0.2'\nimplementation ('com.github.bumptech.glide:glide:3.8.0') {\n exclude module: 'okio'\n}\nimplementation('io.socket:socket.io-client:1.0.0') {\n exclude group: 'org.json', module: 'json'\n exclude module: 'okio'\n}\nimplementation 'com.unvired.android-sdk:3.0.187' (Note: always use latest available from maven)\n</code></pre> <p>Add following code in app <code>manifext.xml</code> file</p> <p><code>&lt;!-- ==================== Chat Window Screens ==================== --&gt;</code></p> <pre><code>&lt;activity\nandroid:name=\"com.unvired.chymesdk.activities.ChatWindowActivity\"\nandroid:theme=\"@style/AppTheme\" /&gt;\n&lt;activity\nandroid:name=\"com.unvired.chymesdk.activities.ChatLoginActivity\"\nandroid:theme=\"@style/AppTheme\" /&gt;\n\n&lt;activity\nandroid:name=\"com.unvired.chymesdk.activities.AudioViewActivity\"\nandroid:theme=\"@style/AppTheme\" /&gt;\n\n&lt;activity\nandroid:name=\"com.unvired.chymesdk.activities.ImageViewActivity\"\nandroid:theme=\"@style/AppTheme\" /&gt;\n\n&lt;activity\nandroid:name=\"com.unvired.chymesdk.activities.WebViewActivity\"\nandroid:theme=\"@style/AppTheme\" /&gt;\n</code></pre> <p>Usage</p> <p>Method 1: Using \"AssitantFAB\"</p> <p>Include AssistantFAB view in xml layout wherever needed.</p> <pre><code>&lt;com.unvired.chymesdk.custom.AssistantFAB\n     android:layout_width=\"wrap_content\"\n     android:layout_height=\"wrap_content\"\n     android:layout_margin=\"16dp\"\n     android:layout_gravity=\"bottom|end\"\n     app:json_config=\"@string/assistant_config\" /&gt;\n</code></pre> <ul> <li><code>string/assistant_config</code> is the ChatBot configuration in JSON format.</li> </ul> <p>Method 2: Start activity programmatically</p> <pre><code>Intent intent = new Intent(this, ChatLoginActivity.class);\nintent.putExtra(AssistantHelper.CONFIG, getString(R.string.assistant_config));\nintent.putExtra(KEY, VALUE);\nstartActivity(intent);\n</code></pre> <ul> <li><code>string/assistant_config</code> is the ChatBot configuration in JSON format.</li> <li>Pass values using KEY-VALUE pair if needed.</li> </ul>"},{"location":"chyme/integrate/#rest-api","title":"REST API","text":""},{"location":"chyme/integrate/#overview_1","title":"Overview","text":""},{"location":"chyme/integrate/#version-information","title":"Version information","text":"<p>Version : 0.0.9</p>"},{"location":"chyme/integrate/#uri-scheme","title":"URI scheme","text":"<p>Host: app.sandbox.chyme.io BasePath : /API Schemes: HTTPS</p>"},{"location":"chyme/integrate/#tags","title":"Tags","text":"<p>Files: Operations about Files</p> <p>Messages: Operations about Messages</p>"},{"location":"chyme/integrate/#paths","title":"Paths","text":""},{"location":"chyme/integrate/#upload-a-file-to-the-chyme-server-to-attach-to-a-message-later","title":"Upload a file to the Chyme server to attach to a message later","text":"<pre><code>POST /files\n</code></pre>"},{"location":"chyme/integrate/#description","title":"Description","text":"<p>Uploads a file to the Chyme server. If a mediaId is specified then the file is saved on Chyme with that id or a new mediaId is created and returned. The file can be attached with a message by using the returned mediaId and posting it along with the message data to the SEND_MESSAGE API.</p>"},{"location":"chyme/integrate/#parameters","title":"Parameters","text":"Type Name Description Schema Default FormData filenamerequired The file to upload file FormData mediaIdoptional Specify the unique mediaId if you require Chyme to cache the file with this id. If not specified a new mediaId will be created. string"},{"location":"chyme/integrate/#responses","title":"Responses","text":"HTTP Code Description Schema 200 OK UploadResponse"},{"location":"chyme/integrate/#consumes","title":"Consumes","text":"<pre><code>multipart/form-data\n</code></pre>"},{"location":"chyme/integrate/#produces","title":"Produces","text":"<pre><code>application/json\n</code></pre>"},{"location":"chyme/integrate/#tags_1","title":"Tags","text":"<ul> <li>Files</li> </ul>"},{"location":"chyme/integrate/#security","title":"Security","text":"Type Name Scopes basic Default"},{"location":"chyme/integrate/#example-http-response","title":"Example HTTP response","text":"<p>Response 200</p> <pre><code>{\n  \"application/json\" : {\n    \"mediaId\" : \"c99ae254-b192-4f01-9868-df1493effe80\"\n  }\n}\n</code></pre>"},{"location":"chyme/integrate/#download-the-file-specified-by-the-mediaid-from-chyme-server","title":"Download the file specified by the mediaId from Chyme server.","text":"<pre><code>GET /files/{mediaId}\n</code></pre>"},{"location":"chyme/integrate/#description_1","title":"Description","text":"<p>Download the file specified by the mediaId from the Chyme server.</p>"},{"location":"chyme/integrate/#parameters_1","title":"Parameters","text":"Type Name Description Schema Default Path mediaIdrequired mediaId string"},{"location":"chyme/integrate/#responses_1","title":"Responses","text":"HTTP Code Description Schema 200 Returns the file in the body No Content"},{"location":"chyme/integrate/#tags_2","title":"Tags","text":"<ul> <li>Files</li> </ul>"},{"location":"chyme/integrate/#security_1","title":"Security","text":"Type Name Scopes basic Default"},{"location":"chyme/integrate/#send-a-message-to-a-user-group-channel-or-assistant","title":"Send a message to a user, group, channel or assistant.","text":"<pre><code>POST /messages\n</code></pre>"},{"location":"chyme/integrate/#description_2","title":"Description","text":"<p>Send a message to a user, group, channel or assistant. Also attach previously uploaded files to the message.</p>"},{"location":"chyme/integrate/#parameters_2","title":"Parameters","text":"Type Name Description Schema Default FormData assistantoptional The name of the assistant to post the message as. This parameter is required ONLY if an external system is posting the message via a WebHook URL. string FormData conversationIdoptional If the message is being posted as part of an existing conversation, provide the conversationId. Not providing this will default to creating a new conversation. string FormData languageoptional The language of the included message. Not required if English, for other languages set it to the 2 character ISO language code string <code>\"en\"</code> FormData mediaIdoptional If a file has already been uploaded to the Chyme server and needs to be attached to this message, provide the mediaId that was returned in the UPLOAD_FILE api. string FormData messagerequired The message to send string FormData recipientrequired The message recipient. The recipient can be the @name of a normal user, an assistant, a group or a channel. string"},{"location":"chyme/integrate/#responses_2","title":"Responses","text":"HTTP Code Description Schema 200 JSON output: recipient - the recipient to whom the message was sent successfully conversationId - The conversation this message is a part of messageId - Unique identifier of this message &lt;SendMessage&gt; array"},{"location":"chyme/integrate/#consumes_1","title":"Consumes","text":"<pre><code>application/x-www-form-urlencoded\n</code></pre>"},{"location":"chyme/integrate/#produces_1","title":"Produces","text":"<pre><code>application/json\n</code></pre>"},{"location":"chyme/integrate/#tags_3","title":"Tags","text":"<ul> <li>Messages</li> </ul>"},{"location":"chyme/integrate/#security_2","title":"Security","text":"Type Name Scopes basic Default"},{"location":"chyme/integrate/#example-http-response_1","title":"Example HTTP response","text":"<p>Response 200</p> <pre><code>{\n  \"application/json\" : [ {\n    \"recipient\" : \"adam\",\n    \"conversationId\" : \"f728967b-c063-4117-a35b-d5f5979e5da9\",\n    \"messageId\" : \"f728967b-c063-4117-a35b-d5f5979e5da9\"\n  } ]\n}\n</code></pre>"},{"location":"chyme/integrate/#retrieve-the-replies-for-a-message-posted-to-an-assistant","title":"Retrieve the replies for a message posted to an assistant.","text":"<pre><code>GET /messages/{messageId}/replies\n</code></pre>"},{"location":"chyme/integrate/#description_3","title":"Description","text":"<p>Retrieve the replies for a message posted to an assistant. Pass the messageId whose replies need to be retrieved. One ore more replies may be returned in the response. All replies that have not yet been delivered will be returned.</p>"},{"location":"chyme/integrate/#parameters_3","title":"Parameters","text":"Type Name Description Schema Default Path messageIdrequired messageId string"},{"location":"chyme/integrate/#responses_3","title":"Responses","text":"HTTP Code Description Schema 200 Returns the available replies to the specified messageId &lt;MessageDetails&gt; array"},{"location":"chyme/integrate/#produces_2","title":"Produces","text":"<pre><code>application/json\n</code></pre>"},{"location":"chyme/integrate/#tags_4","title":"Tags","text":"<ul> <li>Messages</li> </ul>"},{"location":"chyme/integrate/#security_3","title":"Security","text":"Type Name Scopes basic Default"},{"location":"chyme/integrate/#example-http-response_2","title":"Example HTTP response","text":"<p>Response 200</p> <pre><code>{\n  \"application/json\" : [ {\n    \"conversationId\" : \"c2b90edb-861c-4ec3-9316-51f33f53adbd\",\n    \"referenceId\" : \"\",\n    \"messageText\" : \"Doing great buddy,\",\n    \"contentText\" : \"\",\n    \"longitude\" : \"\",\n    \"latitude\" : \"\",\n    \"timeAtServer\" : 1502273147127,\n    \"commandName\" : \"\",\n    \"actions\" : \"\",\n    }]\n}\n</code></pre>"},{"location":"chyme/integrate/#definitions","title":"Definitions","text":""},{"location":"chyme/integrate/#messagedetails","title":"MessageDetails","text":"<p>Model for MessageDetails | Name  | Description   | Schema    | |-  |-  |-  | | actionsrequired   |       | string    | | commandNameoptional   |       | string    | | contentTextoptional   |       | string    | | contentTypeoptional   |       | string    | | convSequenceIdoptional    |       | integer(int32)    | | fromChannelTypeoptional   |       | string    | | hasReplyoptional  |       | string    | | latitudeoptional  |       | string    | | longitudeoptional     |       | string    | | mediaCountoptional    |       | integer(int32)    | | mediaIdoptional   |       | &lt; string &gt; array  | | messageIdoptional     |       | string    | | messageTextoptional   |       | string    | | parentMessageIdoptional   |       | string    | | recipientoptional     |       | string    | | referenceIdoptional   |       | string    | | rootMessageIdoptional     |       | string    | | senderoptional    |       | string    | | timeAtServeroptional  |       | integer(int32)    | | toChannelTypeoptional     |       | string    |</p>"},{"location":"chyme/integrate/#sendmessage","title":"SendMessage","text":"<p>Model for SendMessage</p> Name Description Schema conversationIdrequired string messageIdoptional string recipientoptional string"},{"location":"chyme/integrate/#security_4","title":"Security","text":""},{"location":"chyme/integrate/#default","title":"Default","text":"<p>Default authentication scheme for the API</p> <p>Type : basic</p>"},{"location":"chyme/intro/","title":"Introduction","text":""},{"location":"chyme/intro/#introduction","title":"Introduction","text":"<p>Chyme Development Guide explains how to develop Digital Assistants (chatbots) using the Chyme platform and toolset.</p>"},{"location":"formsapp/dashboard/","title":"Forms Dashboard","text":""},{"location":"formsapp/dashboard/#dashboard","title":"Dashboard","text":"<p>The dashboard screen is the main work area for you as a user.  The screen lists all the forms that are to be completed by you.  They include forms that you started adhoc, those that are created based on a schedule and those that have been assigned to you.</p> <p>The split screen (Browser/Windows/iPad/Android Tablet) also displays interactive cards with a count of the forms with that status (tap on them to view those forms only.)</p> <ul> <li>All Open forms</li> <li>Forms due today (work for today, require your attention)</li> <li>Overdue forms (these probably require your immediate attention)</li> <li>Closed/Completed forms (those that you have completed and are still on device or in case of browser those that you completed in this session)</li> </ul> <p>In addition you can also tap on the Filter icon to set up a filter to work with the forms of the corresponding status, change sort order etc.</p>"},{"location":"formsapp/dashboard/#calendar","title":"Calendar","text":"<p>A calendar displays all dates on which forms are due.  Overdue dates are indicated in red.  Tap on any day to view the forms that are due on that day</p>"},{"location":"formsapp/dashboard/#forms-to-fill","title":"Forms to fill","text":"<p>The work list that is shown in the split screen dashboard is your primary work area.  These are the forms that you will be required to work on a continuous basis.  </p> <p>Forms are displayed within tabs.  Tabs allow you to work with:</p> <ul> <li>Open forms due Today (default)</li> <li>Forms due later</li> <li>Approvals (Includes your requests and those that you need to approve)</li> <li>Alerts (alerts from form submissions etc. that you need to review).  Tapping on any alert will navigate to that form directly</li> </ul> <p>Forms are additionally grouped according to the Category they belong to and are displayed.  You can expand any category and work with the forms in that.</p> <p>Forms have the following attributes additionally:</p> <ul> <li>Assignee - The user(s) or team that needs to work on the form.  Forms appear in your work list only if you have a  role to play in it.</li> <li>Reviewer - This is the person responsible to review the form and finally complete the form and submit it.  The Reviewer or Primary responsible can be any of the following:</li> <li>You as a user are the only person working on the form then you are also the primary responsible</li> <li>A group of users are working on the form then the primary responsible is the user who is responsible to review and complete it.  This can be you or any of the other users working on the form.</li> <li>If a team is responsible to work on the form then the Team Manager is the primary responsible.</li> <li>A primary responsible can also delegate to others</li> <li>Priority - Forms can be of three different priorities based on their importance.  In case of forms due on the same day, the priority can help users determine the order in which they need to complete work.</li> <li>High - Very important forms such as mandatory safety inspection forms</li> <li>Medium - Forms that are of lower priority such as generic data collection etc</li> <li>Low - Forms that are of the least priority</li> <li>None - No priority assigned</li> <li>Due Date - Forms need to be be completed by a specific date.  This is useful in time sensitive data collection such as scheduled inspections etc. wherein forms need to be completed and submitted by the specified dates.</li> <li>Reminder - You can also set up reminders for forms that have a due date.  The default is no reminder and can be changed to Daily reminders or just a reminder before the form is due.</li> <li>Helpful note - You can add a note to the form that has to be filled for yourself or for others.  For e.g. if an inspection of a newly commissioned generator is to be done, user could add a note to that effect to the inspection form.</li> </ul> <p>Note</p> <p>When multiple users are working on a form, each user completes the form to signify their part of work is complete.  However the form goes to final completion state only after the primary responsible reviews and completes the form</p>"},{"location":"formsapp/dashboard/#initiated-by-yourself","title":"Initiated by yourself","text":"<p>These are adhoc forms that you initiate.  The forms are assigned to you by default and you can fill in all the data and complete the form.  You can also share the form with other internal or external users.  See sharing for more details.</p>"},{"location":"formsapp/dashboard/#initiated-by-others","title":"Initiated by others","text":"<p>These are forms that other users require you to complete.  The forms are assigned to you and you are also responsible to ensure the data is correct before completing the form.</p>"},{"location":"formsapp/dashboard/#scheduled","title":"Scheduled","text":"<p>These are forms that are initiated by the system based on a periodic schedule that has been configured.  The forms are assigned to you and you may also be responsible to review the form before completing it.</p>"},{"location":"formsapp/dashboard/#start-new-forms","title":"Start new forms","text":"<p>Your work list displays all the forms that are currently assigned and need your attention.  However the work list is dynamic in nature and new forms may be added to it and previously assigned forms may also be removed.</p> <p>The work list additions maybe due to either forms that you initiate, are assigned to you by other users or are created by the system on a schedule.  The list may also have new forms added due to reviews failing (forms are reopened), delegated to you by others, created by the system etc.  Similarly forms may be removed from your work list when you delegate to others or they are not required any longer.</p>"},{"location":"formsapp/dashboard/#adhoc-forms","title":"Adhoc forms","text":"<p>In the dashboard screen tap on the <code>+</code> icon add a new form to the work list.  Select the form or the form set.  You can now tap on the <code>Fill</code> button to start filling directly or tap on Next to enter additional attributes before filling.  This will create a new instance of the form, assign it to you and open the form to fill. This is useful to fill a form on an adhoc basis or on demand.</p>"},{"location":"formsapp/dashboard/#assign-forms","title":"Assign Forms","text":"<p>In the dashboard screen tap on the <code>+</code> icon add a new form to the work list.  Select the form or the form set.  You can now tap on the <code>Next</code> button. The next screen in the wizard is now displayed.  You can (optionally) add some helpful notes on why this form needs to be filled, assign it to another user or team, set a due date / reminder and a priority as required.  This will create a new instance of the form, assign it as per your choice and submits the form for further distribution.  This is useful to request another user or team to collect some data on demand.</p>"},{"location":"formsapp/formfill/","title":"Filling Forms","text":""},{"location":"formsapp/formfill/#fill-forms","title":"Fill forms","text":"<p>ap on the form in your work list or in the Formset details view to open the form.  Users will be able to review the data entered already (either by them or others in the team working on the form) and add additional data or make modifications.</p> <p>Partial save of the form is possible any time until the form is completed.  Users can make modifications and save the form as many times as required.</p> <p>Once all data is entered users can choose to complete the form so that it leaves their work list.  More details here: Completing Forms and Formsets</p> <p>Note:  Browser access is online and saves data to the backend immediately.  All mobile devices allow to work offline with or without connectivity and smartly submit data in the background when connectivity is available.</p>"},{"location":"formsapp/formfill/#capturing-signatures","title":"Capturing Signatures","text":"<p>Digital signatures of participants in the form can be captured directly in the form if required.  While this is really convenient on touch enabled devices users can use the mouse to scribble their acknowledgments also.</p> <p>Signatures are captured as part of the form and also appear in the PDF versions of the form.</p>"},{"location":"formsapp/formfill/#attaching-pictures-and-documents","title":"Attaching Pictures and Documents","text":"<p>Users can also use the camera to attach pictures to the form.  Any documents can also be attached to the form.  All the images and files are captured and saved as part of the form data.</p>"},{"location":"formsapp/intro/","title":"Introduction","text":""},{"location":"formsapp/intro/#turbo-forms","title":"Turbo Forms","text":"<p>The Turbo Forms App is an App for users to fill forms assigned to them.  Forms may be created by the users on an adhoc basis or created and assigned to them by other users.  System generated forms on a schedule for periodic data collection such as inspections can also be filled and completed.  Form filling includes entering textual data, capturing signatures, pictures, annotating pictures etc.</p>"},{"location":"formsapp/intro/#fill-forms-on-web","title":"Fill forms on web","text":"<p>The forms application can be accessed online via your web browser on desktop and mobile. </p> <p>The screen space available on Desktop, iPad and Android tablet browsers is utilized for a full screen experience.  On the iPhone and Android Phones, the screens are responsive and optimized for the smaller form factor.</p> <p>The screens are the same that you see in the mobile apps and provide the user a rich and familiar user experience.</p>"},{"location":"formsapp/intro/#browser-permissions","title":"Browser Permissions","text":"<p>On successful login the browser will request your permission for accessing Local Storage.  The Local Storage permission is mandatory and is required to save the data downloaded and entered in the app.  Please permit this as without local storage permission, the application will not work.</p> <p>The browser will also request for Location permission.  This is to include the location where the form data is captured and is optional based on your Company policy.  If your company requires location data to be included then please provide it else you can skip it.  Note that Unvired does not perform any analysis on the location data automatically.  The data processing is limited to what your company requires and has authorized.</p> <p>If you need to capture pictures and attach to the form Camera permission will also be required.</p>"},{"location":"formsapp/intro/#fill-forms-on-mobile","title":"Fill forms on Mobile","text":"<p>The forms application is available on all mobile devices.  This provides for a complete offline and a native mobile experience.</p> <p>Download your work list (forms) and move to wherever the forms need to be filled.  You can work completely offline and capture data be it in the field where there is patchy connectivity or in a plant where connectivity is not present for safety reasons.  Sync back to the server when you are online automatically.</p>"},{"location":"formsapp/intro/#install-and-login","title":"Install and Login","text":"<p>Install the mobile applications and login or request your administrator for the login URL to access via browser.</p> <p>The apps are available for Android Phones and Tablets, iPhone and iPad and for Windows 10 Tablets.</p> <p> </p> <p>In the login screen enter your Forms Application User Id and Password.  If the application is setup for SAML Single Sign On and your administrator has informed you, you can also login via the SSO option.</p>"},{"location":"formsapp/intro/#mobile-app-permissions","title":"Mobile App Permissions","text":"<p>The mobile app will also request for Storage, Communication, Push Notification, Camera and Location permission.  Do remember to provide push notification permission so that data can be automatically pushed to your mobile device.  Additionally provide the other permissions so that forms data can be captured, saved locally and transmitted when connectivity is available.</p>"},{"location":"formsapp/intro/#data-security","title":"Data Security","text":"<p>Forms data is company confidential and can also include sensitive data.  The forms app is designed to be private, safe and secure.</p>"},{"location":"formsapp/intro/#data-on-mobile-device","title":"Data on Mobile Device","text":"<p>The data that is stored on the mobile device is saved in an AES-256 encrypted database.  This is the highest level of encryption available and is same as what banks and other establishments use.  Data is further isolated using device supported mechanisms so that it is isolated and cannot be copied out.</p>"},{"location":"formsapp/intro/#data-transmission","title":"Data Transmission","text":"<p>The data is transmitted to the servers using HTTPS/SSL protocol only.  This ensures that the data on the wire is encrypted and cannot be sniffed on the network.</p>"},{"location":"formsapp/intro/#data-at-rest","title":"Data at Rest","text":"<p>The data is stored in databases that are encrypted.   Additionally data may also be transmitted to your Company's backend systems such as SAP, Databases etc.</p>"},{"location":"formsapp/intro/#privacy","title":"Privacy","text":"<p>Depending on the service subscribed, forms data may be  saved in the Unvired cloud or within your data centre,  Even if data is stored on the Unvired cloud, access is restricted to named personnel for support and other maintenance activities only.  They also do not have access to decrypted data which is provided only to named personnel with customer permission after signing the required NDAs.  </p> <p>Forms data is  NOT sent to any third party service and is securely held within the Unvired cloud or private data centre only.  The only analysis that may be run or those that customers require.  Unvired does not mine the data for any purpose whatsoever.</p> <p>Unvired has also been assessed successfully for compliance with GDPR</p> <p>Privacy policy</p>"},{"location":"formsapp/misc/","title":"Other Topics","text":""},{"location":"formsapp/misc/#alerts","title":"Alerts","text":"<p>Alert messages regarding form data are sent to the application for your attention.  This could be when a form is rejected in review, there is a conflict in data or any other general alert.  Depending on the configuration, successful form submissions may also send an alert to the user.  For e.g. a sales order is created successfully, the sales order number can be sent to user in an alert.</p> <p>Tap on the Alerts card to display all the alerts.  Tap on the individual alerts to open the corresponding form.</p>"},{"location":"formsapp/misc/#settings","title":"Settings","text":"<p>Tap on the settings Gear icon to display the settings in the mobile app. </p> <p>Pro Tip</p> <p>Important: Tap on the icon on each of the settings to take action</p> <ul> <li>The options available are:</li> <li>Displays the user's name and the connection status with the forms backend.  Tap on the icon to check connection status</li> <li>Sync status.  Indicates the current sync status (idle/processing/downloading).  Tap on the download icon to check for any pending messages on the server (may be required if push notifications were not delivered for e.g.)  Tap on the status icon to refresh status</li> <li>Errors, Warnings and Info.  Tap on the icon to view all the messages</li> <li>Logs and log level.  Tap on the upload icon to send the logs to the server or on the email icon to email it to support.  Tap on the log icon to view the logs on the device.  Change the log level via the dropdown</li> <li>Important - Default, records errors and important messages</li> <li>Error - Records mainly errors in the log</li> <li>Debug - Required only for trouble shooting.  Can slow down app if enabled on some devices</li> <li>Push notification.  Tap on the icon to test if push notifications are working in your landscape.  A notification will be displayed after a few seconds on tapping if successful.  If a notification is not shown, contact your administrator for help.</li> <li>Advanced.  Use with care.  Tap on the trashcan icon to delete all the local data and reset the application.  All local data only will be lost and you will need to login into the app again.</li> </ul>"},{"location":"formsapp/misc/#refresh-forms","title":"Refresh Forms","text":"<p>Tap on the Refresh button or Pull down the worklist to refresh all the forms in your work list.  </p> <p>Any new forms that were created for you will also be downloaded.  You will not be required to use this in the normal case as incremental data will be pushed to your device. However if notifications are not delivered to your device you can pull down to refresh or use the Refresh button (browser) to download data manually.</p> <p>Also on browsers (Push notifications may be missed), downloading other users updates can be achieved by hitting the Refresh button.</p>"},{"location":"formsapp/misc/#refresh-system-data","title":"Refresh System Data","text":"<p>System data on the device comprises the Form Templates and the Master Data that you work with.  Both Form Templates and Master Data are automatically refreshed when you restart the app.  However in some edge cases you may want to manually refresh them.  This can be done by hitting the \"Download\" button and selecting one or both options from below.</p> <ul> <li>Download all the Form Templates (design)</li> <li>Download all the Master Data</li> </ul>"},{"location":"formsapp/video/","title":"Video Tutorials","text":""},{"location":"formsapp/video/#video-tutorials","title":"Video Tutorials","text":"<p>Want to follow a few videos to get familiar with the Turbo Forms App?  We got you covered.  </p> <p>We have a set of video tutorials that will talk you through the process of installing, login and working with your forms using the Turbo Forms App.  While the tutorials are organized as a series, you can still watch any individual video to get familiar with only that topic.</p>"},{"location":"formsapp/video/#getting-started","title":"Getting Started","text":"<p>How do I install and get started with the App? Watch Video (opens new window)</p>"},{"location":"formsapp/video/#overview","title":"Overview","text":"<p>Working with the Home Screen (Dashboard) Watch Video (opens new window)</p>"},{"location":"formsapp/video/#working-with-forms","title":"Working with Forms","text":"<p>Fill and Assign forms Watch Video (opens new window)</p>"},{"location":"formsapp/video/#sharing-forms","title":"Sharing Forms","text":"<p>Share and Collaborate with forms within and outside your organization Watch Video (opens new window)</p>"},{"location":"formsapp/video/#review-comments","title":"Review Comments","text":"<p>How do I add review comments in a form for my team? Watch Video (opens new window)</p>"},{"location":"formsapp/video/#forgot-password","title":"Forgot Password","text":"<p>Forgot your password or need to change it? Watch (opens new window)</p>"},{"location":"formsapp/workwithforms/","title":"Completing Forms & Formsets","text":""},{"location":"formsapp/workwithforms/#what-is-completing-a-form","title":"What is Completing a form?","text":"<p>Completing a form is similar to completing a ToDo or a Task.  Completing a form indicates that the user has entered all the required data and is now completing it so that the form can be finalized and submitted to the backend systems or a Reviewer can review the form and finalize it.  Completed forms are moved out of your open worklist.</p>"},{"location":"formsapp/workwithforms/#when-can-i-complete-a-form","title":"When can I Complete a form?","text":"<p>A form can be completed based on two conditions.  </p> <ul> <li>All mandatory fields are filled in.  This is indicated by the form fill percentage counter on top of the form.  If it reaches 100% you can complete the form.</li> <li>The form might also require other business requirements to be fulfuilled before it can be completed.  This is an optional step that is configured and programmed by the form designer.  For e.g. a form might be configured such that only after initial data is reviewed and signed off, it can be completed by the user.</li> </ul>"},{"location":"formsapp/workwithforms/#completing-forms-as-a-user","title":"Completing forms as a User","text":"<p>Completing forms as a user can be one of the following:</p> <ul> <li>You as a user are the only one working on the form.  When you complete the form its in the final state pending form validations.  Once the validations are successful, any configured workflows on completion will be executed and data posted to the backend systems.  Additionally PDF versions as required may be generated and posted to external systems like Sharepoint etc for finalization.</li> <li>You are one of the users working on the form.  In this case by completing, you are indicating that your part of the work is now complete and the manager (or any primary responsible) can review it.</li> </ul>"},{"location":"formsapp/workwithforms/#completing-forms-as-a-manager","title":"Completing forms as a Manager","text":"<p>Completing forms as a Manager can be one of the following:</p> <ul> <li>You as a Manager are the only one working on the form.  When you complete the form its in the final state pending form validations.  Once the validations are successful, any configured workflows on completion will be executed and data posted to the backend systems.  Additionally PDF versions as required may be generated and posted to external systems like Sharepoint etc for finalization.</li> <li>You are one of the users working on the form and are also the primary responsible.  In this case once every other user completes the form (their part of the work), you can now review the consolidated data.  If the data is correct in all respects you can also complete the form and initiate the further configured workflows as explained above.  If the data is incorrect or incomplete you can fail the review.  In this case all the users tasks are reopened and they are alerted with the comment you entered when the review failed.  The users can rework on the form and submit for your review again.</li> </ul>"},{"location":"formsapp/workwithforms/#are-formsets-different","title":"Are Formsets different?","text":"<p>Formsets are just a collection of forms.  So completing a form in a formset completes only that form. Every form in a formset needs to be completed (unless its optional) before the formset itself is completed.  Once the formset is completed the configured completion workflows will be triggered and data posted to the corresponding backend systems for further processing.</p>"},{"location":"formsapp/workwithforms/#other-actions","title":"Other Actions","text":"<p>While completing a form is the primary action to be performed, there are many other actions a user can take. - Save (work is not done and either partial or compelte data needs to be persisted) - Review and complete forms - Resolve conflicts - Cancel - Change the Reviewer - Delegate - Share - Email PDF versions of the filled form - Request other users for feedback via comments / annotations</p>"},{"location":"formsapp/workwithforms/#completing-reviews","title":"Completing Reviews","text":"<p>Reviews may be required due to the workflow that is setup and are possible in the following scenarios: - All your team members have completed their work and you need to review and complete it finally as you are the primary responsible / reviewer.  If the form data is correct you can complete the form and submit it finally.  If the data needs to be corrected/completed etc, you can \"fail\" the review and reopen the form for all the users who were earlier working on the form.  Once the users correct the data and resubmit it the primary responsible can approve the review and finalize the form. - A backend workflow is configured for the finalized data to be reviewed by another user or maybe even a team.  In this case a copy of the form is sent to the new user / team to review and approve the data.  If the review is successful then the data is finalized and sent for further workflow execution.  However if the review fails, the form data is sent back to the original set of users to correct and resubmit the data.</p>"},{"location":"formsapp/workwithforms/#resolving-conflicts","title":"Resolving Conflicts","text":"<p>When multiple users are working on the same instance of the form (group inspection etc), there may be conflicts in the data since a user has updated the data after you may have downloaded it.  The forms server will automatically try to resolve such conflicts for you and will merge changes that can be accepted.  If this cannot be achieved, then the server sends a copy of the conflicting data to the device or browser.</p> <p>The entry in the dashboard is shown with a Resolve label to indicate that there is a conflict(s) and it needs to be resolved.  When the user taps on the resolve, a merge window is shown.  The left side has all the individual conflicts with the current value displayed within brackets ().  A tick mark is displayed against the entry if you have already resolved the conflict.  Tapping on the entry displays the value on your device and the value on the server and you can accept the right value.  Once all the conflicts are resolved, you can tap on resolve to submit the merged content to the server so that it can be accepted.</p> <p>The conflict resolutions available are:</p> <ul> <li>Accept all server changes - The client data is completely discarded / overwritten with the latest data from the server.</li> <li>Accept all client changes - The server changes are completely discarded and the client data is resubmitted.</li> <li>Manual resolution - Each conflicted item can be reviewed and the required values (server or client) can be accepted</li> </ul>"},{"location":"formsapp/workwithforms/#cancelling-forms","title":"Cancelling forms","text":"<p>Forms once created for you to work on exist in your work list until completed.  Its possible in certain cases the need to fill these forms is not there any longer.  Users can in these cases cancel the form with a comment so that they are removed from their work list and companies can still have a record of the data and the reason for cancellation for audit purposes.</p>"},{"location":"formsapp/workwithforms/#change-the-reviewer","title":"Change the Reviewer","text":"<p>If you are the Reviewer, you can also assign the review role to any other person working on that form.  The user need not be a Manager.  This is helpful if you want to stay involved in the form but want some other user (for e.g. another Supervisor) to review and complete the form.</p>"},{"location":"formsapp/workwithforms/#delegating-forms","title":"Delegating Forms","text":"<p>If you are unable to complete your part of the form you can delegate the form to a colleague or team member.  You will also need to provide a comment on why you need to delegate.</p> <p>When a form is delegated, the delegating user's task is indicated as delegated and the delegated user gets a copy of the form and the data aggregated until then.  If the user is the primary responsible, the the delegated user is also set as the new primary responsible.</p>"},{"location":"formsapp/workwithforms/#sharing-forms","title":"Sharing forms","text":"<p>When others need to be involved in the completion of the form, users can share the form and the data filled in with users or teams.  The sharing can be with Internal or External users and with View only or Edit permissions.</p> <p>Internal Users Internal users are your colleagues and other team members who work with the forms application.  These are other \"named\" users who can access the forms application and review and submit data.</p> <p>Tap on the share icon and from the Internal users tab, select the user(s) or team(s) to share with.  For each user or team also configure if they need to have View (cannot make any changes) or Edit (can make changes and complete) permissions.</p> <p>External Users External users are users who may be part of your vendors, consultants, experts etc with whom the form and data needs to be shared but do not have access to the forms application.  These could also be users who need access maybe only for that instance.  In such cases an adhoc sharing of the form can be send to their email.</p> <p>Tap on the share icon and from the External users tab, type in a list of comma separated emails to share with.  You need to also configure if they need to have View (cannot make any changes) or Edit (can make changes and complete) permissions.  Each user will receive a unique URL and will be valid until the form is completed.</p> <p>Note</p> <p>External share users can only access forms via the Browser in online mode.  The latest snapshot of the data from the server is sent on opening the form but will not receive real time updates.  Refreshing the page will retrieve the latest data.</p>"},{"location":"formsapp/workwithforms/#generate-pdf","title":"Generate PDF","text":"<p>Users can tap on the PDF icon available for each form.  The user can then input the email IDs of the people to share the PDF with.  The PDF is generated with the data that has been filled in until then.</p> <p>Note</p> <p>This is an online only functionality and requires connectivity to execute.</p>"},{"location":"formsapp/workwithforms/#history-flow","title":"History / Flow","text":"<p>Tap on the history or flow icon to get an overview of the form's lifecycle. This option displays the users who have already completed the form, others who are still working on it, if a review has been failed etc.</p> <p>Note</p> <p>Note: This is an online only functionality and needs connectivity to execute.</p>"},{"location":"formsapp/workwithforms/#review-comments-annotations","title":"Review Comments (Annotations)","text":"<p>One of the most important features of the Turbo Forms App is the collaboration features.  Multiple users can work on a form and once the data completeness is verified the form can be completed.  If corrections are required the form can be reopened so that users can correct and re-submit.  But how do you communicate the issues and/or hints to the users?</p> <p>There is a built in commenting system.  Once you open the form to enter the data, click on the top Menu and choose Comments. A new screen is displayed to help you provide review comments.  </p> <ul> <li>This is a read only view that allows to tap and select any text on the screen</li> <li>Once a selection is made, a review/comment window appears</li> <li>Enter any comments that you desire.  Comments will be displayed with the user's name and the date time</li> <li>Annotated text is displayed with a highlight and can be clicked or tapped on mobile to view the comment and reply to it</li> <li>You can also add tags like \"Fix required\", \"Info\" etc to further help the users</li> </ul> <p>Note</p> <p>When any form has review comments, when the form is opened a helpful tip is displayed on top indicating that there are review comments for that form.  Click on the tip to open and view the comments.</p>"},{"location":"udep/admin/","title":"Administration","text":""},{"location":"udep/admin/#administration","title":"Administration","text":"<p>The Administration Cockpit is a web application that helps administer and troubleshoot the UDEP. </p> <p>Upgrade</p> <p>For additional Upgrade and other information please refer the KnowledgeBase</p>"},{"location":"udep/admin/#login","title":"Login","text":""},{"location":"udep/admin/#login_1","title":"Login","text":"<p>The Unvired Admin Cockpit (UAC) is a web application and Administrators can login from any browser. Only Super Admin,  Administrator and Support Admin type of users can login to the Admin Cockpit to access the portal. However depending on the type of user the operations available to the users vary.</p>"},{"location":"udep/admin/#unvired-id","title":"Unvired ID","text":"<p>Administrators can login with their Unvired ID and password.</p>"},{"location":"udep/admin/#microsoft-active-directory-use","title":"Microsoft Active Directory Use","text":"<p>Administrators can also use their Microsoft Domain User (ADS). Configure the \"ME\" system properties (described later) to use AD Login and then enter your AD user ID and password.  The Unvired ID of the Administrators should be mapped to their AD user to perform a successful login.</p> <p>However the \"SA\" user (Super Admin) is not mapped to ADS to ensure that the system is available even when the MS ADS server is not accessible.</p> <p>At the bottom of the page, the build version, build date and the type of server/database is also displayed.</p> <p>Note: To reset a forgotten password click on the \"Forgot Password\" option. This option is available only for Unvired Users and requires the email configuration to be complete.</p>"},{"location":"udep/admin/#security","title":"Security","text":"<p>The login to the UAC is using a user id and password.  It can be additionally secured by requiring a one time use token from applications like the Google Authenticator etc.</p> <p>The password complexity, password history, number of attempts before lock out, time before the locks are automatically released etc are all configurable via properties on the ME system.</p>"},{"location":"udep/admin/#manage-companies","title":"Manage Companies","text":"<p>The company created during the post-installation is termed the \"Root\" company and is the \"owner\" of the platform or infrastructure. Administrators of the root company only can create companies and assign plans. This hierarchy of companies is useful to partition access across departments (for e.g. root company is the company and child companies are departments), locations, subsidiaries etc.</p>"},{"location":"udep/admin/#create-edit","title":"Create &amp; Edit","text":"<p>Click on Companies to display the list of companies maintained in the system. You can click on Add to add new company or edit them. Depending on the edition (Data Center, AWS, Google Cloud etc) additional parameters may need to be configured.</p>"},{"location":"udep/admin/#create-assign-plans","title":"Create &amp; Assign Plans","text":"<p>Once a Company is created, a Plan needs to be assigned. The plan determines the resources that the company can have access to. Click on plans and all the standard plans are displayed.</p> <p>If needed custom plan can also be created to finely tune the plan by clicking on the Custom Plan tab.  Once the plan is created, click on the Company Plan tab. Select the company and click on Search. All configured plans are displayed.</p> <p>Click on Add and add a standard or custom plan for the company. Remember to select and activate it after adding it.</p> <p>Note: A company can have only one active plan.</p>"},{"location":"udep/admin/#manage-backend-systems","title":"Manage Backend Systems","text":""},{"location":"udep/admin/#backend-systems-list","title":"Backend Systems List","text":"<p>The \"Backends\" menu option in the navigation tree displays all the backend systems that have been created in the UDEP landscape. As already explained elsewhere, applications in UDEP can connect to configured backend systems securely and the credential management and security protocols for connection are all managed by UDEP.</p> <p>From this screen you can:</p> <ul> <li>Create new Systems</li> <li>Edit or View existing Systems</li> <li>Delete Systems that are not required anymore. Before deleting a system you should ensure that there are no applications that are using the System. (Refer the Applications help section). Deleting the system will also delete the associated ports and functions.</li> <li>Setup System downtime by using the maintenance option. If your SAP or other backend systems are due for a downtime due to maintenance or other activities, you can setup the maintenance window in UDEP so that mobile devices which post data to UDEP will receive appropriate messages and data will be held for later processing. (If a system is under maintenance it is also displayed in the list).</li> <li>Refresh the list by clicking on the Refresh icon.</li> </ul>"},{"location":"udep/admin/#maintenance","title":"Maintenance","text":"<p>When the system is going to be down for maintenance or updates etc, you can configure UDEP to inform users about the downtime.  Whenever the users submit a transaction for the system under maintenance, an appropriate message is sent back so that the user can resubmit later.</p> <p>When maintenance is scheduled the indicator is Red and when the system is being used normally the indicator is Green. Once the maintenance is scheduled the details are shown in the list.  You can also cancel a scheduled maintenance (downtime) by selecting the system for which maintenance has been scheduled, click on the \"Maintenance\" button and then \"Cancel Maintenance\".</p>"},{"location":"udep/admin/#me-backend-systems","title":"ME Backend Systems","text":"<p>\"ME\" or \"Self\" is a special acronym to indicate the UDEP system itself. All the properties for UDEP are configured in the special ME system. ME is automatically created during post-installation and cannot be deleted. A few properties can be configured on the ME system. Below a screen shot example of how these and other properties appear in the Admin Cockpit and how they can be configured.</p> <p>Note: Please be very careful when modifying the properties of \"ME\" as this affects the running of the system and can make it inaccessible to users if the wrong configuration is done. Also some parameters are available only for \"SA\" user of the root company and other properties are available to \"SA\" user of all companies.</p> <p>The different parameters available are dependent on type of Company (Root or others):</p> Property Availability Details APP_SERVER ROOT The hostname or IP address of the UDEP server. If UDEP is deployed behind a load balancer, set this to the load balancer's DNS name or IP address.  The mobile app will be provided with this URL to connect to the platform on activation. SYNC_PORT ROOT The port on which UDEP server is listening to requests from the mobile clients and administration cockpit. Typically this is 8080 or 8443 for JBoss/Wildfly. For installing on standard ports such as 80 (HTTP) or 443 (HTTPS) a load balancer / forwarder will usually be required. SERVER_TYPE ROOT DEVELOPMENT, QUALITY or PRODUCTION. Set during installation and cannot be modified. SHARED_KEY_ALGORITHM ROOT Set by the system to AES (cannot be modified). SERVER_ID ROOT Indicates the unique SERVER_ID that has been allocated to this UDEP instance. This is system generated and cannot be changed. Mobile devices use this to ensure that they communicate with the correct servers on which they have been authenticated. PASSPHRASE_FOR_SHARED_KEY ROOT The passphrase that was created during installation (cannot be modified). SECURITY_LEVEL ROOT Displays the configured security level for this UDEP instance. The different values supported are:100 \u2013 HTTP with authentication (recommended for Development and Test instances of UDEP)200 \u2013 HTTPS with authentication (recommended for Production instances)300 \u2013 HTTPS with HIghest security suitable for hosting HIPAA compliant applications.Please be careful while modifying this value as the HTTP protocol is affected. Additionally it will only take effect after all clients reactivate. INSTALLATION_DATE ROOT The date the UDEP system was installed, system generated and cannot be modified. INST_NR ROOT The Installation number for UDEP, system generated and cannot be modified. SYS_NR ROOT The System number for UDEP, system generated and cannot be modified. USAGE_LIMIT_TOLERANCE ROOT Internally used to check license validity, cannot be modified. MESSAGE_UNIT_SIZE ALL Size of the largest message that can be individually delivered to the device. Set this value (in bytes) based on the amount of data that the device can accept without any performance issues, the default setting is 262144 or 256 Kbytes. Note that this is also the maximum size of a single business object that can be sent to the device as a message needs to be made up of at least 1 business object (partial data is not allowed). MESSAGE_TOTAL_SIZE ALL Size of the total message that can be delivered to the device (Note that large messages will be split into smaller messages of size MESSAGE_UNIT_SIZE each). Set this value (in bytes) based on the amount of data that the device can accept without any performance issues, the default setting is 2097152 or 2 Mbytes. ENABLE_REST_API ALL Controls access to UDEP using the REST APIs. The REST APIs allow external systems to interact with UDEP and can be enabled or disabled based on requirement. REST_API_LOGIN_EXPIRY ALL Controls the expiry of REST API login. The accepted values are Never (no expiry) or expiry after 1 Hour, 1 Day, 1 Week or 1 Month. REST_API_MULTIPLE_SESSION ALL Controls whether each user is allowed to have multiple sessions via the REST API. If multiple is disabled, each user can have at most one \"application\" using REST APIs. If multiple is enabled, the login session is shared across multiple logins and can enable the usage of multiple applications built with the REST API. REST_API_LIMIT ALL Limits that number of REST API calls that an Unvired user can execute within a minute.  Note:  These limits are not imposed yet and are included as a failsafe. REST_API_CORS ALL Enable Cross Origin Resource Sharing(CORS) for REST API.  List all the domains you want to permit comma separated.  While * is a valid value, it is generally discouraged for security. MESSAGE_DISPLAY_LIMIT ALL The data stored for each message can be very large sometimes. This setting controls the maximum message size in KB that will be displayed in the Admin Cockpit. Messages larger than this can only be downloaded and viewed offline. APP_STORE ROOT If set to PUBLIC anybody can view and install apps without authentication from the Store, if PRIVATE only logged in users will be provided access to the store.Note:  While UDEP does provide a basic store, customers are encouraged to use public App stores or Moble Device Management or MDM systems to deploy apps. PASSWORD_CHANGE_ON_RESET ALL If this setting is enabled, if an Administrator resets a password the user will be required to change the password immediately on login. PASSWORD_EXPIRY_DAYS ALL Number of days after which a password expires and has to be reset.  Can be set to \"No Expiry\" or specific number of days. PASSWORD_HISTORY ALL Number of password (1-5) to maintain in history.  Users will need to select passwords taht are not present in the history. AC_LOGIN_MODULE ALL Enables login to UAC via Unvired ID or MS ADS user ID.  Note that the SA user cannot be mapped to any ADS user. LOGIN_ATTRIBUTE ALL (Optional) If LOGIN_MODULE is set to LDAP or ADS (For application login or Admin Cockpit login), the LOGIN_ATTRIBUTE determines which field from the LDAP or ADS needs to be mapped to the value set in the Unvired user's Federation ID. For example to use the Windows domain login name, this field can be set to sAMAccountName. LOCK_LOGIN_ATTEMPTS ALL The number of unsuccessful login attempts after which the user will be temporarily locked out from Admin Cockpit. LOCK_SECONDS ALL The number of seconds to lock the user, after the expiry of this the user is automatically unlocked. CACHE_LOCATION ALL The cache location on the UDEP server file system where the attachments are cached. Enter the full path for eg: C:\\UDEP_HOME\\attachments and make sure that the service login user has full access to this folder. ENCRYPT_CACHE ALL Encrypt attachment files or store as is in the cache NO_OF_PARALLEL_DOWNLOAD_JOBS ALL Number of download of attachments to handle in parallel. It is recommended to have a smaller number so that attachment downloads do not \"overload\" the UDEP server or increase CPU usage. CALL_LOG ALL For future use. Enables or disables detailed call log. CACHE_LOCATION ALL Enter the folder location where the attachments have to be cached.  Do not start with a / as the path is relative to the company's data store. ENCRYPT_CACHE ALL If enabled the cached files are encrypted.  Use with caution as this can cause performance issues if large files are exchanged over the network. AC_SESSION_TIMEOUT ROOT Default inactivity timeout for the Admin Cockpit GOOGLE_MAPS_API_KEY ALL Google maps API key to be used for map view of all devices. BROWSER_KEEP_ALIVE ALL The time interval in seconds for the UDEP server to keep the connection to the browser alive, 0 to disable.  This is useful for browser apps that register for push notifications to keep the session alive. LOGENTRIES_TOKEN ALL LogEntries TCP Token to send logs to LogEntries.com LOGGLY_TOKEN ALL Loggly API Token to send logs to Loggly.com SCHEDULER ROOT Enable or disable the distributed scheduler.  If scheduled execution of functions is not required you can safely disable this for better perfornance. GRPC ROOT For later use.  Support GRPC for JavaScript."},{"location":"udep/admin/#template-systems","title":"Template Systems","text":"<p>Typically systems are only available within the company or domain within which they are created.  However for standard applciations that can be used by other companies also (like the Chyme bots application), marking the systems as template systems allows child companies to change the configuration of these systems.</p> <p>For e.g. if a root company configures a template database to an IP address 192.168.0.1, the child company can configure this to mymssql.azure.microsoft.com for their landscape.</p>"},{"location":"udep/admin/#create","title":"Create","text":"<p>Clicking on the \"Add\" button allows adding or creating a new Backend System in the UDEP landscape. Enter the name of the system (remember no spaces allowed), a description to identify the system and the system type and press the Next arrow button.</p> <p>The different system types supported are: | System Type | Details | |-|-| | SAP | Any SAP system that is running the ABAP engine like SAP S4/HANA, SAP ECC, SAP CRM, SAP SCM etc which UDEP needs to access. | | LDAP Server | Any LDAP server that you need for authenticating your users. | | Web Server | Any Web server that may be providing Web Services for your applications using http or https. | | Relational Database | Connection to a database to extract and update data. | | FTP Server | Any FTP server that you need to upload or download files. | | Windows Active Directory Server | Windows ADS for authenticating. | | Oracle EBS | Oracle E-Business Suite |</p> <p>Note: For server addresses hostname is generally preferred. If you do not have a DNS to resolve or have assigned static IP addresses to your servers you can also enter IPV4 addresses here.  Based on the system type chosen, a set of parameters as detailed below will be accepted.</p>"},{"location":"udep/admin/#sap","title":"SAP","text":"<p>Create an SAP System if ABAP function modules need to be executed to fulfill the mobile functionality. Some examples of SAP ABAP systems are SAP S4/HANA, SAP ERP (ECC), SAP CRM, SAP SCM etc.</p> <p>Note: You will need to request the below details from your SAP administrator.</p> <p>You will need to create an SAP ABAP System if you need to execute ABAP function modules to fulfill the mobile functionality. Some examples of SAP ABAP systems are SAP ERP (ECC), SAP CRM, SAP SCM etc.</p> <p>The different parameters for SAP ABAP systems are: | Property | Details | |:-:|:-:| | Connection Type | If you are using a single instance SAP Application server that you connect to directly, then choose \"Custom Application Server\" and if you are using a Group server then choose the option \"Group Server\". | | MSHOST | Valid if \"Group Server\" is chosen. Enter the SAP Message server details here. | | GROUP | Valid if \"Group Server\" is chosen. Enter the group SAP Application server here. | | ASHOST | Valid if \"Custom Application Server\" is chosen. Enter the SAP Application server details here (hostname or IP address). | | R3NAME | Enter the 3 letter R/3 Name assigned to your system. | | SYSNR | Enter the 2 digit System number of the system you are connecting to. |</p>"},{"location":"udep/admin/#ldap-server","title":"LDAP Server","text":"<p>Create an LDAP Server if you need to connect to LDAP servers to authenticate users from UDEP.</p> <p>The different parameters are:</p> Property Details SERVER Enter the DNS name of the ADS server or its IP address <p>Press the next arrow and review the information. On pressing \"Save\" the system will be created in the UDEP landscape.</p>"},{"location":"udep/admin/#web-server","title":"Web Server","text":"<p>Create a Web Server if you need to connect to Web Services (SOAP or REST) on these servers. Good examples of such systems are SugarCRM, Workday etc.</p> <p>The different parameters are:</p> Property Details SERVER Enter the server details here (hostname or IP address). ALLOW_INSTANCE_URL_OVERRIDE For OAuth dependent systmes like SFDC, the system URL is known only after login and hence requires the App to be able to overrride the preconfigured URL.  Enable this setting for such servers only."},{"location":"udep/admin/#relational-database","title":"Relational Database","text":"<p>Create a Relational Database Server if you need to connect to a database server. You can connect to Microsoft SQL Server, Oracle, MySQL, Postgresql and SAP HANA databases.</p> <p>The different parameters are: | Property | Details | |-|-| | SERVER | Enter the DNS name of the database server or its IP address | Press the next arrow and review the information. On pressing \"Save\" the system will be created in the UDEP landscape</p>"},{"location":"udep/admin/#ftp-server","title":"FTP Server","text":"<p>Create an FTP Server if you need to connect to an FTP server to upload or download files for your process agents.</p> <p>The different parameters are:</p> Property Details SERVER Enter the DNS name of the FTP server or its IP address Press the next arrow and review the information. On pressing \"Save\" the system will be created in the UDEP landscape."},{"location":"udep/admin/#windows-active-directory-server-ads","title":"Windows Active Directory Server (ADS)","text":"<p>Create a Windows Active Directory Server if you need to authenticate against it (Admin Cockpit or Mobile Application)</p> <p>The different parameters are:</p> Property Details SERVER Enter the DNS name of the ADS server or its IP address Press the next arrow and review the information. On pressing \"Save\" the system will be created in the UDEP landscape."},{"location":"udep/admin/#oracle-ebusiness-suite","title":"Oracle EBusiness Suite","text":"<p>Create an Oracle EBusiness Server if you need to connect to an EBS system from the process agent to execute transactions.</p> <p>The different parameters are: | Property | Details | |-|-| | SERVER | Enter the DNS name of the EBS server or its IP address | Press the next arrow and review the information. On pressing \"Save\" the system will be created in the UDEP landscape.</p>"},{"location":"udep/admin/#backend-ports-list","title":"Backend Ports List","text":"<p>After clicking on the \"Backends\" menu option in the navigation tree, click on the \"Ports\" tab to configure the backend ports in the UDEP landscape. Ports are specific for a Backend System. From the dropdown list select the Backend system and the Ports connected to that system will be displayed. New Ports for the selected system may also be added. </p> <p>From this screen you can:</p> <ul> <li>Create new ports</li> <li>Edit or View existing ports</li> </ul>"},{"location":"udep/admin/#create-backend-port","title":"Create Backend Port","text":"<p>Clicking on the \"Add\" button allows adding / creating a new Backend port for a Backend system in the UDEP landscape. Select the name of the system to configure from the dropdown list. Depending on the type of Backend System specific Ports may be created (attached) to the systems.</p> <p>The table below lists the allowed ports for each type:</p> Sl. No. Backend System Type Allowed Backend Ports Comment 1. ME Java Allows invoking all process agent functions that have been uploaded to UDEP. Please refer the Development Guide for more details on Process Agents. This port is created during post-install and does not require any administration. ME JavaScript For later use to allow JavaScript functions to be executed via GRPC. 2. Active Directory Server ADS Allows to look up information from an MS ADS server 3. LDAP LDAP Allows to look up information from an LDAP server FTP Server FTP Allows connections to the FTP server 4. Relational Database MSSQL Allows connections to MS SQL database MYSQL Allows connections to MySQL database ORACLE Allows connections to Oracle database HANA Allows connections to SAP HANA database 5. Web REST Allows connecting to REST (HTTP/HTTPS) services ODATA Allows connecting to ODATA services SOAP Allows connecting to SOAP services 6. Oracle EBS Server ORACLE_EBS Allows connections to the Oracle EBS server 7. SAP ABAP RFC Allows invoking any BAPIs or RFCs on an SAP Backend System. <p>Based on the system port chosen, a set of parameters as detailed below will be accepted.</p>"},{"location":"udep/admin/#java-port","title":"Java Port","text":"<p>A Java port is auto created by the UDEP post-install and attached to ME Backend System (UDEP). All Java functions that are part of the Process Agent need to be created on the Java Port of the ME system. For more details on Process Agents please check the Unvired Developer Guide.</p> <p>Java ports do not have any configurable parameters.</p>"},{"location":"udep/admin/#rfc-port","title":"RFC Port","text":"<p>Create an RFC port on an SAP ABAP System if ABAP function modules need to be executed to fulfill the mobile functionality. Some examples of SAP ABAP systems are SAP ERP (ECC), SAP CRM, SAP SCM etc.</p> <p>The different parameters are: | Property | Details | |-|-| | CLIENT | Enter the SAP Client number to connect to. This is a 3 digit number that your SAP administrator can provide. For eg IDES clients are on 800. | | USER | This is an optional parameter. If all connections to the SAP system need to be made with a common User ID (for example an RFC Communication User), then the User ID can be entered here. (Note: Please ensure that you are meeting all of SAPs licensing requirements before making this entry. You can get more info on licensing from your SAP account manager) | | PASSWD | This is an optional parameter. If you have entered a User ID, then enter the User's password here. | | LANG | Enter the SAP Logon language. This is the 2 Digit short form that you need to enter here similar to the code entered while login via SAPGUI. | | MAX_ASYNC_CONNECTIONS | Use this setting to manage the (additional) load on the SAP backend system due to calls from the mobile application executed in an Asynchronous fashion. (Asynchronous calls are those originating on the device where after successful posting of the request to the server the application does no wait for a result but retrieves it later.) For example if set to 50, at most 50 simultaneous calls can be made by UDEP to the SAP backend system. Beyond that the calls will be automatically queued and executed when the connections are freed up. Enter -1 to impose no limit on connections in this parameter. | | ASYNC_CONNECTIONS_TIMEOUT | The timeout (in seconds) while waiting for a connection to be available. | | MAX_SYNC_CONNECTIONS | Use this setting to manage the (additional) load on the SAP backend system due to calls from the mobile application executed in a Synchronous fashion. (Synchronous calls are those originating on the device where after successful posting of the request to the server the application waits for an immediate result and does not allow the user to navigate out of the screen) For example if set to 20, at most 20 simultaneous calls can be made by UDEP to the SAP backend system. Beyond that the calls will result in errors being returned to the mobile application with a request to try again later. Enter -1 to impose no limit on connections in this parameter. | | USE_CLIENT_CREDENTIALS | Use this setting if the mobile users will be entering the User ID and Password for the Backend System on the device (as opposed to entering it above in parameters USER and PASSWD or at the User level explained in the User section). If USE_CLIENT_CREDENTIALS is set to YES, then the device application will prompt the user to enter the system User ID and Password on the device and the device propagates the credentials to UDEP as and when required. |</p>"},{"location":"udep/admin/#soap-service-port","title":"SOAP Service Port","text":"<p>Create this port on Web Server if SOAP Services need to be executed to fulfill the mobile functionality.</p> <p>The different parameters are: | Property | Details | |-|-| | PROTOCOL | Select http or https based on the remote server protocol. | | PORT | The port to connect on (for e.g. 80, 443 etc) | | AUTHENTICATION_TYPE | Two modes of authentication are supported BASIC and APPLICATION. If the Web Service requires the User ID and Password to be propagated as part of the HTTP Header for authentication set it to BASIC else if the Web Service internally handles the authentication set this to APPLICATION. | | USER | The User ID to be used if the Authentication type is BASIC. | | PASSWORD | Set this Password if the USER has been provided for BASIC authentication. | | SOAP_VERSION | Set this to the correct SOAP version (you can get this from the WSDL) to be used SOAP11 (SOAP v1.1) or SOAP12 (SOAP v1.2). | | PROXY_HOST | (Optional) If a Proxy is to be used, set the proxy hostname or IP address here. | | PROXY_PORT | (Optional) If a Proxy is to be used, set the proxy port here. | | PROXY_USER | (Optional) If the Proxy server requires authentication set the proxy user name here. | | PROXY_PASSWORD | (Optional) If the Proxy server requires authentication set the proxy password here. | | MAX_ASYNC_CONNECTIONS | Use this setting to manage the (additional) load on the backend system due to calls from the mobile application executed in an Asynchronous fashion. (Asynchronous calls are those originating on the device where after successful posting of the request to the server the application does no wait for a result but retrieves it later.) For example if set to 50, at most 50 simultaneous calls can be made by UDEP to the backend system. Beyond that the calls will be automatically queued and executed when the connections are freed up. Enter -1 to impose no limit on connections in this parameter. | | ASYNC_CONNECTIONS_TIMEOUT | The timeout (in seconds) while waiting for a connection to be available. | | MAX_SYNC_CONNECTIONS | Use this setting to manage the (additional) load on the backend system due to calls from the mobile application executed in a Synchronous fashion. (Synchronous calls are those originating on the device where after successful posting of the request to the server the application waits for an immediate result and does not allow the user to navigate out of the screen) For example if set to 20, at most 20 simultaneous calls can be made by UDEP to the backend system. Beyond that the calls will result in errors being returned to the mobile application with a request to try again later. Enter -1 to impose no limit on connections in this parameter. | | USE_CLIENT_CREDENTIALS | Use this setting if the mobile users will be entering the User ID and Password for the Backend System on the device (as opposed to entering it above in parameters USER and PASSWD or at the User level explained in the User section). If USE_CLIENT_CREDENTIALS is set to YES, then the device application will prompt the user to enter the system User ID and Password on the device and the device propagates the credentials to UDEP as and when required. |</p>"},{"location":"udep/admin/#rest-service-port","title":"REST Service Port","text":"<p>Create a REST port on Web Server if REST Services or simple HTTP or HTTPS calls need to be executed to fulfill the mobile functionality.</p> <p>The different parameters are: | Property | Details | |-|-| | PROTOCOL | Select http or https based on the remote server protocol. | | PORT | Enter the port number on which the remote server is listening for external calls. For example default HTTP port is 80, HTTPS port is 443, alternate HTTP port is 8080 etc | | USER | The User ID to be used. | | PASSWORD | Set this Password if the USER has been provided. | | USE_CLIENT_CREDENTIALS | Use this setting if the mobile users will be entering the User ID and Password for the Backend System on the device (as opposed to entering it at the User level explained in User section). If USE_CLIENT_CREDENTIALS is set to YES, then the device application will prompt the user to enter the system User ID and Password on the device and the device propagates the credentials to UDEP as and when required. | | MAX_ASYNC_CONNECTIONS | Use this setting to manage the (additional) load on the backend system due to calls from the mobile application executed in an Asynchronous fashion. (Asynchronous calls are those originating on the device where after successful posting of the request to the server the application does no wait for a result but retrieves it later.) For example if set to 50, at most 50 simultaneous calls can be made by UDEP to the backend system. Beyond that the calls will be automatically queued and executed when the connections are freed up. Enter -1 to impose no limit on connections in this parameter. | | ASYNC_CONNECTIONS_TIMEOUT | The timeout (in seconds) while waiting for a connection to be available. | | MAX_SYNC_CONNECTIONS | Use this setting to manage the (additional) load on the backend system due to calls from the mobile application executed in a Synchronous fashion. (Synchronous calls are those originating on the device where after successful posting of the request to the server the application waits for an immediate result and does not allow the user to navigate out of the screen) For example if set to 20, at most 20 simultaneous calls can be made by UDEP to the backend system. Beyond that the calls will result in errors being returned to the mobile application with a request to try again later. Enter -1 to impose no limit on connections in this parameter. | | AUTHENTICATION_TYPE | None, Basic (for HTTP basic) or OAuth (v1 or v2) and Custom. | | OAUTH_PROVIDER | The OAuth provider name (for e.g. Salesforce, Google etc).  This property as well as Scope, ClientID and Secret are required only if the Required only if the Authentication type is OAuth v1 or v2.   | | OAUTH_SCOPE | The scope from a list that the OAuth provider has pre-defined and UDEP is requesting for on behalf of the user | | OAUTH_CLIENT_ID | The OAuth ClientID (also called API Key) for the OAuth provider.  You will be required to create an application at the OAuth provider and copy over the ClientID from there.  Do not share this with any other application. | | OAUTH_CLIENT_SECRET | The OAuth ClientSecret for the OAuth provider.  You will be required to create an application at the OAuth provider and copy over the Client Secret from there.  Do not share this with any other application. | | USER_PARAMETER_NAME | If custom authentication type is chosen, the name of the User parameter for UDEP to substitute with the user value.  This is automatically added to the HTTP header by UDEP. | | PASSWORD_PARAMETER_NAME | If custom authentication type is chosen, the name of the Password parameter for UDEP to substitute with the password value.  This is automatically added to the HTTP header by UDEP. | | PROXY_HOST | (Optional) If a Proxy is to be used, set the proxy hostname or IP address here. | | PROXY_PORT | (Optional) If a Proxy is to be used, set the proxy port here. | | PROXY_USER | (Optional) If the Proxy server requires authentication set the proxy user name here. | | PROXY_PASSWORD | (Optional) If the Proxy server requires authentication set the proxy password here. |</p>"},{"location":"udep/admin/#odata-service-port","title":"ODATA Service Port","text":"<p>Create this port on a Web Server if Odata Services need to be executed to fulfill the mobile functionality.</p> <p>The different parameters are:</p> Property Details PROTOCOL Select http or https based on the remote server protocol. PORT Enter the port number on which the remote server is listening for external calls. For example default HTTP port is 80, HTTPS port is 443, alternate HTTP port is 8080 etc USER The User ID to be used. PASSWORD Set this Password if the USER has been provided. USE_CLIENT_CREDENTIALS Use this setting if the mobile users will be entering the User ID and Password for the Backend System on the device (as opposed to entering it at the User level explained in User section). If USE_CLIENT_CREDENTIALS is set to YES, then the device application will prompt the user to enter the system User ID and Password on the device and the device propagates the credentials to UDEP as and when required. MAX_ASYNC_CONNECTIONS Use this setting to manage the (additional) load on the backend system due to calls from the mobile application executed in an Asynchronous fashion. (Asynchronous calls are those originating on the device where after successful posting of the request to the server the application does no wait for a result but retrieves it later.) For example if set to 50, at most 50 simultaneous calls can be made by UDEP to the backend system. Beyond that the calls will be automatically queued and executed when the connections are freed up. Enter -1 to impose no limit on connections in this parameter. ASYNC_CONNECTIONS_TIMEOUT The timeout (in seconds) while waiting for a connection to be available. MAX_SYNC_CONNECTIONS Use this setting to manage the (additional) load on the backend system due to calls from the mobile application executed in a Synchronous fashion. (Synchronous calls are those originating on the device where after successful posting of the request to the server the application waits for an immediate result and does not allow the user to navigate out of the screen) For example if set to 20, at most 20 simultaneous calls can be made by UDEP to the backend system. Beyond that the calls will result in errors being returned to the mobile application with a request to try again later. Enter -1 to impose no limit on connections in this parameter."},{"location":"udep/admin/#ldap-port","title":"LDAP Port","text":"<p>Create this port on LDAP Server for authenticating users.</p> <p>The different parameters are:</p> Property Details PORT Enter the port number on which the LDAP server is listening for queries. Default LDAP port is 389. LDAP_BASE_DN Enter the LDAP Base Distinguished Name here. Contact your administrator to get these values. For example: DC=unvired,DC=com AUTHENTICATION_TYPE The authentication supported by the LDAP server. For example Microsoft Active Directory uses DIGEST-MD5. USER The User ID to be used. PASSWORD Set this Password if the USER has been provided."},{"location":"udep/admin/#mssql-database-port","title":"MSSQL (Database) Port","text":"<p>Create this port on a Database Server to connect to a Microsoft SQL server database from the Unvired platform.</p> <p>The different parameters are:</p> Property Name Details PORT Port number on the database server to connect to DATABASE Name of the database to connect to INSTANCE Optional parameter. If the MSSQL server is configured on a named instance, the instance name can be provided here USER Optional parameter. User ID to use to connect to the database. All connections to the database will be made with the same credentials. PASSWORD Optional parameter. Password to use to connect to the database. CONNECTION_PARAMETERS Additional connection parameters that are appended to the connection string.  Used for specifying character set UTF-8 etc. USE_CLIENT_CREDENTIALS Use this setting if the mobile users will be entering the User ID and Password for the database System on the device (as opposed to entering it at the User level explained in User section). If USE_CLIENT_CREDENTIALS is set to YES, then the device application will prompt the user to enter the system User ID and Password on the device and the device propagates the credentials to UDEP as and when required. MAX_ASYNC_CONNECTIONS Use this setting to manage the (additional) load on the backend system due to calls from the mobile application executed in an Asynchronous fashion. (Asynchronous calls are those originating on the device where after successful posting of the request to the server the application does no wait for a result but retrieves it later.) For example if set to 50, at most 50 simultaneous calls can be made by UDEP to the backend system. Beyond that the calls will be automatically queued and executed when the connections are freed up. Enter -1 to impose no limit on connections in this parameter. ASYNC_CONNECTIONS_TIMEOUT The timeout (in seconds) while waiting for a connection to be available. MAX_SYNC_CONNECTIONS Use this setting to manage the (additional) load on the backend system due to calls from the mobile application executed in a Synchronous fashion. (Synchronous calls are those originating on the device where after successful posting of the request to the server the application waits for an immediate result and does not allow the user to navigate out of the screen) For example if set to 20, at most 20 simultaneous calls can be made by UDEP to the backend system. Beyond that the calls will result in errors being returned to the mobile application with a request to try again later. Enter -1 to impose no limit on connections in this parameter."},{"location":"udep/admin/#oracle-database-port","title":"Oracle (Database) Port","text":"<p>Create this port on a Database Server to connect to an Oracle server database from the Unvired platform.</p> <p>The different parameters are: | Property Name | Details | |-|-| | PORT | Port number on the database server to connect to (Listener port) | | DATABASE | Service name or the Service identifier (SID) to connect to | | USER | Optional parameter. User ID to use to connect to the database. All connections to the database will be made with the same credentials. | | PASSWORD | Optional parameter. Password to use to connect to the database. | | USE_CLIENT_CREDENTIALS | Use this setting if the mobile users will be entering the User ID and Password for the database System on the device (as opposed to entering it at the User level explained in User section). If USE_CLIENT_CREDENTIALS is set to YES, then the device application will prompt the user to enter the system User ID and Password on the device and the device propagates the credentials to UDEP as and when required. | | MAX_ASYNC_CONNECTIONS | Use this setting to manage the (additional) load on the backend system due to calls from the mobile application executed in an Asynchronous fashion. (Asynchronous calls are those originating on the device where after successful posting of the request to the server the application does no wait for a result but retrieves it later.) For example if set to 50, at most 50 simultaneous calls can be made by UDEP to the backend system. Beyond that the calls will be automatically queued and executed when the connections are freed up. Enter -1 to impose no limit on connections in this parameter. | | ASYNC_CONNECTIONS_TIMEOUT | The timeout (in seconds) while waiting for a connection to be available. | | MAX_SYNC_CONNECTIONS | Use this setting to manage the (additional) load on the backend system due to calls from the mobile application executed in a Synchronous fashion. (Synchronous calls are those originating on the device where after successful posting of the request to the server the application waits for an immediate result and does not allow the user to navigate out of the screen) For example if set to 20, at most 20 simultaneous calls can be made by UDEP to the backend system. Beyond that the calls will result in errors being returned to the mobile application with a request to try again later. Enter -1 to impose no limit on connections in this parameter. |</p>"},{"location":"udep/admin/#sap-hana-database-port","title":"SAP HANA (Database) Port","text":"<p>Create this port on a Database Server to connect to an SAP HANA database from the Unvired platform.</p> <p>The different parameters are:</p> Property Name Details PORT Port number on the database server to connect to (Listener port) DATABASE Service name or the Service identifier (SID) to connect to USER Optional parameter. User ID to use to connect to the database. All connections to the database will be made with the same credentials. PASSWORD Optional parameter. Password to use to connect to the database. CONNECTION_PARAMETERS Additional connection parameters that are appended to the connection string. <p>Note: The parameters configured at the System and Port level for a database server are finally used to make connection strings as indicated below: (Example - to connect to a System called db.unvired.com and Database DEMO, the connection strings depending on the mechanism to connect are)</p> DB Using Connection String made internally by UDEP Oracle Service Name jdbc:oracle:thin:@//db.unvired.com:1527/DEMO SID jdbc:oracle:thin:@//db.unvired.com:1527/SID MS SQL jdbc:sqlserver://db.unvired.com:1433;databaseName=DEMO; Named instance jdbc:sqlserver://db.unvired.com:1433;instanceName=INST;databaseName=DEMO; MySQL jdbc:mysql://db.unvired.com:3306/DEMO"},{"location":"udep/admin/#ftp-port","title":"FTP Port","text":"<p>Create this port on FTP Server for connecting to the FTP server.  Only Active mode is supported.</p> <p>The different parameters are: | Property | Details | |-|-| | PORT | Enter the port number on which the FTP server is listening for connections. Default FTP port is 21. | | USER | Optional parameter. User ID to use to connect to the FTP server. All connections to the ftp server will be made with the same credentials. | | PASSWORD | Optional parameter. Password to use to connect to the FTP server. | | PROXY_TYPE | None, HTTP or SOCKS | | PROXY_SERVER | Enter the proxy server if the FTP server can be accessed only via a proxy | | PROXY_PORT | Enter the proxy server port if the FTP server can be accessed only via a proxy |</p>"},{"location":"udep/admin/#microsoft-active-directory-server-port","title":"Microsoft Active Directory Server Port","text":"<p>Create this port on ADS Server for connecting to the ADS server.</p> <p>The different parameters are: | Property | Details | |-|-| | PORT | Enter the port number on which the ADS server is listening for queries. Default ADS port is 389. | | AUTHENTCATION_TYPE | The authentication supported by the ADS server. For example Microsoft Active Directory uses DIGEST-MD5, Simple etc | | BASE_DN | Optional: Enter the ADS Base Distinguished Name here. Contact your administrator to get these values. For example: DC=unvired,DC=com | | USER | Optional parameter. User ID to use to bind to the ADS server. All connections to bind to the ADS server will be made with this user but actual authentication will be performed with the user's credentials. | | PASSWORD | Optional parameter. Password to use to bind to the ADS server. All connections to bind to the ADS server will be made with this password but actual authentication will be performed with the user's password. |</p>"},{"location":"udep/admin/#oracle-ebusiness-port","title":"Oracle EBusiness Port","text":"<p>Create an Oracle EBS port on EBS Server for connecting to the EBS server.</p> <p>The different parameters are: | Property | Details | |-|-| | PORT | Enter the listener port number on which the EBS server is listening for external calls. | | DATABASE | Service Name or Service identifier (SID) | | AUTHENTICATION | Enter the authentication type for the Sharepoint server. This is typically \"Windows\" authentication (use the Domain user). You can also use \"Office 365\" if you are connecting to an Office 365 hosted instance of Sharepoint. | | USE_CLIENT_CREDENTIALS | Use this setting if the mobile users will be entering the User ID and Password for the Backend System on the device (as opposed to entering it at the User level explained in Usersection). If USE_CLIENT_CREDENTIALS is set to YES, then the device application will prompt the user to enter the system User ID and Password on the device and the device propagates the credentials to UDEP as and when required. |</p>"},{"location":"udep/admin/#functions-list","title":"Functions List","text":"<p>Click on the \"Functions\" tab to configure the various functions in the UDEP landscape. Functions are specific for a Backend System \u2013 Port combination. From the dropdown list select the Backend system. The ports on that system are displayed in a second dropdown list. Once the port is selected, an additional dropdown list with a list of applications is displayed. (If Library is selected then list of functions from libraries will be displayed)</p> <ul> <li>When no application is selected all functions that are not mapped to any application or library are displayed.</li> <li>When an application or library is selected only functions of that application or library will be displayed.</li> <li>Functions can be edited or new Functions for the selected System - Port may also be added.</li> <li>If the server type is Development, an additional column \"Enable Test\" is displayed for all functions configured on \"ME\". Test mode is explained in detail later.</li> </ul> <p>The function details are displayed as above. Functions that are not mapped to an application are shown in red and other functions in black. From this screen you can:</p> <ul> <li>Create new functions</li> <li>Edit or View existing functions</li> </ul>"},{"location":"udep/admin/#create-backend-function","title":"Create Backend Function","text":"<p>Clicking on the \"Create\" button allows creating a new Backend function for a Backend System \u2013 Port combination in the UDEP landscape. Select the name of the system to configure from the dropdown list.</p> <p>Based on the Backend System chosen, the connected Ports will be displayed and the existing functions will also be displayed.</p> Sl. No. Backend System Backend Port Functions that can be invoked from the Process Agents. 1. ME Java Allows creating process agent functions that have been uploaded to UDEP. Please refer the Development Guide for more details on Process Agents. JavaScript For later use. 2. SAP ABAP RFC Allows creating functions for any BAPIs or RFCs on an SAP Backend System. 3. LDAP LDAP Create a single function for all calls. 4. Web REST Allows creating functions for any Web URL including REST Services. SOAP Allows creating functions for any SOAP Web Services. ODATA Allows creating functions for any ODATA Services. 5. Database MSSQL, MYSQL, ORACLE or SAP HANA Create a single function for all calls. 6. FTP Server FTP Create a single function for all calls. 7. Microsoft ADS Server ADS Create a single function for all calls <p>Based on the type of function chosen, a set of parameters as detailed below will be accepted.  The different parameters for creating any function are:</p> Property Details NAME Enter a unique name for the function. Spaces are not allowed, you can use '\u2013' or '_' to create meaningful names. DESCRIPTION Provide a detailed description for the function so you can identify the functionality later. TYPE Set this to APPLICATION. SYSTEM is for Unvired use only. STORE MESSAGE DATA Setting the STORE MESSAGE DATA property to On will ensure that data for this function will be stored in the Sync or Async message store irrespective of the application level setting. Remember to switch the flag Off when not required. This property is very useful if the need is to store the data of only some functions (for e.g. create sales order) as compared to application level property wherein data for all functions is stored. OVERRIDE This property is available only for Application functions. If you want to override the function and provide a new implementation, define an override function in a library, upload it and associate with the application. Then when the dropdown is clicked, the list of override functions are shown and the correct function can be selected. Deselect the function to remove the override. <p>Note: When creating Library functions, the function type can be chosen as \"OVERRIDE\" if an application is to be overridden or as \"LIBRARY\" if additional functionality is being developed.</p>"},{"location":"udep/admin/#java-function","title":"Java Function","text":"<p>Create a Java function on the UDEP (System ME also called as Self and Java port) that can be executed from the mobile device or via the REST API.</p> <p>The different parameters are: | Property | Details | |-|-| | PROCESS_AGENT_CLASS | Enter the Java class that will be executed whenever this function is called. Please set this value carefully. | | RETURN_TYPE | Mostly all functions that are called will return some data as a result to the mobile device (Return type is String). However there may be special cases wherein the function does not return any data to the mobile device like maybe to execute a taks in the server but is independent of the processing on the mobuile.. In such cases set the return type to Void. | | REMOTE_ENABLE | If you require that these functions may also be executed by an external system using the Unvired REST APIs then set the REMOTE_ENABLE flag to YES. If the function is only going to be called by the mobile device leave it at the default value of NO. |</p>"},{"location":"udep/admin/#test-mode-for-process-agent-javajavascript-functions","title":"Test Mode for Process Agent (Java/JavaScript) Functions","text":"<p>In development servers a special Test Mode is enabled for Java functions. This is useful when your application is under development and the backend functions are not available yet, choose test mode and upload / set the data that you want to return. When the client application makes a call to this function, rather than invoking the process agent function UDEP will return the test data as the output of the function to the mobile application. This permits the development of the mobile and server applications in parallel without any disruptions or dependencies. It is also useful when repetitive tests are to be conducted with the same data or when data creation on the backend system is time consuming.</p> <p>To enable test mode, select the function and choose Edit.  Then Click on Enable Test and then click on the Set Output button.</p> <p>The output can be proper result data or an error can be simulated. Select \"Set Output\" or \"Set Error\" based on what the function should return. The Standard XML / JSON checkbox can be selected if standard Unvired Business XML or JSON data is to be returned and if unchecked any custom XML / JSON format can also be returned.</p> <p>When output is chosen, the actual XML/JSON data to be returned can be entered in the text box or alternatively a file with the XML/JSON result data can be uploaded. Choose Save to save the settings.</p> <p>When error is chosen, different types of errors can be simulated. Choose the right option and Save.</p> <p>Note: After testing, remember to uncheck the \"Enable Test\" mode so that the real functions can be executed. This is also displayed in the functions list with a tick mark in the test mode to draw attention.</p>"},{"location":"udep/admin/#javascript-function-preview","title":"JavaScript Function (Preview)","text":"<p>Preview only, not generally available.  Not recommended for production use.</p>"},{"location":"udep/admin/#sap-abap-function-rfc","title":"SAP ABAP Function (RFC)","text":"<p>Create an SAP ABAP function on the UDEP (System SAP_ABAP and RFC port) to create a link to an ABAP function that can be executed from other Java process agents. These backend functions provide the business functionality that the process agent needs to execute.</p> <p>The different parameters are: Property</p> <p>Details</p> <p>BAPI_NAME</p> <p>Enter the name of the BAPI/RFC that will be executed whenever this function is called. Please set this value carefully.</p> <p>TRANSACTION_HANDLING</p> <p>There are some RFCs/BAPIs that require an explicit call to BAPI_TRANSACTION_COMMIT or BAPI_TRANSACTION_ROLLBACK based on the success/failure of the RFC/BAPI called. If the RFC/BAPI that you have configured in this function requires this explicit call set the TRANSACTION_HANDLING flag to YES else it can be set to NO.</p>"},{"location":"udep/admin/#rest-function","title":"REST Function","text":"<p>Create a function on the UDEP (System Web Server and REST port) to create a link to a REST API that can be executed from other Java process agents. These functions provide the business functionality that the process agent needs to execute.</p> <p>Note that only one function needs to be created to make requests to that system/port. There are also no additional configurable parameters for a REST function that needs to be executed. The Java Process Agent development SDK provides the required methods to execute different functions and HTTP/S verbs via the API itself. This is done to ease the process of URL redirection that some HTTP/S systems also utilize.</p>"},{"location":"udep/admin/#odata-function","title":"OData Function","text":"<p>Create a single function on the UDEP (System Web Server and OData port) to create a link to an OData API that can be executed from other Java process agents. These functions provide the business functionality that the process agent needs to execute.</p> <p>Note that only one function needs to be created to make requests to that system/port. There are also no additional configurable parameters for an OData function that needs to be executed. The Java Process Agent development SDK provides the required methods to execute different functions and HTTP/S verbs via the API itself. This is done to ease the process of URL redirection that some HTTP/S systems also utilize.</p>"},{"location":"udep/admin/#soap-function","title":"SOAP Function","text":"<p>Create a SOAP function on the UDEP (System Web Server and SOAP port) to create a link to a REST API that can be executed from other Java process agents. These functions provide the business functionality that the process agent needs to execute.</p> <p>Note: The WSDL for the functions you are configuring is required, please keep that handy.</p> <p>The different parameters are:</p> Property Details SERVICE Enter the Service name, this is the value of the Name attribute of the Service tag in the WSDL. SERVICE_EN Enter the Service name endpoint, this is the value of the Location attribute of the Service tag in the WSDL. Remember to remove the URL (including port if any) from the location tag before setting this value as the Protocol, URL and port are already configured at the System and Port level. PORT_NAME Enter the port name for the Web Service, this is the value of the Name attribute of the PortType tag from the WSDL. END_POINT The name of the Web Service function to call, this is the value of the Name attribute of the Operation tag in the WSDL. USE_SOAP_ACTION Set to YES if a Soap action is to be included else NO. SOAP_ACTION Optional value. If a Soap action has been defined for the Web Service being configured, set the value here."},{"location":"udep/admin/#ldap-function","title":"LDAP Function","text":"<p>Note</p> <p>Create a single function for all LDAP queries. </p> <p>There are no configurable functions or parameters here.</p>"},{"location":"udep/admin/#database-function","title":"Database Function","text":"<p>Create a function on the UDEP (System Database and MYSQL, MSSQL, ORACLE or HANA port) to create a link to a database query or stored procedure that can be executed from other Java process agents. These functions provide the business functionality that the process agent needs to execute. </p> <p>Note</p> <p>You need to create only one function to connect to a specific database.</p> <p>There are no configurable parameters for a database function that needs to be executed. The Unvired Java Process Agent development SDK provides the required methods to execute different functions via the API itself. This is done to simplify the configuration and avoiding creating functions to access each stored procedure or query.</p>"},{"location":"udep/admin/#ftp-function","title":"FTP Function","text":"<p>Note</p> <p>Create a single function for all FTP commands. </p> <p>There are no configurable functions or parameters here. The Unvired Java Process Agent development SDK provides the required methods to execute different functions via the API itself. This is done to simplify the configuration and avoiding creating functions to access each FTP command.</p>"},{"location":"udep/admin/#ads-function","title":"ADS Function","text":"<p>Note</p> <p>Create a single function for all ADS queries. </p> <p>There are no configurable functions or parameters here. The Unvired Java Process Agent development SDK provides the required methods to execute different functions via the API itself. This is done to simplify the configuration and avoiding creating functions to access each LDAP query.</p>"},{"location":"udep/admin/#manage-frontends-devices","title":"Manage Frontends (Devices)","text":""},{"location":"udep/admin/#frontends-list","title":"Frontends List","text":"<p>The \"Frontends\" menu option in the navigation tree displays all the Frontends (device types) that have been created in the UDEP landscape.</p> <p>The frontend details are displayed as above. From this screen you can:</p> <ul> <li>Create new frontends</li> <li>Edit or View existing frontends</li> </ul> <p>Note: The Test Adapter Frontend is reserved only for Unvired Internal use.</p>"},{"location":"udep/admin/#iphone-ipad","title":"iPhone &amp; iPad","text":"<p>The frontend for iPhone/iPad provides for data push via APNS (Apple Push Notification) to iPhones/iPads (for iPod Touch use iPhone adapter).</p> <p>The different parameters are:</p> Property Details APNS_GATEWAY The APNS gateway to use PRODUCTION or SANDBOX. If the application is still under development / testing you will need to use SANDBOX for testing the application. For all applications available on the AppStore set it to PRODUCTION. FID_IDENTIFIER The tag to use to identify the communicating iPhone. This value can be configured to UUID (iPhone Unique ID), IMEI (iPhone IMEI number) or CUSTOM. While the UUID and IMEI code will be automatically sent when the device is communicating, the CUSTOM tag will identify the device using the value configured for that front end user in User Management explained in the User configuration section. Note that UUID is not accessible on AppStore applications but possible to be configured for enterprise apps that are installed with Apple Enterprise customer keys. DATA_PUSH_NOTIFICATION_INTERVAL If 0, async data notifications will always be sent. If interval is a non zero value, if a notification has already been sent and the device has not consumed it another notification will only be sent after the expiry of DATA_PUSH_NOTIFICATION_INTERVAL seconds PROXY_HOST Set Proxy Host if APNS has to be accessed via a proxy (optional) PROXY_PORT Set Proxy server Port if Proxy Host specified (optional) PROXY_USER Proxy server user (optional) PROXY_PASSWORD Proxy server password (optional)"},{"location":"udep/admin/#android-phone-tablet","title":"Android Phone&amp; Tablet","text":"<p>The frontend for Android provides for data push via FCM (Firebase Cloud Messaging) to phones and tablets running the Android operating system.  Unlike iOS devices, Android devices don't need to be differentiated and a single frontend can handle both phones and tablets.</p> <p>The different parameters are:</p> Property Details FID_IDENTIFIER The tag to use to identify the communicating Android device. This value can be configured to ANDROID_ID (Android Unique ID), IMEI (IMEI number) or CUSTOM. While the ANDROID_ID and IMEI code will be automatically sent when the device is communicating, the CUSTOM tag will identify the device using the value configured for that front end user in User Management explained in the User configuration section. DATA_PUSH_NOTIFICATION_INTERVAL If 0, async data notifications will always be sent. If interval is a non zero value, if a notification has already been sent and the device has not consumed it another notification will only be sent after the expiry of DATA_PUSH_NOTIFICATION_INTERVAL seconds"},{"location":"udep/admin/#windows-mobile-legacy","title":"Windows Mobile (Legacy)","text":"<p>The frontend for Windows Mobile provides for sending data to ruggedized and other smart devices running Windows Mobile. Note that data will be held on the UDEP server as there are no notification mechanisms supported by Windows Mobile, the device will need to request the server for data.</p> <p>No configurable parameters.</p>"},{"location":"udep/admin/#windows-8-windows-10-tablets","title":"Windows 8 / Windows 10 Tablets","text":"<p>The frontend for Windows 8 / Windows 10 provides for data push to Windows Tablets using the Windows Notification Service or WNS for Store Apps.</p> <p>The different parameters are:</p> Property Details FID_IDENTIFIER The tag to use to identify the communicating Windows device. This value can be configured to UNIQUE_ID (WP Unique ID), IMEI (IMEI number) or CUSTOM. While the UNIQUE_ID and IMEI code will be automatically sent when the device is communicating, the CUSTOM tag will identify the device using the value configured for that front end user in User Management explained in the User configuration section. DATA_PUSH_NOTIFICATION_INTERVAL If 0, async data notifications will always be sent. If interval is a non zero value, if a notification has already been sent and the device has not consumed it another notification will only be sent after the expiry of DATA_PUSH_NOTIFICATION_INTERVAL seconds"},{"location":"udep/admin/#browser-push","title":"Browser Push","text":"<p>The frontend for client web applications developed with the Unvired REST API. UDEP supports asynchronous browser push based on Server Side Events (SSE).</p> <p>The different parameters are:</p> Property Details BROWSER_RETRY_TIMEOUT The time interval in seconds before the browser retries a connection to the Server Side Event (SSE) URL"},{"location":"udep/admin/#server-machine-to-machine-communication-external-systems-iot-etc","title":"Server (Machine To Machine) Communication (External systems, IoT etc)","text":"<p>The frontend for web server based flows developed with the Unvired REST API. UDEP supports HTTP endpoint push notifications for this.</p> <p>The different parameters are:</p> Property Details PROTOCOL HTTP or HTTPS of the external web endpoint to notify SERVER_URL The URL of the external web endpoint to notify. For e.g. extnotif:8080/endpoint. UDEP will write post data to the URL as explained below. REST_API_LIMIT For later use <p>The External URL will receive the following HTTP (request) post parameters at the above-defined endpoint:</p> Post Parameter Details UMP_SERVER_ID The server ID of the UDEP server initiating the push. Can be used to determine which UDEP server is sending the notification when there are multiple servers in the landscape. (For e.g. Development, Quality or Production) APPLICATION_NAME The name of the application initiating the push (For e.g. UNVIRED_SAP_CRM) CONVERSATION_ID The Conversation ID of the message that is now processed and available for download. If the server has saved the Conversation ID returned from the Execute REST API it can be used to identify, else use the next parameter EXTERNAL_REFERENCE EXTERNAL_REFERENCE The external reference string that was posted to the REST API execute method. This can be used to identify the push notification message uniquely without using the UDEP defined CONVERSATION_ID above. MESSAGE_COUNT The total number of messages awaiting delivery"},{"location":"udep/admin/#manage-users","title":"Manage Users","text":""},{"location":"udep/admin/#users-list","title":"Users List","text":"<p>The \"Users\" menu option in the navigation tree displays all the users that have been created in the UDEP system.</p> <p>From this screen you can:</p> <ul> <li>Search for users by Frontend Type (frontend, user type or user status), Unvired Users, Frontend Users or Federation ID (ADS user, SAP user or LDAP user)</li> <li>Add and edit users</li> <li>Reset the password for a user</li> <li>Enable or Disable a user</li> <li>Display the Authentication Keys for all users, Regenerate for a user</li> <li>Send notification to a user</li> <li>Upload a CSV file to create users in bulk</li> <li>Download users in CSV that can be imported into any other UDEP system</li> </ul> <p>Pro Tip</p> <p>Hovering the mouse over the number of users in the tabular column will provide a quick view of the frontend, backend and federation users as shown below.</p>"},{"location":"udep/admin/#create-unvired-user","title":"Create Unvired User","text":"<p>The Unvired user is the core identity for any user to interact with the Unvired platform. Every user needs to have an Unvired user created. Every device that the user wants to connect to the Unvired platform requires an associated front end user and every backend system that the user wants to connect to will require a backend user.</p> <p>The first step in Unvired identity management is to create an Unvired user or Master user. Click on the \"Add\" button to create a new Unvired user.</p> <p>The different parameters are: | Property | Details | |-|-| | User Name | Entered the desired user name (no spaces allowed). | | First Name, Last Name | Enter the First and Last name of the user. | | Email | Enter the primary email id. All notifications to the user will be sent to the primary email id. | | Alternate Email | Optional value. Enter the alternate email id here | | User type | As explained in the User section above, there are multiple user types that are supported. Choose the correct type for the user. | | User's Language | Optional value. Enter the user's desired language. If not set the main language for the company that the user belongs to will be used. All system messages that are sent to the mobile application will be sent in the configured language. | | User's Time Zone | Optional Value. Select the user's time zone if required. The timezone is used while scheduling any functions to fetch and push data to the user. By default the company's time zone is used but if you need to override for specific users it can be done by setting it here. | | Password | The password policy that has been configured by the administrator is displayed at the bottom of the screen. Set a password that conforms to the policy and retype / confirm it. |</p>"},{"location":"udep/admin/#create-frontend-user","title":"Create Frontend User","text":"<p>In order to add frontend user for an Unvired user currently being created click on the Frontend user tab in the creation screen.</p> <p>To add a frontend user for an existing Unvired user, select the Unvired user to add a frontend user for and choose \"Edit\" and select the \"Frontend User\" tab. You can now Add new frontend user and edit or delete existing frontend users.</p> <p>While adding a new frontend user the different parameters are:</p> Property Details Select Frontend Choose the frontend for which a frontend user is to be created. Frontend user name Enter the frontend user name. This is determined by the setting at the frontend adapter.  For e.g if the configured property is Custom, you can type any unique identifier or for IMEI enter the IMEI number here etc. <p>For each device that the user wants to use on the landscape a frontend user needs to be created. The Unvired license counts total number of front end users only for active users.</p>"},{"location":"udep/admin/#create-federation-id","title":"Create Federation ID","text":"<p>The Unvired platform allows the users on the device to login to the application using their Unvired User (default) or alternatively they can use their Microsoft Active Directory credentials (SAML SSO) or SAP Login credentials.</p> <p>Federation IDs need to be unique in the system and can occur only once (in other words can be mapped to only one Unvired user). Each application for that Unvired user can have a different Federation ID or alternatively all applications can have the same Federation Id. For example, the user can have a different Federation ID to login into the CRM application and a different Federation ID to login into the Purchase Order approval application.</p> <p>In order to add Federation ID for an Unvired user currently being created click on the Backend user tab in the creation screen.  To add a Federation ID for an existing Unvired user, select the Unvired user to add a Federation ID for and choose \"Edit\" and select the \"Federation ID\" tab. You can now Add new Federation ID and edit or delete existing Federation IDs.</p> <p>Federation IDs are optional as they are required only if users will not use their Unvired ID to login to the application.</p> <p>Note</p> <p>The actual login mechanism for an application is configured in the Application Properties explained later.  If auto provisioning is enabled along with SAML SSO then the federation user is automatically added.</p> <p>While adding a new Federation ID, the different parameters are:</p> Property Details Application The application for which the Federation ID is being configured. Different applications can have different Federation IDs. If all applications will use a common Federation ID (for e.g. MS ADS login) select the application as \"ALL\". Federation ID Enter the Federation ID to use. This Federation ID has to be unique and cannot repeat in the system. However for the same user, the Federation ID can repeat across different applications."},{"location":"udep/admin/#api-tokens","title":"API Tokens","text":"<p>API tokens can be generated for Application Users that include only a Server front end user.  This is useful when other systems communicate with UDEP and can be provided API Tokens with a specified expiry and specific access so that they are secure.</p> <p>API Tokens are generated for the Server user(s) for a specific application and for a specified period.  Once the token is created, access to the required functions of that application is configured.  Additional functions can be added or existing ones removed whenever required.  The API token is valid for the specified period and can either be revoked or extended based on need.</p> <p>Such API tokens can be used as authentication tokens for the REST API by passing them via a header parameter called apiToken.</p>"},{"location":"udep/admin/#bulk-upload-users","title":"Bulk Upload Users","text":"<p>When a number of users need to be created on the Unvired platform, rather than creating them individually it is easier to enter all the desired user information in an Excel sheet and upload to the Admin Cockpit. The format of the Excel sheet is:</p> Column Name Details unvired_user The desired Unvired user (or master user) first_name The First name of the user Last_name The Last name of the user user_type The desired user type as explained earlier, typically APPLICATION. password The desired password (the password needs to satisfy the configured password policy as explained in the System configuration section) enable Is the user enabled (1) or disabled (0)? email The user's email id email-alt The user's alternate email id number_frontend The number of frontends that this user is to be connected to, typically 1 (more if the users have larger number of devices) frontend_system_1 The first frontend system for this user. Based on the number_frontend property the import functionality will cycle through and pick up the values for frontend_system_1 to frontend_system_n. The frontend needs to be already existing in the system. frontend_user_1 The first frontend user. Based on the number_frontend property the import functionality will cycle through and pick up the values for frontend_user_1 to frontend_user_n. number_backend The number of backend systems that this user is to be connected to, can be 0 or more. backend_port_1 The first backend port for this user. Based on the number_backend property the import functionality will cycle through and pick up the values for backend_port_1 to backend_port_n. The backend port needs to be already existing. backend_user_1 The first backend user. Based on the number_backend property the import functionality will cycle through and pick up the values for backend_user_1 to backend_user_n. backend_password_1 The first backend user's password. Based on the number_backend property the import functionality will cycle through and pick up the values for backend_password_1 to backend_password_n. netweaver_flag_1 If the Unvired platform has been deployed on NetWeaver this flag indicates if a NetWeaver user also has to be created for that user to enable Single Sign On (more details). number_federation The number of federation IDs for this user. Based on the number_federation property the import functionality will cycle through and pick up the values for federation_id_1 to federation_id_n. app_name_1 The first application for mapping the federation_id for the user. federation_id_1 The first Federation ID for mapping to the app_name_1. number_deployment The number of applications to deploy for the user deploy_app_1 The name of the application to deploy as configured in the admin cockpit deploy_frontend_user_1 The front end user to deploy the application. The application will be deployed only If the application is available for that frontend. number_group The number of groups to add the unvired user to group_name_1 The name of the group to which the unvired user must be added to. If the group is not existing the group is created. <p>Note</p> <p>All columns that have a xxxx_1 column name are interpreted as below (for e.g. with deployment) - number_deployment = 2 means the import will expect deploy_frontend_user_1 and deploy_frontend_user_2</p> <p>Once the Excel file has been prepared, click on the \"Upload\" button and execute for all the users to be created. Contact the Unvired support for a template for the above Excel sheet.</p> <p>Note</p> <p>You can login to the Unvired Customer Download Portal and download the latest Excel template.</p>"},{"location":"udep/admin/#groups","title":"Groups","text":"<p>After clicking on \"Users\" menu option in the navigation tree, select the \"Groups\" tab to display all the groups created in the system and to add or edit groups.</p> <p>Groups in the Unvired platform can be used to setup periodic data refresh from backend systems. This is explained in the Schedulers section later. In addition groups can also be used to deploy applications to all users belonging to a group.</p> <p>The Unvired REST API also allows push of data and messages to a Group.</p> <p>While adding a new group the different parameters are:</p> Property Details Group Name Enter the group name desired, spaces are not allowed. Description Enter the group description. <p>Choose \"Next\" arrow to move forward in the wizard. In the next step the users belonging to this group can be selected. Note that search can be based on frontend users or master users. Irrespective of which criteria is used, only master users can belong to a group. Users from multiple frontends can be added to a common group or in other words users with different device types can all be added to a same group. Such a grouping allows to also logical select groups based on roles for example a group for all purchasing managers can be created and users assigned.</p> Property Details Select Frontend Select the frontend whose users are to be added to the group. Select Users List of users from the selected frontend are displayed. All users with a Green status icon are available to be added to the group. <p>Select all users to be added to the and click on the \"Next\" arrow button, then click on the \"Save\" button in the confirmation screen to create the group.</p>"},{"location":"udep/admin/#summary","title":"Summary","text":"<p>After clicking on \"Users\" menu option in the navigation tree, select the \"Summary\" tab to display a summary of users created in the UDEP landscape including the total number of devices (frontend users) created. This summary helps in tracking the number of devices provisioned for eg. to compare with number of licensed devices.</p>"},{"location":"udep/admin/#manage-applications","title":"Manage Applications","text":""},{"location":"udep/admin/#applications-list","title":"Applications List","text":"<p>The \"Applications\" menu option in the navigation tree displays all the applications that have been configured in the Unvired platform.</p> <p>The application details are displayed as above. From this screen you can:</p> <ul> <li>Add, Edit, Delete and Ciew applications and librariesPurchase and use Marketplace Apps</li> <li>Configure the Process Agent settings (Developer defined, Custom settings on a per-application or per user-application basis)</li> <li>Upload the Process Agent binaries for the application. Note if mouse hover over the green tick mark the uploaded process agent information is displayed.</li> <li>Bulk deploy the application</li> <li>Group deploy the application</li> <li>Define administrators for the application</li> <li>Configure the Application Properties (UDEP defined, Standard properties on a per-application basis)</li> </ul> <p>Pro Tip</p> <p>Use the mouse to \"hover\" over the process agent icon or the count of devices / activated to get a quick overview.</p>"},{"location":"udep/admin/#create-application","title":"Create Application","text":"<p>Creating an application follows a set of well-defined steps and the web interface provides a wizard to accomplish this.  Enter the application details.</p> Property Details Description Enter the desired application description to describe the application. Name Enter the desired application name (no spaces allowed). Please note that this should be a unique name on the Unvired platform. Vendor Enter a short name to identify the creator of the application. Version Enter the version of the created application. This version number is reserved for later use and is not to be confused with versions of the application binaries that exist on the mobile device or the Unvired platform. <p>Choose the \"Next\" arrow button.  Select each of the frontends (devices) on which this application will be available from the drop down and click the \"+\" button. Based on the type of frontend chosen further data in terms of push configuration will need to be provided. This data is summarized in the table below.</p> Sl Frontend Additional parameters 1. iPhone and iPad APNS registration certificate needs to be uploaded along with the password.This is required to enable the Apple Push Notification Service. 2. Android phone and tablet Google Server API key and Sender ID need to be entered here.This is required to enable the Google Cloud Messaging. 3. Windows 8 / 10 No configuration 4. Machine to Machine No configuration 5. Browser No configuration <p>Choose the \"Next\" arrow button.  Now the different functions that make up this application need to be selected. Click on the \"+\" button to search and select backend functions which are already configured (see section on Backend functions described elsewhere in this document). Please note that only those functions that are a part of this application can be executed by the mobile application or the process agent on the Unvired platform. Select the various functions that comprise this application and click the \"Save\" button. If no functions have been defined, you can skip this step for now.</p> <p>Once the function is selected, the following additional parameters can be configured.</p> Sl Function Properties Description 1. Initial Download If checked, this function is included in the list of initial download functions. Whenever an \"Initial Download\" request is sent from the mobile applications, all functions marked as Initial download will be executed and the data sent to the mobile application. 2. Delete Data If checked, whenever data is returned from this function the mobile application will delete all existing data (saved from the previous run) and insert the new data. If the data on the mobile application is to be retained, leave this option unchecked. 3. SSO If SSO is ticked, SAP NetWeaver SSO ticket is used to execute the function. This is valid only for SAP ABAP functions. The summary is now displayed for the new application. Choose Save to create the new application. <p>Note: On Save, the Application Properties window will be shown. Please configure all properties as explained in the Application Properties section.</p> <p>Note: If using the Unvired Modeler to create the application, the application configuration on UDEP can be done automatically from the tool and manual creation as described above is not required.</p>"},{"location":"udep/admin/#edit-application","title":"Edit Application","text":"<p>Select the desired application and choose the Edit button. This will allow adding new frontends (devices) that are now supported, remove frontends that are not supported anymore, change push settings, add additional functions to the application or remove functions that are not needed anymore.</p>"},{"location":"udep/admin/#mobile-application-deployment","title":"Mobile Application Deployment","text":"<p>For Android, iOS (Inhouse Apps only) and Windows Mobile devices (that support custom installation routines) the client applications can be uploaded and maintained on the Unvired platform. Mobile users can update to the new applications from within the application itself via push notifications.</p> <p>The applications that need to be deployed over the air (OTA) can be maintained on the Unvired platform by selecting the device and clicking on the \"Upload Application\" button. You can upload one application file depending on the type of device and these files will be available for download by the end users. Additionally a history of all apps is maintained so you can revert to older versions whenever required.</p>"},{"location":"udep/admin/#udep-enterprise-store","title":"UDEP Enterprise Store","text":"<p>For mobile applications that are uploaded into the UDEP Admin Cockpit for deployment, to help users \"discover\" or \"find\" these applications, an Enterprise AppStore is built into UDEP.</p> <p>The enterprise Store is accessible via the URL like https://UDEP_Server:Port/UDEP/store/. The list of applications, screenshots and description are displayed. The user should access the store via their mobile device. Clicking on the required application will allow installation of the application on the mobile device directly.</p> <p>In order to display the store information, the administrator has to click on the Store menu item (as shown above) and provide the following information.</p> Sl. Property Description 1. Display Name The name to be displayed in the Store for this application. Keep this brief and easily recognizable. 2. Description The detailed description about the application to be displayed. Enter as much detail as required here. 3. Listing Image The icon / image to display in the main listing page and the details page. The recommended size is 120x120. 4. Screenshots Upload as many screenshots as required to showcase the application. The recommended size is 500x500. <p>The Enterprise App Store can be setup with authentication or open. Typically if the UDEP is accessible only with the corporate network or via VPN the App Store can be open, if accessible over the Internet then its secure to configure it as authenticated.</p>"},{"location":"udep/admin/#delete-application","title":"Delete Application","text":"<p>An application that is not required any longer can be deleted if necessary. Please remember that only applications that are not deployed to any active user can be deleted. Also the application should not have any mapped functions. Before deleting any application please Un-deploy the application for all users by following the Un-deploy section later in the document and also remove any mapped functions by editing the application.</p>"},{"location":"udep/admin/#process-agent-settings","title":"Process Agent Settings","text":"<p>Every Unvired application can have configuration settings saved as key-value pairs. These settings can be for an application or for each user of an application. The application settings can be used to save configuration / customization information for the process agent like total number of records to return, backend object reference codes etc.</p> <p>In addition, the users' settings for an application can save configurations like the users region, users' favorite customers etc. Application and user settings thus allow the process agent to store contextual information and provide relevant information to the mobile application.</p> <p>On clicking the \"Application Settings\" button a list is displayed.  The list of process agent / application settings already configured is displayed. You can add new settings or edit / delete existing settings after selecting the row. Unvired also allows for saving sensitive configuration data. To achieve this choose the \"Secure Property\" option while adding settings as shown below. Such settings that are configured as \"Secure\" are not displayed in the Admin Cockpit and can only be edited or deleted. These settings are available ONLY to the process agent application on the UDEP.</p>"},{"location":"udep/admin/#mobile-application-settings","title":"Mobile Application Settings","text":"<p>The list of mobile application settings already configured is displayed. You can add new settings or edit / delete existing settings after selecting the row. Unvired also allows saving sensitive configuration data. To achieve this choose the \"Secure Property\" option while adding a settings as shown below. Such settings that are configured as \"Secure\" are not displayed in the Admin Cockpit and can only be edited or deleted. These settings are available ONLY to the mobile application. For e.g. if an application wants to control the timeout in connections it can be configured here and UDEP will automatically make it available on the device and the mobile application can then set the preconfigured timeout without user intervention.</p> <p>Note</p> <p>Only those settings that are for an application (not meant for a specific user or those that cannot be personalized) are configured here.</p>"},{"location":"udep/admin/#mobile-user-settings-template","title":"Mobile User Settings Template","text":"<p>The list of mobile user settings already configured is displayed. You can add new settings or edit / delete existing settings after selecting the row. Unvired also allows saving sensitive configuration data. To achieve this choose the \"Secure Property\" option while adding a settings as shown below. Such settings that are configured as \"Secure\" are not displayed in the Admin Cockpit and can only be edited or deleted. These settings are available ONLY to the mobile application and for personalization by the mobile users.</p> <p>All the template settings that are configured here are sent to the device so that every user is allowed to set them according to their preferences. These settings persist across sessions. For e.g. the user can be sent a default Theme from the server as configured by the administrator. When the user changes the theme in the application, the theme can be saved back to UDEP so that if the application is reinstalled (for e.g.) the user's theme can be restored.</p> <p>In order to ensure that your users can understand these settings use correct descriptions. Each template setting comprises the following:</p> Property Details Description Key Name Used by the process agent to retrieve/set the configuration value The name to be displayed in the Store for this application. Keep this brief and easily recognizable. Description Used on the mobile application for the user to identify the configuration The detailed description about the application to be displayed. Enter as much detail as required here. Default value Prefilled on the mobile application as default value The icon / image to display in the main listing page and the details page. The recommended size is 120x120. Mandatory Indicates if the property is to be mandatorily filled by the user Upload as many screenshots as required to showcase the application. The recommended size is 500x500. Secure property Sensitive data, not displayed in the Admin Cockpit"},{"location":"udep/admin/#upload-process-agent","title":"Upload Process Agent","text":"<p>The logic that an application comprises in the Unvired platform is a set of Java (or JavaScript) functions called as a \"Process Agent\". In technical terms, the jar file (or zip file with JS files) that is generated/developed can also be referred to as the process agent. Please use the Unvired Development guide and the Unvired Modeller to generate the required process agent and customize it. Once the process agent has been debugged, fixed and tested you can choose the \"Upload Process Agent\" button to upload the process agent. For security you can additionally obfuscate the jar file if required.</p> <p>A list of process agents and supporting jar files associated with the application are displayed. You can upload new process agents and jar files that are not present or delete and re-upload existing process agents and jar files. Note: Since the already uploaded process agent may already be executing, it is recommended that on production servers the upload is done during \"off\" hours. On update/deletion the classes are unloaded from memory and the jar is also overwritten/deleted. This allows a \"hot deployment\" of process agents without any down time.</p> <p>Click on the \"+\" button to upload a new file. Enter a comment to describe the main changes in the process agent. Drag and drop the file and then click on the \"Upload\" button.  All uploaded process agents and related jar files are displayed. The version number displayed is as set in the MANIFEST.MF file that is part of the process agent jar file.</p> <p>Note: While updating a process agent jar file please remember to also update the version number in the MANIFEST.MF file. This will help trouble shoot later as it helps identify which version of the process agent is currently uploaded to the server. Also the mobile data model from the metadata.xml file and the date / time of file upload is displayed.</p> <p>The Revisions button displays the revisions that have been made to the process agent and allows the administrator to know the \"history\" of the revisions.</p> <p>Selecting an earlier revision or a deleted process agent enables an option to \"Revert\" to that revision easily.</p>"},{"location":"udep/admin/#libraries","title":"Libraries","text":"<p>Clicking on the Libraries option lists all the libraries that are deployed with the application or new libraries that are available to be deployed. Libraries are explained in more detail in an earlier section.</p> <p>Library available for deployment and those already deployed can be viewed separately.  Library Edit screen displays the functions and linkage.</p>"},{"location":"udep/admin/#bulk-deploy-and-undeploy","title":"Bulk Deploy and Undeploy","text":"<p>Every Unvired application that is to be used by an Unvired user on the mobile device needs to be first \"Deployed\" to the user. Please note that deployment is a separate step from the actual installation or deployment on the mobile device. Usually anybody can install an application on their device. However only those users for whom the application has been deployed will be able to login and use the applications.</p> <p>Applications can be deployed for each user as explained in the deployment section or in bulk. The bulk deployment is a time saver option to deploy the application to multiple frontend users at the same time. Clicking on the \"Bulk deploy\" button displays a wizard wherein the frontend for which the application needs to be deployed is selected.</p> <p>Now the users belonging to that frontend are displayed. You can deploy for all users or selected users. The options are available in the Selection Menu. Once the required users are selected click on the Deploy button and confirm the deployment. The deployment is completed and you can now close the window or continue with deploying more users on other frontends etc.</p> <p>Un-deployment of applications (for those users who should not be able to access the applications any more) can also be performed similarly with the \"Bulk Undeploy\" option.</p>"},{"location":"udep/admin/#group-deploy","title":"Group Deploy","text":"<p>Unvired applications are many times built to fulfill functionality that is meant for specific people in specific roles, for example workflow approval is for all managers. Rather than bulk deployment, it may be more appropriate to deploy based on roles or groups.</p> <p>After clicking the \"Group Deploy\" button, select the group that has already been created as explained in the group configuration section and click the \"Next\" button.</p> <p>You now have the option to deploy to all users in the group by clicking on the \"Deploy All\" button or to deploy to selected users within the group.</p>"},{"location":"udep/admin/#application-properties","title":"Application Properties","text":"<p>UDEP also mandates that each application has a set of properties. These properties are predefined and need to be set by the administrator for each application. Note that unlike Process Agent Settings, these properties can only be set by the administrator and cannot be changed or deleted.</p> Sl Application Property Description 1. DATA_FORMAT Data format to support for the application. XML or JSON can be chosen. 2. COMPRESS_POST_DATA Mandates the UDEP device framework to GZIP upload data also (by default all downloads and attachments are compressed). If a lot of data is being uploaded form the application, set this option to YES. 3. STORE_MESSAGE_DATA Indicates if the message data is stored after it has been delivered to the device or needs to be cleared out. Typically in production systems this is set to No and in development/quality systems set to Yes for trouble shooting. 4. STORE_MESSAGE_FORMAT The format to store the message data:TEXT \u2013 Stored as plain text (not recommended)COMPRESSED \u2013 Data is compressed and stored (recommended option)ENCRYPTED \u2013 Data is encrypted and storedCOMPRESSED_ENCRYPTED \u2013 Data is compressed, encrypted and stored (recommended for sensitive data) 5. CALL_FLOW If Enabled, saves the call flow for each function call and can be viewed in the Call Flow button in the Sync/Async monitor. 6. LOG_LEVEL Log level ERROR for errors only or INFO for more verbose logging 7. ALLOW_APPLICATION_ASSIGNMENT This option is only available to ROOT company (for e.g. UNVIRED) or partner companies selling applications on the UDEP. Set this to YES to allow other companies to purchase and use the application. 8. ALLOW_APPLICATION_COPY This option is only available to ROOT company (for e.g. UNVIRED) or partner companies selling applications on the UDEP. Set this to YES to allow other companies to purchase and copy the application to their namespace (source code needs to be provided for the client app and process agent) so that the customers can modify the app to their needs. 9. PROVISIONING This can be set to \"Administered\" wherein the UDEP administrator can deploy or provision applications for users. Set to \"AUTO\" for automatic provisioning wherein users can self-register on UDEP and use the application. 10. EMAIL_DOMAIN_ALLOWED Domains to be allowed has to be specified as a comma separated list. If * is specified all email domains will be allowed and is not recommended.  If left empty no email domains will be allowed. 11. LOGIN_MODULE Indicates which login mechanism is to be used for verifying user credentials. By default the \"UNVIRED-USER\" mechanism is used wherein the user needs to enter their Unvired ID on the mobile device to authenticate.Alternatively login can be via Email ID, SAML2 SSO, LDAP or MS ADS user or even SAP user. Developers can also provide a custom authentication mechanism wherein authentication is delegated by UDEP to a process agent function. See the sample Custom Login module in development guide for an example on how to build custom login modules.Note: For SAML2 SSO additional properties as explained in the SAML Single Sign On Advanced Configuration section will need to be configured. 12. LOGIN_CLASS Optional: If LOGIN_MODULE is set to Custom, the class implementing the authentication needs to be specified here. 13. CREATE_USER_PROCESSOR_CLASS Optional: If your application requires additional configuration that needs to be performed when a new user is created via API, the class implementing the additional steps needs to be specified here. 14. ATTACHMENT_PROCESSOR_CLASS Optional: Determines the class implementing the attachment processing for the process agent. One attachment processor per process agent needs to be specified here. If there are no attachments this field can be left empty. 15. PASSWORD_RESET_EXPIRY Password reset token validity in seconds. For e.g. to have a token valid for 1 day use 86,400 seconds, minimum is 10 minutes and max of 1 day. 16. JWT_TOKEN_EXPIRY Optional: If JWT token authentication is being used (SAML SSO or web applications for e.g.), the expiry of the issued tokens can be specified in seconds.  Default is 86400 seconds or 1 day. 17. JWT_SSO_APPS Comma separated list of other Apps that need to be trusted via this JWT token. 18. JWT_CLAIMS_PROCESSOR_CLASS Optional: Determines the class implementing the JWT token claims processing.  This class is required only if additional (custom) claims need to be included into the JWT token.  If not specified, only the standard claims will be included. 19. MOBILE_REDIRECT_URL Custom redirect URL for the mobile app like unviredapp://. Redirects to this URL will be captured by the mobile app for performing specialised functions like passwordless login etc. 20. USE_UNVIRED_ID_AS_FEDERATION_ID If this property is set to YES, UDEP will not look for a separate Federation ID for that user/application but will default the Federation ID to Unvired ID. This also means that the Federation ID need not be maintained in UDEP. 21. AUTHENTICATE_MOBILE_APP_INSTALL When set to YES, a login is required for the user to install Apps from the Unvired Enterprise App Store (typically when UDEP is exposed to the Internet or behind a reverse proxy). Set to NO if everyone is allowed to install (typically if UDEP is accessible only within a VPN or Intranet) 22. ONE_TIME_TOKEN_CHECK If ENABLED, every request from the device to the UDEP server is further protected with a one-time use token. This also ensures that the same user logs in to the application on a new device (custom front end id) the old device will automatically stop. 23. LOCAL_PASSWORD If set to YES (DEFAULT), when the mobile application starts the user will be prompted for the Unvired User ID and Password for local verification/authentication on the device. If set to NO, the mobile application will start without any password prompt. Recommended value is YES. 24. APP_LOCK_TIMEOUT Indicates the timeout interval on the device before prompting for password, if set to 0 the device will not lock. 25. DUPLICATE_CALL_HANDLING Decides the rule to apply when duplicate calls are received for functions downloading data to the device. Possible options:CALL_ALWAYS - Make a call irrespective of any pending or completed calls of the same functionIGNORE_CALL \u2013 Ignore the call if any pending or completed calls of the same function existDISCARD_DATA_AND_CALL \u2013 Discard any results for the previous calls (if any) and call again. 26. ALLOW_UMP_URL_OVERRIDE Allow to override the UMP URL to connect to with what is entered by the user in the client application instead of using the URL configured in the ME system properties.  This is useful in cases where ME is configured with an internal URL but applications need to use an external URL to connect to the server. 27. VERIFY_MESSAGE_HASH Optional: Server includes an additional hash with each message that is sent to the client.  This can be checked on client before accepting the data.  Recommended on slow / intermittent connectivity networks. 28. LOCATION_TRACKING Indicates if the location tracking will available for this application from the device. If set to Enabled, the device will automatically capture the location and transmit to the server. 29. APP_BASED_LOCATION_TRACKING Indicates if the location tracking will also record the application information along with the location. If the user has two applications on the mobile device enabled for location tracking, two sets of location information will be available on the server. 30. LOCATION_TRACKING_INTERVAL Indicates the interval (in seconds) on the mobile between location checks. 31. LOCATION_UPLOAD_INTERVAL Indicates the interval (in seconds) on the mobile when location information collected will be transmitted to the server. 32. LOCATION_TRACKING_DAYS Indicates the days of week to track location. Options available are MON-FRI, MON-SAT or MON-SUN 33. LOCATION_TRACKING_START Indicates the time to start tracking location (24 Hour,HH:MM). 34. LOCATION_TRACKING_END Indicates the time to end tracking location (24 Hour, HH:MM). 35. ATTACHMENT_CONNECTION Indicates if the attachments should be transmitted over any connectivity or only over WIFI. Possible options are ANY or WIFI."},{"location":"udep/admin/#marketplace-applications","title":"Marketplace Applications","text":"<p>The standard applications that Unvired has made available or any other applications that need to be used within the company but needs to be segregated by country or sub division etc. can be achieved by setting applications to template applications via the ALLOW_ASSIGNMENT or ALLOW_COPY application properties. Such applications will appear in the Marketplace Applications list and can be purchased and used as is or copied and customized to specific needs.</p> <p>For e.g. in the above screen three applications provided by Unvired can be used by the other companies.</p>"},{"location":"udep/admin/#deployment-and-other-tasks","title":"Deployment and other tasks","text":"<p>Click on the \"Applications\" menu option in the navigation tree and then the \"Deployment\" tab to deploy any of the applications that have been configured in the Unvired platform to mobile users. You have a choice of deploying based on Application Name (used if an application has to be deployed for selected users) or to deploy based on Frontend user or Unvired user (used if multiple applications have to be deployed for the same user).</p> <p>The legend below the criteria shows how many users are Not-deployed, Deployed, Activated or in Error deployment for the chosen criteria.</p> <p>Once the application and the frontend have been selected, select the deployment status for more fine-grained control so that it's easy to select the users to either deploy or un-deploy. Click on the \"Search\" button and a list of frontend users for whom various operations for the selected application and deployment status can be executed is now displayed.</p> <p>The different tasks are displayed in the dropdown list and each task is explained in detail below.</p>"},{"location":"udep/admin/#ping","title":"Ping","text":"<p>Test if the device is online currently by sending a Ping request from the server. The client will respond with a ping back when it receives it.</p>"},{"location":"udep/admin/#deploy","title":"Deploy","text":"<p>The application is deployed for use by the selected frontend user. Only users for whom the application has been deployed will be able to download the application and login to use the functionality.</p>"},{"location":"udep/admin/#un-deploy","title":"Un-deploy","text":"<p>The application is un-deployed for the selected frontend user. The user for whom the application has been un-deployed will not be able to use the application any longer. Un-deployment is immediate. Even if a user is currently logged in and using the application on the mobile device, after un-deployment the user will not be permitted to use the application and an appropriate message is displayed to the user.</p>"},{"location":"udep/admin/#wipe","title":"Wipe","text":"<p>When a \"Wipe\" message is sent to the device, all the data (application and Unvired related) is deleted on the device and the application cannot be used unless the user is authenticated and activated again. A wipe message is useful when both the application and the Unvired system database are corrupted on the device and the application is not usable. The administrator can queue the wipe request for an unattended recovery on the device. It is also useful when user has left the organization and not returned the device or if a device is lost.</p>"},{"location":"udep/admin/#request-log","title":"Request Log","text":"<p>When a \"Request Log\" message is sent to the device, all the device logs that are available on the device are immediately sent to the Unvired server. The log information helps the administrator and the developer to troubleshoot any errors in the application without user intervention. These logs can be seen in the \"Device Logs and Data\" option as explained in the device logs section later.</p>"},{"location":"udep/admin/#request-data-export","title":"Request Data Export","text":"<p>When a \"Request Data Export\" message is sent to the device, all the application data on the device is exported to text form and immediately sent to the server. The exported data helps the administrator and the developer to troubleshoot any errors in the application without user intervention. This data can be seen in the \"Device Logs and Data\" option as explained in the device data section later.</p>"},{"location":"udep/admin/#erase-log","title":"Erase Log","text":"<p>When an \"Erase Log\" message is sent to the device, all the device logs that are available on the device are immediately erased. This can be used to remotely clear out logs and then after the error scenario is recreated the logs may be requested again (to avoid cluttered logs).</p>"},{"location":"udep/admin/#log-level-error-or-debug","title":"Log Level (Error or Debug)","text":""},{"location":"udep/components/","title":"Components","text":""},{"location":"udep/components/#companies","title":"Companies","text":""},{"location":"udep/components/#companies_1","title":"Companies","text":"<p>UDEP by design is multi-tenant.  The deployment of UDEP could be public cloud (AWS, Azure, Google etc) or Private Cloud, Bare Metal servers within your data centre or Virtual Machines in your landscape.  Irrespective of the deployment, the UDEP deployed is the same secure, multi-tenant architecture.</p> <p>Companies in UDEP are a logical grouping of an organization.  For e.g. in the public cloud, each customer will be a Company or domain in UDEP.  Companies could also mean subsidiaries or departments as required. </p> <p>Companies own the set of users, applications, systems, frontends, data etc. Companies can be Partner Companies (for e.g. in a public multi-tenant cloud run by Unvired and managed by an Unvired partner), Customer Companies (for e.g. in a public, shared multi-tenant cloud) or Departments / Group Companies / Subsidiaries (for e.g. in a private dedicated cloud). </p> <p>The company that is created during installation \"owns\" the UDEP landscape and is referred to as ROOT company. The other types are PARTNER (typically an Unvired partner managing the infrastructure) or CUSTOMER (could be end customer or department or group company). Companies can only be created by the Super Admin or SA user of the Root company.</p>"},{"location":"udep/components/#plans","title":"Plans","text":"<p>Every company needs to have an activated plan. A plan decides how many applications, backend systems, frontends or devices, users (admin/device/developer) are allowed to be created.</p> <p>Note: Data limits are planned and currently not available. Standard plans are preconfigured such as Trial, Unlimited etc. and can be used or custom plans can be created. A plan has to be assigned to a company and then activated so that the company can deploy applications and provision users.</p>"},{"location":"udep/components/#backend-systems","title":"Backend Systems","text":""},{"location":"udep/components/#systems","title":"Systems","text":"<p>Backend Systems or Logical Systems are the list of systems that the Unvired Process Agents will be communicating with. Backend systems include SAP, Salesforce, Oracle, Web Servers (REST/SOAP), Databases and other generic functional systems. Each backend system is created as a Logical System in the UDEP landscape. This allows the process agents to refer to these systems using their logical name and not the physical properties like IP address or hostname. This abstraction ensures that even if systems are replaced or migrated, only their properties need to be changed and all applications will continue to work unaffected. Backend system properties provide all the details that enable UDEP to connect to these systems.</p> <p>For any functionality or process that UDEP needs to enable, a Backend system needs to be created. For example to access ABAP function modules an SAP ABAP system needs to be created, to access a REST service a Web Server needs to be created.</p> <p>Technically Backend System properties consist of the type of System, IP address etc.  Systems that support additional authentication mechanisms such as OAuth are also to be maintained here,</p>"},{"location":"udep/components/#ports","title":"Ports","text":"<p>Backend Systems are made up of \"Ports\". Ports are synonymous with network ports and provide all the information for UDEP to determine how to connect to a Backend System. While Backend Systems detail which system to connect to (for example SAP ERP), Ports detail how to connect to these systems (for example RFC, Web Services etc).</p> <p>Technically Backend Port properties consist of the type of Port, network port number etc.</p>"},{"location":"udep/components/#functions","title":"Functions","text":"<p>Backend Functions are associated with a Backend Port. Web and Mobile Applications and other systems can invoke these functions that are defined in UDEP. The functions are a logical abstraction and act as the \"glue\" between the application in the browser or device and the backend system.   For e.g. CREATE_USER can be a function to create a user in a particular backend port/system that it is attached to.</p> <p>Technically Backend Functions detail out all the function properties such as the logical name of the function, the Java class or the ABAP BAPI name etc. Functions can be of type Application or System. System is reserved for use by the UDEP platform and customers should add and use only Application type of functions.</p>"},{"location":"udep/components/#frontends","title":"Frontends","text":""},{"location":"udep/components/#frontends-device-types-and-connectors","title":"Frontends (Device Types and Connectors)","text":"<p>Frontends are the list of device connectors that that the Unvired Process Agents can accept calls from and will be able to push messages to. Frontends know how to push messages to the mobile devices / applications. Frontends include Android Phones and Tablets, iPhone &amp; iPad, Windows Tablet, Browser and other external servers (machine to machine communication for integration scenarios).</p> <p>Similar to backend systems, Frontends are a logical abstraction of the different device types that UDEP can accept calls from and natively push data. Process Agents only need to indicate that the message is for a particular user(s) and UDEP ensures that the message is pushed to the user's mobile / web application in near real time.</p> <p>UDEP supports true push all devices. For iOS devices Apple Push Notification Service or APNS is supported, Android devices are reached via the Google Firebase Messaging Service (FCM), Windows tablets are supported via the Windows Notification Service and Browsers are supported via asynchronous push notifications that are browser independent.</p> <p>Note: Push notifications are usually not guaranteed to be delivered to the device by the underlying provider. Applications should therefore not make any assumptions regarding push message delivery and in high latency or poor networks build alternate mechanisms for delivery of data.</p>"},{"location":"udep/components/#users","title":"Users","text":""},{"location":"udep/components/#users_1","title":"Users","text":"<p>The user management in UDEP is handled via the Users module.  Unvired Users are more commonly referred to as Unvired IDs and can be of multiple roles / types.</p> Role Notes SUPER ADMIN Only one Super Admin is available for each company with User ID \"SA\". The \"SA\" user is created during the post installation phase for a root company and also when a child company is created. The \"SA\" user has wide ranging access rights on the system (you can think of \"SA\" as similar to \"root\" on Linux Systems or a Domain Admin in Windows Systems) and the password needs to be complex and secured safely. The \"SA\" user also has access to sensitive operations such as viewing of Message Data on production systems. . Store the \"SA\" password in a safe manner and do not share with others. ADMIN Admin users will be able to perform most operations in the UAC except for certain sensitive operations. Normal day to day administration needs to be performed by Admin users. Create an Admin user for each administrator as this helps audit the system later (administrator user actions are captured in the system Audit Log).  Create Admin users for your L2 support team. SUPPORT_ADMIN Support Admin users have access to restricted functionality.  They can manage users but cannot configure any systems or other configurations.  Create Support Admin users typically for your L1 support team. APPLICATION Application users are the users who will be using the applications on their respective devices and/or browsers. See the section on User Management to get more details on Application Users (also referred to as Unvired ID) and their administration. DEVELOPER Developer users have the same rights as Admin users and in addition can debug the process agents directly on the server. Developer User Authentication tokens are used for debugging process agents from the Unvired Eclipse Developer Plugin. More on this is explained in the Unvired Developer documentation."},{"location":"udep/configsteps/","title":"Configuration","text":""},{"location":"udep/configsteps/#configuration","title":"Configuration","text":""},{"location":"udep/configsteps/#configuration-steps","title":"Configuration Steps","text":"Task Goals Basic Configuration Login \u221a Login to the UAC and User Profiles Configure Companies and Plans \u221a Create, Edit companies\u221a Assign plans to companies and activate them Configure Logical Systems (Backend Systems) \u221a Configure SAP and other enterprise backend systems in the UDEP landscape. \u221a Configure OAuth for supported systems Configure Frontends (Device connectors) \u221a Configure different device types that can connect via the UDEP landscape. Configure Users \u221a Unvired Users\u221a Device Users \u221a Backend (enterprise system) users (optional)\u221a Federation IDs (optional) Configure Applications \u221a Define the functions that make up an application\u221a Assign and deploy applications\u221a Configure Application Properties\u221a SAML SSO Login Configure Libraries \u221a Define the functions that make up a Library\u221a Assign libraries to an application Configure Companies (Departments) \u221a Create new companies or departments to logically separate users, applications and data. Companies can be of type ROOT, PARTNER or CUSTOMER.\u221a Create plans and activate plans for companies (number of apps, devices, systems etc) Monitoring System Information \u221a System information including the number of UDEP nodes, heartbeat status (only visible to root company and not to all companies) Notifications \u221a Monitor Administrator notifications like SAP connection error etc. Message Monitoring \u221a Monitor Asynchronous messages (data pushed to device when available) \u221a Monitor Synchronous messages (on demand data requested synchronously by the device) Device \u221a Monitor device/users on a per device / application basis\u221a Keep track of when users connected, downloaded messages etc. Attachment \u221a Monitor attachments uploaded from device and downloaded to the device, check and discard cache contents REST API \u221a Monitor REST API calls made to the UDEP Reports \u221a Standard reports on user interaction with the UDEP Audit Log \u221a View the admin activities performed in UDEP Advanced Configuration System Properties \u221a Configure advanced system properties Scheduler \u221a Schedule periodic data requests for devices Transport \u221a Transport applications across UDEP landscapes\u221a Import &amp; Export applications and settings manually Email \u221a Email configuration\u221a Email templates Troubleshooting and Debugging Device Logs &amp; Data \u221a View device logs and data for trouble shooting"},{"location":"udep/configsteps/#navigation","title":"Navigation","text":"<ul> <li>All Configurations are accessed via the Wheel icon on the toolbar.</li> <li>The System Information and System Properties are also accessed via the toolbar.</li> <li>All Message Monitoring options are accessed via the hamburger icon.</li> </ul>"},{"location":"udep/explainer/","title":"Explainer","text":""},{"location":"udep/explainer/#udep-3-minute-explainer-video","title":"UDEP 3 Minute Explainer Video","text":""},{"location":"udep/glossary/","title":"Glossary","text":""},{"location":"udep/glossary/#glossary","title":"Glossary","text":"<p>Key terms that are used in/by the UDEP</p> Sl. Term Definition 1. Company / Domain UDEP is a multi-tenant platform.  Each tenant is identified by a Company ID (also called as Domain).  For e.g. the domain for Unvired Inc. is UNVIRED 2. SA SuperAdmin user who is automatically created for every company,  The SA user can perform all operations within a company and has unfettered access similar to a root account.  Use with care. 3. Users Users registered on the UDEP who can be Administrators, Developers or Application users.  Additionally users can have Frontend users (devices) attached to them.  They can also have backend users which refers to their individual credentials on these systems.  If the login to apps is via a different identity management system such as MS ADS they can also have Federation users attached. 4. Groups Groups of users who can be deployed applications to  se, run schedules for etc. 5. Backend System The systems that applications deployed in the UDEP connect to.  Some examples are SAP S4/HANA, SAP ECC, SFDC, databases like MySQL, MSSQL etc. 6. Backend Port The port that is configured on a system.  This is synonymous to a network port but in addition also identifies the service the port is configured for.  For e.g. RFC is a port on SAP systems and identifies both the port to connect to and that the protocol is SAP RFC.  Similarly HTTP(S) service on port 80/443 etc. 7. Backend Function A function that can be executed by a UDEP application.  Each function is provided by a Port and determines the type of function.  For e.g. an RFC function is provided by an SAP PORT that is available from an SAP Backend System.  Similarly a REST endpoint (function) is provided by a REST PORT on an HTTP(S) Web Server Backend System. 8. ME System ME is a special system in the UDEP landscape and refers to the system on which the UDEP platform is deployed and running.  All Process Agent Java functions are attached to the Java Port of the ME system. 9. Application An Application is the set of Functions that a Frontend (device or client) connects to for executing the required functionality. 10. Library A Library extends the functionality provided by an Application by adding more functions. 11. Application Properties Application Properties are a standard set of properties that can be configured for an application.  These are defined by UDEP and can be configured based on need.  For e.g. the output of the application (JSON or XML) can be controlled via an App Property. 12. Application Deployment This refers to the process of making applications available to users on the platform.  Administrators can deploy applications for users or teams. 13. Application Activation Once users login to the application via their credentials, the deployed application is marked as active on the specified device. 14. Process Agent Process Agent or PA is the binary Application that will be executed in the UDEP Java Runtime when a function is invoked,  The binary Jar file is obtained by compiling the Process Agent project in the Eclipse Modeler. All Process Agent functions are attached to the JAVA Port of the ME system. 15. Process Agent Settings These are Key-Value pairs that can be saved and accessed programmatically on the UDEP.  PA Settings can be App related or can be specific to the users accessing the application.  Custom configuration of an app can be stored as PA App Settings and user specific configuration and customization information can be stored as PA App User settings. 16. Frontend Refers to the devices or clients that the UDEP is aware of to receive incoming requests and to push messages to.  These include iPhone, iPad, Android Phones and Tablets, Windows Tablets, Browsers and other Servers. 17. Sync Requests (Messages) Synchronous or Sync refer to all the requests that are posted by the mobile and web applications to the UDEP platform synchronously for execution and receive the result of execution immediately. 18. Async Requests (Messages) Asynchronous or Async refer to all the requests that are posted by the mobile and web applications to the UDEP platform asynchronously for execution and receive an acknowledgement immediately upon queuing.  The request is subsequently processed and result is queued for delivery to the mobile devices. 19. REST Request Web Apps and other server integrations are executed on the UDEP by using REST APIs provided by UDEP.  These are then queued either Sync or Async based on the execution mode."},{"location":"udep/intro/","title":"Introduction","text":""},{"location":"udep/intro/#introduction","title":"Introduction","text":"<p>Unvired Digital Enterprise Platform (UDEP) is a web, mobility, offline, digitization and integration platform. UDEP can either be used in its totality as a multi-utilitarian platform or as a specific use case platform. The UDEP helps connect business processes and data between two or more end systems/devices.</p>"},{"location":"udep/intro/#architecture","title":"Architecture","text":""},{"location":"udep/intro/#use-cases","title":"Use Cases","text":"Scenario Details Mobile Application Development Platform Definition:  UDEP is a Mobile Application Development Platform that can be used to mobilize any business process from any enterprise system on any mobile device (Android, iOS, Windows, HTML5).Where? A chemical manufacturing company based in Houston has used UDEP to mobilize many business processes in Plant Maintenance and Warehouses on iPads. The customer uses offline mobile apps on iPads to access work orders, notifications inspection rounds, deliveries, compliance documents, and stock overview. Digital Platform Definition: UDEP enables digitization of documents, access to documents from anywhere (web, mobile), knowledge sharing, collaboration and data analytics helping customers convert to a Digital Enterprise. Paperless offices are a reality with UDEP.Where? An Oil and Gas company based in Canada has used UDEP to build an app that runs offline on Windows Tablets and as an online browser app also.  The codebase is identical for both platforms but uses the appropriate runtime/SDK from UDEP.  Integration with MS ADS ensures users login securely and access enterprise data at the office or on the move. Mobile Backend As A Service (MBaaS) or a Connector Framework Definition: UDEP offers many enterprise connectors to systems like SAP, SharePoint, Oracle, Databases, file systems and systems based on web services. UDEP works as a Mobile Backend As A Service (MBaaS) to expose enterprise system data/processes as REST services to external systems. The REST services can contain complex business logic. Where?  A retail company based in Houston has used UDEP to enable its custom retail software based on database stored procedures as REST services. The REST services expose delivery creation, inventory reconciliation, and new product addition. Schedulers in UDEP are used to pick the latest changes in the product information in the retail system, and relay it to the applications that use the product information. Offline and Conflict Resolution Framework Definition: UDEP offers a complete offline and conflict resolution framework for mobile apps. Mobile applications can use offline functionality to store data and submit later. Mobile applications can use conflict resolution to resolve data conflicts between enterprise systems and mobile devices.Where? A pharma company based in North America used UDEP to build a mobile application for warehouse management with offline access and resolve conflict with goods issue. Internet of Things (IoT) &amp; Server to Server Integration Platform Definition: UDEP enables data exchange between things and enterprise systems as well as between enterprise systems. UDEP can be the common hub for integration across mobile devices, things, and enterprise systems.Where? A utilities company based in New Zealand is using UDEP to integrate its GE Network Management System (NMS) with SAP ERP. The work orders that get registered in the NMS flow to SAP ERP and updates to the work orders in SAP ERP move to NMS via UDEP."},{"location":"udep/misc/","title":"Other Topics","text":""},{"location":"udep/misc/#miscellaneous","title":"Miscellaneous","text":""},{"location":"udep/misc/#transport-apps","title":"Transport Apps","text":"<p>It is recommended at the minimum run an Unvired Development Server and a separate Production Server (larger landscapes should run Development, Quality/Test and Production separately). Any process agents that are developed are first configured and tested on the development server and then deployed to the production server. In order to help quickly create these configurations across Unvired server systems, manual Import and Export of settings or automatic Transport of settings and application is permitted. Export of settings also helps to maintain a backup of the configurations.</p>"},{"location":"udep/misc/#transport","title":"Transport","text":"<p>The \"Transport\" menu option displays the Transport console. You can transport both the configuration and the Process Agent binaries automatically from Development to Quality and then on to Production. This allows an automated and safe mechanism to move applications across the landscape. The Transport tab displays a list of all the existing UDEP systems that are a part of the landscape.</p> <p>Note</p> <p>Transport requires REST API to be enabled.</p>"},{"location":"udep/misc/#add-system","title":"Add System","text":"<p>Click on the Add System button to add a new UDEP system into the landscape. Depending on the current system type (Development/Quality/Production) downstream servers can be configured. For e.g. Production can only be added to a Quality system. Enter the target system details and click on \"Validate and Add\".</p> <p>Once the credentials are validated the system will be added to the list. Please note that credentials are not stored and are used to validate only, administrators will be required to enter the credentials for each transport.</p> <p>Note</p> <p>You can only transport from the logged in COMPANY to the same COMPANY account in the other landscape.</p>"},{"location":"udep/misc/#edit-system","title":"Edit System","text":"<p>The systems can be selected and either modified or deleted as required.</p>"},{"location":"udep/misc/#transporting-applications-configuration","title":"Transporting Applications &amp; Configuration","text":"<p>Select the target system and click on the Transport button  to transport applications from one UDEP system to another. A list of applications that can be transported is now displayed.  Select the application and click Next. The target system credentials now need to be entered. Once validated the transport can be started. If the validation is successful, a confirmation is displayed.  Transport is permitted from Development to Test and Production and from Quality to Production only.</p> <p>Click on the Start button to start the transport. The progress is displayed and final confirmation. The target system has now the complete application and its binaries transported.</p>"},{"location":"udep/misc/#compare","title":"Compare","text":"<p>Selecting the target system and clicking on the Compare button enables administrators to compare applications and their configuration across systems. Once the comparison is complete a detailed report is displayed as below.</p> <p>Note</p> <p>Transport is recommended as compared to manual Export and Import.  However in firewall locked landscapes where there is limited access manual export/import can be used.</p>"},{"location":"udep/misc/#manual-export-settings","title":"Manual: Export Settings","text":"<p>The \"Transport\" menu option by default displays the configured transports. Select the Export tab and then select the application or applications that you want to export and click on the \"Export Selected Objects\" button.  This exports entries that have been selected The system will prompt for a password to encrypt and protect the exported file since sensitive settings may be present in the exported file. After export, the file can be immediately downloaded.</p> <p>Note</p> <p>If the password for the exported file is forgotten there is no way to recover it. </p> <p>Note</p> <p>As a best practice always export settings based on an Application. This allows archival of these settings logically and also allows to recreate an application from scratch or to update an existing application easily.</p>"},{"location":"udep/misc/#manual-import-settings","title":"Manual: Import Settings","text":"<p>The \"Transport\" menu option by default displays the configured transports. Select the Import tab to manually import applications.  Upload a previously exported and downloaded transport file and enter the password to import.  The following can be imported:</p> <ul> <li>Logical (Backend) systems</li> <li>Backend ports</li> <li>Functions</li> <li>Frontends</li> <li>Applications</li> <li>Groups</li> <li>Users</li> <li>Choose the file to be imported (previously exported as explained in the earlier export settings section from a different UDEP system) or drag and drop it in the browser.</li> <li>Click on \"Import\" button, enter the password on prompt. If the password is correctly imported all the settings will be imported and a final confirmation displayed.</li> </ul> <p>Note</p> <p>On production systems only SA can perform manual export and import for security reasons</p>"},{"location":"udep/misc/#unvired-modeler","title":"Unvired Modeler","text":"<p>When development is done using the Unvired Modeler in Eclipse, transport to Development is handled within the Eclipse Modeler itself.  Transport as described above is primarily required to move Applications &amp; Configuration to Quality and Production from Development.</p>"},{"location":"udep/misc/#scheduler","title":"Scheduler","text":"<p>UDEP Server can refresh data periodically by invoking process agent functions on a schedule and pushing the data to a group of users. To configure these, click on the \"Scheduler\" menu.</p>"},{"location":"udep/misc/#add-scheduler","title":"Add Scheduler","text":"<p>The \"Schedulers\" tab displays all the schedules that are currently configured in the Unvired server. You can add a new schedule and edit or delete the selected schedule to suit your requirements.</p> <p>Click on \"Add\" to add a new schedule.</p> <ul> <li>Choose the type of schedule</li> <li>Repetitive \u2013 Repeat execution at every hour at the minute specified. For e.g. at 11:05, 12:05 etc</li> <li>Specified \u2013 Repeat execution at the specified times (more flexible)</li> <li>Choose the \"Group\" for which you are creating the schedule. If there are no existing groups you can add a group by following the details in the group section.</li> <li>Choose the application and function to execute periodically.</li> <li>Use Client Credentials \u2013 If the function being scheduled to run requires credentials to be propagated by the client, select this option. UMP will queue a message to the client to send the credentials for execution in this case. If not selected, the function will be executed directly on the server with credentials that are configured either at the Port level or at the backend user.</li> <li>Run on selected days only \u2013 If the schedule has to be execute only on selected days (for example on working days Monday to Friday only), select this option and the required days</li> <li>Ignore message \u2013 If this option is set, when the function is executed and the message to the device is to be queued a further check is made to ascertain if the message from the previous run is still pending. If the message is pending then the message is ignored and the new message queued. If the option is switched off then the message is queued in addition to the older message.</li> <li>Run this scheduler for the individual user \u2013 If the function that is being executed returns the same data for all the users in the group then this option can be unchecked. Only one call for the entire group is then made. However if the function returns specific data for each user in the call then this option has to be selected so that one call for each user is then made.</li> </ul> <p>Note</p> <p>After adding / editing schedules, make sure the scheduler is running by clicking on the animated icon to Start/Stop.</p>"},{"location":"udep/misc/#admin-notifications","title":"Admin Notifications","text":"<p>The UDEP generates notifications automatically for administrators whenever system errors occur. For example if an SAP connection fails a notification is generated automatically. The process agents can also generate notifications for administrators using the SDK.</p> <p>These notifications are recorded in the \"Notifications\" monitor. Additionally if the administrator is equipped with the \"Unvired Administrator\" mobile application, these notifications will be \"pushed\" to the device so the administrator is aware of the errors and can take action immediately.</p> <p>The administrators can also login to the UAC and click on the \"Notifications\" menu option in the navigation tree to display all the pending notifications.</p> <p>Note</p> <p>Notifications can only be generated for Administrators and not for the Super Admin (SA)</p>"},{"location":"udep/misc/#notification-configuration","title":"Notification Configuration","text":"<p>The UDEP generated notifications are sent to only those administrators who have subscribed to it. The different categories of notifications are:</p> <ul> <li>UDEP Database error \u2013 Any errors due to UDEP system database.</li> <li>Backend Connection error \u2013 Any errors due to connectivity or other technical failures of the backend systems.</li> <li>Frontend error \u2013 Any errors due to frontend failures (push etc)</li> <li>Technical error \u2013 Any other technical errors</li> <li>Process Agent error \u2013 Any errors that are notified by the process agent</li> <li>Miscellaneous error \u2013 All other errors</li> </ul> <p>The method to subscribe to notifications is as follows:</p> <ul> <li>Create a group and add the administrators who are to get the notifications to that group. Any number of groups may be created.</li> <li>Click on the \"Recipient\" icon for the selected category. - Select all the groups who are to be notified and save.</li> <li>Choose the level for the notifications desired. The options available are to notify only Error or Error and Warnings.</li> <li>Choose the type of notification desired. The options available are Mail, Notification (Push to Unvired Administrator Application) or Mail and Notification. If notification is not desired leave the combo at \"Select\".</li> </ul>"},{"location":"udep/misc/#email-configuration","title":"Email Configuration","text":"<p>All notifications from the Unvired server are sent via Email. You can configure the email settings by clicking on the \"Email\" menu option in the navigation tree. Unvired server supports email notifications via any SMTP server including SSL enabled email services such as GMail (Google Apps also) and Amazon Simple Email Service.</p> <p>The required configurations are:</p> Property Details Name sent as Set the email sender's name here Mail sent as Set the email sender's email here SMTP Host IP address or host name of the SMTP server SMTP Port SMTP Port number Use SMTP Authentication If the SMTP server being configured requires authentication before any email is sent then set this option to \"YES\" else to \"NO\". SMTP User User name for SMTP authentication SMTP Password Password for SMTP authentication Use Secure Connection If the server is a standard SMTP server set to No, else if SSL or TLS (like GMail) is required please set it accordingly. Send Test Mail Set the email id to send a test mail <p>Note</p> <p>Send test mail will only work after settings are saved. Remember to save the settings before trying to test the mail sending.</p> <p>Note</p> <p>Email settings can be configured for each company. If a company does not have email configuration, the Root company's email configuration will be used.</p>"},{"location":"udep/misc/#email-templates","title":"Email Templates","text":"<p>Email templates can be configured in UDEP for use by both the platform and the applications.  Access the Email Configuration menu option to navigate to the templates section.</p> <p>Message</p> <p>Configure each of the messages for system events here.  For e.g. the Create User message is used to mail a new user about their user ID being created in the system.  The standard template (explained below) is used to send these messages.  The message will be sent only if it is enabled.</p> <p>Standard Template</p> <p>Under the \"Template\" tab, the standard template can be configured.  This template is used for all system generated and application generated messages and is common across all applications.  The standard template is used for all predefined messages (see above)</p> <p>Other Templates</p> <p>When applications require their own templates for messages that are sent for individual application related events, multiple custom templates can be defined.  Each template is identified with a template name and is associated with an Application, the subject to use and additionally the message.</p> <p>Variable Substitution</p> <p>The template can have variables (placeholders) that are substituted at run time with the corresponding values.  Variable are included in two variants, as $variable or as ${variable}. The difference between the two is that in the case of $variable the value is substituted directly and in ${variable} the value is URL encoded before it is substituted.  For e.g. if the variable is part of a URL (that is included in the template) then it is recommended to use the ${variable} variant so that the URL is safely encoded.</p> <p>Supported substitution variables are:</p> Property Variable Details 1. $username The Unvired ID or user name of the user 2. $firstname The user's first name 3. $lastname The user's last name 4. $authkey The system generated auth token (or private access token) 5. $password The system generated password (if it has to be included in email) 6. $link or $linkbutton (deprecated) The link that is auto generated for resetting password etc. 7. $verifyToken or $resetToken (deprecated) The token to reset password etc. 8. $application The application the user is using 9. $email The user's email ID 10. $company The company (or domain) the user belongs to 11. $message or $bodyStart (deprecated) The actual message 12. $subjectDetails The subject of the email (in case it needs to be included in the message)"},{"location":"udep/misc/#system-properties","title":"System Properties","text":"<p>The \"System Properties\" icon displays and allows to configure advanced properties of the Unvired Server. Any changes made to the system properties should be done carefully as it can hamper the working of the system. The Root company SA user will be able to configure a lot more properties than the other companies. The screenshot below displays the Root user login.</p>"},{"location":"udep/misc/#general","title":"General","text":"<p>The system properties that are read only are displayed in the first tab called General for information.</p> <ul> <li>Application Server \u2013 The host name or the IP address of the Unvired server</li> <li>UDEP Home \u2013 The home folder for the Unvired server. All process agents, related data and other temporary files of the Unvired server are stored in this folder.</li> <li>Company Data Folder \u2013 The private folder where the root company's data is stored (configured during post installation)</li> <li>Installation Number \u2013 System assigned installation number</li> <li>System ID \u2013 System assigned identifier</li> <li>Security Level \u2013 Unvired server can be configured to operate in different security levels.</li> <li>100 \u2013 HTTP with authentication. This should be used for development and test sy class=\"unvired\"stems only</li> <li>200 \u2013 HTTPS with authentication. This is the default operating mode for production servers</li> <li>300 \u2013 HTTPS with authentication but with restricted admin access. This is high security mode (for compliance with requirements of HIPAA etc.) wherein Super Administrator login is highly restricted.</li> <li>Type config version \u2013 The version of the configuration file currently installed.</li> </ul>"},{"location":"udep/misc/#custom","title":"Custom","text":"<ul> <li>Password policy \u2013 The user password policy is set here. The available options are:</li> <li>No conditions \u2013 Should be used only on development or quality systems.</li> <li>Alphabets, Digits &amp; Special characters - Password needs to contain alphabets (upper and lower case), digits and special characters and of minimum length of 8.</li> <li>Alphabets &amp; Digits \u2013 Password needs to contain alphabets (upper and lower case) and digits and of minimum length of 8.</li> <li>Alphabets - Password needs to contain alphabets (upper and lower case) and of minimum length of 8.</li> <li>Two factor authentication for Login \u2013 If this is enabled, the Admin Cockpit login is further protected with a two factor token generated by Google Authenticator (or other compliant apps like Authy).</li> <li>Two factor authentication for Data \u2013 If this is enabled, the data view for SA user on an UDEP production instance is further protected with a two factor token generated by Google Authenticator (or other compliant apps like Authy).</li> <li>Reload Type Configuration \u2013The types of Systems and Frontends supported by UDEP is determined by a \"Type Configuration\".  This configuration is embedded in the platform and may be updated from time to time.  The updates may be to do with new configuration parameters that have been made available with UDEP system connectors or new systems that are now supported etc.  Only SA user of Root company has access to this information and can update the type configuration. Click on the button to reload the configuration with the new values. This is typically required when upgrading UDEP versions.</li> <li>Clear UMP Cache - For performance reasons UDEP caches user and application information. To clear this cache click on the button and confirm. This does not cause any harm to the system and can be used safely.  The cache will be automatically rebuilt.</li> <li>Reprocess pending messages - In the unlikely event that UDEP has been restarted while users requests where being received, these requests would stay in the processing or pending state.  Clicking on this button will initiate a repost of all these messages so that they can be processed fully.  Note that its possible that these messages have already been processed at backend and only the UDEP processing didn't complete, so use with care.</li> </ul> <p>After an upgrade, on SA user login the platform will automatically prompt to import any Type Configuration changes.  Click the button to import and then wait for the confirmation message. -info}</p> <p>The other options are:</p> <ul> <li>Support Login \u2013 Available only if Production UDEP set up with security mode 300. In this mode, the Unvired* (SA Support user) can only login to the system during the exact duration configured.</li> <li>Debug \u2013 Available only if Production UDEP. In this mode, debug of process agent functions is allowed only during the exact duration configured.</li> <li>Run Mode \u2013 Available on all landscapes of UDEP. Set the Run Mode to Halted to temporarily disallow REST API and Mobile calls to the platform. (Running calls are not affected, only future calls are prohibited). The configured message will be returned to the caller.</li> </ul>"},{"location":"udep/misc/#plan-details","title":"Plan Details","text":"<p>Displays the currently active plan for the company.</p>"},{"location":"udep/misc/#personalization","title":"Personalization","text":"<p>Click on the \"Personalization\" tab to set up some personalization options for your login.</p> <ul> <li>Rows to display \u2013 The maximum number of rows to display in tables.</li> <li>Start Page \u2013 The page to display after login</li> <li>Upload your profile picture</li> </ul>"},{"location":"udep/misc/#file-explorer","title":"File Explorer","text":"<p>Click on the \"File Explorer\" tab to display the UDEP Home folder for backup or for restoring / working with the file system in case of any issues. Please note that this backup is not a replacement for a full server backup as detailed in the Unvired Mobile Platform \u2013 Backup Guide. This is a simple means to back up the security key, license key, process agent files etc. to recover from a loss of these files. This option is enabled only if the administrator login is \"SA\".</p> <p>In order to download a backup, drag the required files and/or folders to the cart. A \"Make Zip\" button is now enabled. Click on the Make Zip button to zip all files selected and then download using the link displayed. Please safeguard the files (especially the UNI_Shared.key file as the data is encrypted using this key and should not be compromised) in a secure location for reuse in case of disaster.</p>"},{"location":"udep/misc/#system-information","title":"System Information","text":"<p>This screen displays the system information snapshot along with the health of the system.  The information displayed is:</p> <ul> <li>Database - Type of database used with this UDEP (MySQL, MSSQL, Oracle, PGSQL, H2) and its connection status</li> <li>Redis HA server \u2013 Redis availability details (Redis Sentinel, Master and Slaves)</li> <li>Vault - For higher security requirements like HIPAA etc., optionally a Vault server can also be configured in the landscape to store and provide the credentials.</li> <li>UDEP Nodes and Heartbeat \u2013 The number of UDEP nodes in this landscape and the heartbeat information</li> <li>Current Instance \u2013 In a multi instance landscape, the current instance information is displayed here along with connectivity to Redis and the Quartz Scheduler run status</li> </ul>"},{"location":"udep/misc/#reports","title":"Reports","text":"<p>The \"Reports\" menu displays a simple report with details of the number of messages sent by a user, the amount of data transmitted and received etc. can be displayed. The report can be generated for all users or a selected user for a time duration.</p> <p>Note: Custom reports are planned and not available.</p>"},{"location":"udep/misc/#export-data","title":"Export Data","text":"<p>Any list of data that is displayed in the UDEP can be exported to Excel format. For e.g from the list of applications click on the Excel icon at the bottom of the list. A list of columns that can be exported are displayed. Select the columns to export. If the \"Select All Pages\" option is checked then all rows (both displayed and not displayed) will be exported. Click on \"Download in Excel Format\" to now download the file.</p>"},{"location":"udep/misc/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":""},{"location":"udep/misc/#helpful-keyboard-shortcuts","title":"Helpful Keyboard Shortcuts","text":"<p>The Unvired Admin Cockpit can be used with keyboard shortcuts to quickly navigate across options. Type Alt+M to open the menu and Alt+H to show all the short cuts. </p> <p>The shortcuts are:</p> Shortcut Details Alt + M Display the menu Alt + H Display all the shortcuts once the menu is open Alt + R Refresh a table Alt + U Users Alt + F Frontends Alt + B Backends Alt + L Scheduler Alt + Y System Properties Alt + T Transport Alt + N Notifications Alt + S Sync Messages Alt + A Async Messages Alt + V Device Alt + C Attachments Alt + E REST API Alt + O Logout"},{"location":"udep/misc/#knowledge-base","title":"Knowledge Base","text":"<p>In addition to this guide, Unvired publishes Upgrade and other information in the secure Knowledge Base,  Please access the KB at https://support.unvired.com/projects/kb/knowledgebase/articles for more information.</p>"},{"location":"udep/monitor/","title":"Monitoring","text":""},{"location":"udep/monitor/#monitoring","title":"Monitoring","text":"<p>Monitor message flow</p>"},{"location":"udep/monitor/#message-monitoring","title":"Message Monitoring","text":"<p>Message monitoring is the most important activity that is often performed by administrators in the Administration Cockpit. A record of every message that flows into and out of the Unvired platform is maintained for trouble shooting, debugging, checking utilization of the platform and for various other reports. An auto-archiver is also provided to ensure that old messages do not affect the platform's performance.</p>"},{"location":"udep/monitor/#message-processing","title":"Message Processing","text":"<p>Different categories of messages are saved in the platform depending on the mode of usage. They are:</p>"},{"location":"udep/monitor/#asynchronous-messages","title":"Asynchronous Messages","text":"<p>These are messages that are submitted by the mobile application in the background for processing by the Unvired server. The client sends the message and on successfully submitting it to the Unvired server disconnects without waiting for the final business result. Once the Unvired server posts the message to the corresponding backend systems and processes the message, the final result is queued for delivery to the mobile device. The mobile application is notified when a message is ready for delivery.</p> <p>Each message that is held in the Unvired platform is in a specific state and identified by the following status:</p> <ul> <li>Queued \u2013 Queued for processing.</li> <li>Ready \u2013 Message is ready to be delivered to the device.</li> <li>Delivered \u2013 Message successfully delivered and acknowledged by the device.</li> <li>Failed \u2013 Message failed.</li> <li>Ignored \u2013 Message was ignored by the system. (This is only for pull / scheduled messages wherein the older message was not downloaded by the device but in the meantime newer data was available and the system ignores the older message)</li> <li>Discarded \u2013 Message was manually discarded by the administrator in the Administration Cockpit.</li> <li>Held for Admin Processing \u2013 Messages that errored out on the backend system can optionally be held on the UDEP so that administrators can login and update the data and resubmit to the backend system. This is useful wherein users require an \"upload and forget\" user experience and don't want to be bothered about errors on SAP or other backend systems.</li> </ul>"},{"location":"udep/monitor/#synchronous-messages","title":"Synchronous Messages","text":"<p>These are messages that are submitted by the mobile application in the foreground for processing by the Unvired server. The client holds the connection until a final result is available from the Unvired server after processing by all corresponding backend systems. The user will not be able to work with the application during this time and it blocks the user interface. Once the result is delivered to the mobile application and processing, the user will be able to work with the application again.</p>"},{"location":"udep/monitor/#rest-api-messages","title":"REST API Messages","text":"<p>These are messages that are submitted by the external application using the REST APIs exposed by the UDEP. The external application can submit requests to be executed by UDEP in foreground or background.</p>"},{"location":"udep/monitor/#message-monitoring_1","title":"Message Monitoring","text":""},{"location":"udep/monitor/#asynchronous-requests","title":"Asynchronous Requests","text":"<p>The \"Asynchronous Messages\" menu option in the navigation tree displays the Asynchronous Message Monitor.</p> <p>The various criteria for searching messages are:</p> <ul> <li>All \u2013 Show all messages</li> <li>Application \u2013 Search for all messages for a particular application. You can additionally filter based on a function of that application.</li> <li>Conversation ID \u2013 Each message is identified by a unique Conversation ID. If the conversation ID is known enter the ID to navigate directly to that message. (The ID can be obtained from the Sent messages view in the mobile application or from the debug logs)</li> <li>Delivery Status \u2013 Search for the messages based on the message status (explained above)</li> <li>Frontend User \u2013 Search for the messages for a particular device / user</li> <li>On Hold \u2013 Search for the messages that have errored out and are being held for processing by the administrators.</li> <li>Post Time \u2013 Enter a time interval to search for messages</li> <li>Tag1/Tag2 \u2013 Search for the messages based on tags set by the process agents.</li> </ul> <p>The different fields that are displayed for each message are:</p> <ul> <li>Post Time \u2013 The date / time on the server when the message was received</li> <li>Application \u2013 The application for this message</li> <li>Function Name \u2013 The function in the process agent that was executed for this message</li> <li>Flow \u2013 The further calls to the backend systems that are made by the PA functions can be traced here.</li> <li>Conversation ID \u2013 The conversation ID for this message</li> <li>UDEP Node \u2013 In a multi instance UDEP installation, the individual node that processed the request is listed here</li> <li>Reference \u2013 The external reference that was (optional) supplied to the request by the REST API.</li> <li>Message Class \u2013 The message class \u2013 Can be of type Application or System.  If the message class is \"Application\" the message subclass can be of type:<ul> <li>Business Entity data \u2013 Data exchanged in the Unvired format (standard).</li> <li>Custom \u2013 Custom application defined format.</li> </ul> </li> <li>Message Subclass - The message subclass.  If the message class is \"System\" the message subclass can be of subtype:<ul> <li>Authenticate \u2013 User authenticated from the mobile application</li> <li>Activation \u2013 Mobile application was activated for the user</li> <li>Backend Authenticate \u2013 User's backend credentials on the mobile device were authenticated on the backend system</li> <li>Ping \u2013 Ping message was received from the mobile device and responded to by the server to test connectivity from device to server</li> <li>Log \u2013 Log message request sent to device / received log from the device</li> <li>Data dump \u2013 Data export request sent to device / received from the device</li> <li>Initiate pull \u2013 Data download request sent to device</li> <li>Push Notification \u2013 Device informs server of the push notification id to use</li> <li>Reset \u2013 Reset data request sent to device</li> <li>Wipe \u2013 Wipe data request sent to device</li> </ul> </li> <li>Message Type \u2013 The message type. This can have the following values<ul> <li>RQST \u2013 Request / response type where the mobile application made a request and (optionally) received a response in return</li> <li>PUSH \u2013 Push type where an external system is pushing a message to the mobile device</li> <li>PULL \u2013 A schedule pull of data from the backend system queued for delivery to the mobile device</li> <li>QUERY \u2013 Typically a search query that was executed by the device</li> </ul> </li> <li>Unvired User \u2013 The Unvired user ID</li> <li>FE User \u2013 The frontend device / user for whom the message is (to be) delivered</li> <li>Delivery time \u2013 The date/time the message was delivered to the mobile device</li> <li>Delivery status \u2013 The message status as explained earlier</li> <li>IP \u2013 Device IP address</li> <li>Tag1, Tag2 \u2013 The optional tags to the messages added by the process agent</li> <li>Backend result time \u2013 The date / time when the process agent responded with the result (the difference between the post time and - backend result time is the approximate lag between when a message was received from the device and when the backend system(s) actually returned with the result from the process agent)</li> <li>Total Time \u2013 The total time between start of call to availability of result</li> <li>Backend result status \u2013 Indicates the process agent result state \u2013 Success or Error. Please note that on development systems this status can also be \"Test\" to indicate that the message was a response when the test mode was enabled. Additionally an overridden function call is indicated by an \"O\" in the status.</li> <li>Message In size \u2013 The input message size in bytes</li> <li>Message Out size \u2013 The output message size in bytes</li> <li>Message \u2013 The actual message displayed as below</li> <li>On Hold \u2013 Held on UDEP for further processing by Administrators</li> </ul>"},{"location":"udep/monitor/#synchronous-requests","title":"Synchronous Requests","text":"<p>The \"Synchronous Messages\" menu option in the navigation tree displays the Synchronous Message Monitor. The various criteria for searching messages are:</p> <ul> <li>All \u2013 Show all messages</li> <li>Application \u2013 Search for all messages for a particular application. You can additionally filter based on a function of that application.</li> <li>Conversation ID \u2013 Each message is identified by a unique Conversation ID. If the conversation ID is known enter the ID to navigate directly to that message. (The ID can be obtained from the Sent messages view in the mobile application or from the debug logs)</li> <li>Frontend User \u2013 Search for the messages for a particular device / user</li> <li>On Hold \u2013 Search for the messages that have errored out and are being held for processing by the administrators.</li> <li>Post Time \u2013 Enter a time interval to search for messages</li> <li>Tag1/Tag2 \u2013 Search for the messages based on tags set by the process agents.</li> </ul> <p>The different fields that are displayed for each message are:</p> <ul> <li>Post Time \u2013 The date / time on the server when the message was received</li> <li>Application \u2013 The application for this message</li> <li>Function Name \u2013 The function in the process agent that was executed for this message</li> <li>Flow \u2013 The further calls to the backend systems that are made by the PA functions can be traced here.</li> <li>Conversation ID \u2013 The conversation ID for this message</li> <li>UDEP Node \u2013 In a multi instance UDEP installation, the individual node that processed the request is listed here</li> <li>Message Class \u2013 The message class \u2013 Can be of type Application or System</li> <li>Message Subclass \u2013 As defined for Asynchronous messages</li> <li>Message Type \u2013 The type of message</li> <li>Unvired User \u2013 The Unvired user ID</li> <li>FE User \u2013 The frontend device / user for whom the message is (to be) delivered</li> <li>IP \u2013 Device IP address</li> <li>Tag1, Tag2 \u2013 The optional tags to the messages added by the process agent</li> <li>Backend result time \u2013 The date / time when the process agent responded with the result (the difference between the post time and backend result time is the approximate lag between when a message was received from the device and when the backend system(s) actually returned with the result from the process agent)</li> <li>Total Time \u2013 The total time between start of call to availability of result</li> <li>Backend result status \u2013 Indicates the process agent result state \u2013 Success or Error. Please note that on development systems this status can also be \"Test\" to indicate that the message was a response when the test mode was enabled. Additionally an overridden function call is indicated by an \"O\" in the status.</li> <li>Message In size \u2013 The input message size in bytes</li> <li>Message Out size \u2013 The output message size in bytes</li> <li>Message \u2013 The actual message displayed as in the Async message example above</li> <li>On Hold \u2013 Held on UDEP for further processing by Administrators</li> </ul>"},{"location":"udep/monitor/#rest-api-requests","title":"REST API Requests","text":"<p>The Unvired Mobile Platform can also be used by external systems using the REST API. All calls to the RESP API are logged and displayed in the REST API Log monitor.</p> <p>The logs can be searched based on:</p> <p>The API executed (Refer the REST API document for the list of APIs supported for external system access) Depending on the API chosen further options are available for search. - Application, additional filtering on the function executed is possible - Conversation ID - External Reference - Master User - Post time interval</p> <p>The messages displayed are as follows:</p> <ul> <li>Post Time \u2013 The date / time on the server when the message was received</li> <li>Application \u2013 The application being accessed</li> <li>API Function\u2013 The API function that was executed for this message (for more details refer the REST API document)</li> <li>User \u2013 The Unvired or Master user used for execution</li> <li>API \u2013 The REST API accessed</li> <li>Category \u2013 The category within the REST API (for e.g. Authenticate etc.)</li> <li>Execute Function \u2013 If the API called is Execute, the function name is listed here.</li> <li>Message Type \u2013 The message subclass can be of type:<ul> <li>Business Entity data \u2013 Data exchanged in the Unvired format or iBXML for short.</li> <li>Custom XML \u2013 Custom application defined format.</li> </ul> </li> <li>HTTP Verb \u2013 POST, GET etc</li> <li>HTTP Status Code \u2013 The REST API HTTP result code, for e.g. on success return code will be 200</li> <li>Conversation ID \u2013 The conversation ID for this message</li> <li>External Reference \u2013 The external reference provided for this message</li> <li>IP Address \u2013 IP address of the caller</li> <li>Message In size \u2013 The input message size in bytes</li> <li>Message Out size \u2013 The output message size in bytes</li> <li>Message Details \u2013 The actual message is displayed</li> </ul>"},{"location":"udep/monitor/#message-types","title":"Message Types","text":"Message Type Message Sub-type Description 4000 Authentication type messages 100 Authenticate to UDEP 200 Activate application 300 Authenticate to a Backend System 400 Change Password 500 Forgot Password 600 For later use 700 Request for a one time use login token to authenticate without password 5000 System Wipe 0 Wipe the application and framework database.  Removes all access for user to device data via the application. 8000 Application messages 600 Standard XML or JSON from/to UDEP 700 Custom XML or JSON from/to UDEP 800 Standard XML or JSON data pushed from external system 900 Custom XML or JSON data pushed from external system 9000 System messages 100 Ping device or server (bi-directional message) 200 Request device log 210 Reset device log 220 Set device log level to ERROR 230 Set device log level to DEBUG 300 Request device data dump 400 Request initial data from UDEP 500 UDEP Framework settings for device 600 Application settings for device 610 Push notification registration 700 Reset application data 800 Activation message with framework settings 900 System error 1000 System information"},{"location":"udep/monitor/#request-types","title":"Request Types","text":"<p>The device can make requests of different types to the server and the handling is different in each case.</p> Request Type Description RQST Typical Request response message.  Device sends the request to the UDEP for processing and server response is sent back to device.  In Async mode device will await the response and will process the response as and when it is available. QUERY Device sends a request to the server for which may or may not have a response.  Device only expects an optional response in this case. PULL Typically master data from server is sent to the device as a PULL message.  This will Add/Modify/Delete the existing data based on the action that is returned in the data.  Data that is already on the device but not in the current message will be left unaltered. PULL_D Pull with delete.  This will delete all the existing data on the device for all the business entity types present in the message.  The data is then directly imported. PUSH Data that is pushed automatically from the server and sent to the device.  The data is processed based on the action that is specified in the data itself."},{"location":"udep/monitor/#device-monitoring","title":"Device Monitoring","text":"<p>The UDEP records every communication from the mobile device to the UDEP server and vice versa. All these messages can be viewed in the Async and Sync message monitor. The Device Monitor offers a simplified view of device interaction. For eg. if an administrator needs to quickly check when was the last communication from the device for a particular user or when was the last instance when they downloaded a message etc can be determined very quickly.</p> <p>The fields displayed are:</p> <ul> <li>Last Access Time \u2013 The last time the device contacted the UDEP for any communication.</li> <li>Last Download Time \u2013 The last time the device downloaded messages that were queued and waiting for the user.</li> <li>Master User \u2013 The Unvired ID of the user.</li> <li>Front end user \u2013 The device identifier of the user.</li> <li>Application \u2013 The application name.</li> <li>IP \u2013 The IP address of the device.</li> <li>Activation Time \u2013 The activation time of the application.</li> <li>Call Type \u2013 The last call type, Sync or Async.</li> <li>Application Version \u2013 The version of the mobile application.</li> <li>Framework Version \u2013 The version of the mobile framework.</li> <li>Update Date \u2013 The date / time when the mobile application registered the version with the server (the first time ever)</li> <li>Device OS \u2013 iOS 9, etc</li> <li>Device Type \u2013 iPad mini 2G (WiFi), Motorola etc</li> </ul> <p>Selecting a particular user permits the Administrator to perform a few simple operations:</p> <ul> <li>If Location tracking is enabled, clicking on Show Maps or Show Location brings up a Google Map with the device located on it.</li> <li>Clicking on Actions permits the administrator to perform a number of administration tasks as detailed in the Deployment tasks section earlier.</li> </ul>"},{"location":"udep/monitor/#attachments","title":"Attachments","text":"<p>The UDEP provides the required support for handling attachments or files in a very easy manner. Attachments can be uploaded from the device to the attachment cache and then associated with other business data or downloaded to the device. Download can be automatically initiated by the device or can be on demand.</p> <p>Similar to the Async and Sync message monitor the list out all the message interactions between UDEP and mobile application, the Attachment Status log displays all attachment related interactions.</p> <p>The monitor consists of two tabs.</p> <ul> <li>Attachment Cache \u2013 Lists all attachments (Downloaded and Uploaded) that are present in the UDEP cache currently.</li> <li>Attachment Status \u2013 Lists all attachment related interactions that have been performed and their status.</li> </ul>"},{"location":"udep/monitor/#attachment-status","title":"Attachment Status","text":"<p>The Attachment Status lists all the attachment related transactions that have been performed. The fields displayed are:</p> <ul> <li>Direction \u2013 Upload to UDEP or download from UDEP</li> <li>Application Name \u2013 The application that initiated the attachment</li> <li>Master User\u2013 The Unvired ID of the user.</li> <li>Front end user \u2013 The device identifier of the user.</li> <li>Start Time \u2013 The date/time the attachment transaction was initiated</li> <li>End Time \u2013 The date/time the attachment transaction was completed</li> <li>Filename \u2013 The file downloaded</li> <li>Tags \u2013 Tags associated with the attachment</li> <li>Status \u2013 The status of the transaction, COMPLETED or FAILED</li> </ul>"},{"location":"udep/monitor/#device-logs-data","title":"Device Logs &amp; Data","text":"<p>Whenever device logs and/or data are sent to the server, they are available for viewing by clicking on the \"Device Logs and Data\" menu option in the navigation tree. The list shows all logs and data received from the devices. Click on the details button to display the data and logs. You can additionally delete the selected log or data dump, delete all of them and refresh the list to view data or logs that have been received after the list was displayed.</p>"},{"location":"udep/monitor/#audit-logs","title":"Audit Logs","text":"<p>Audit logs keep track of all important changes that have been made to the system, messages, configuration etc. by administrators.</p> <p>The logs can be searched on:</p> <ul> <li>Administrator user name</li> <li>Action type (type of action performed)</li> <li>Time</li> </ul> <p>The messages displayed are as follows:</p> <ul> <li>User name \u2013 The administrator user who performed the operation</li> <li>Date / Time \u2013 The date / time the action was performed</li> <li>Action Type \u2013 The different actions that have been performed. The actions are:<ul> <li>Admin User \u2013 All activities like administrator login and logout.</li> <li>Applications/Libraries \u2013 All changes and deployment activities related to applications and libraries.</li> <li>LogicalSystem \u2013 Changes related to backend configuration.</li> <li>BackendUser \u2013 Changes related to backend user configuration.</li> <li>Frontends \u2013 Changes related to frontend configuration.</li> <li>FrontendUser - Changes related to frontend user configuration.</li> <li>GlobalProperty \u2013 Changes related to global system configuration.</li> <li>Functions \u2013 Changes related to function configuration.</li> <li>Groups - Changes related to group configuration.</li> <li>Messagess \u2013 Changes related to messages discarded etc.</li> <li>Port \u2013 Changes related to port configuration.</li> <li>Schedulers, Repetitive Scheduler, Specified Scheduler \u2013 Changes related to scheduler configuration.</li> <li>Users \u2013 Changes related to Unvired user configuration.</li> </ul> </li> <li>Action Sub type \u2013 Further categorization of the action performed. For example Administrator's login and logout activity are additionally categorized here</li> <li>Action Message \u2013 Detailed message regarding the action performed</li> <li>Entity name \u2013 Technical details regarding the technical object on which the action was performed. In cases where the Conversation ID is recorded the administrators can refer to that. All other IDs recorded here are for Unvired support purposes.</li> <li>IP Address \u2013 The IP address of the computer used to access the UAC.</li> </ul>"},{"location":"udep/monitor/#troubleshooting","title":"Troubleshooting","text":"<p>The various message monitors and logging capabilities provided by the platform can be used to troubleshoot the platform.  Typical issues confronting a UDEP Administrator are:</p> <ul> <li>Users cannot login to the application.</li> <li>Users are unable to submit data to the server or download data.</li> <li>Users are getting errors on submission of data to the server.</li> <li>Push notifications are not working.</li> <li>Exceptions on the server or client.</li> <li>UAC is not responding.</li> </ul> <p>The issues are typically related to network issues in reachability of the UDEP server.  If this has been ruled out, the administrator can use the monitoring tools as follows:</p> <ul> <li>View the Device Monitor to check when the device last connected to the server, what is the model of the device and the software version, version of the App installed, was it updated recently.  This will give a fair idea on whether the device is establishing connections or not. </li> <li>The Admin can queue a PING request to the device and view the Async Monitor to check if the message is delivered to the device.  If the message is delivered then the device is confirmed to be online if not maybe the device is not able to reach the server,  Further checks on the device can be performed.  If all devices are not able to communicate it could also be a DNS issue or otherwise.</li> <li>View the Async Monitor and check if messages are being delivered to this device.  If a lot of READY messages are seen then the device is not downloading the messages.  Request the user to kill the application and restart it to check if connectivity is established and message flow is resumed.</li> <li>If the application has a synchronous behavior the Sync message monitor can be checked.</li> <li>All admin messages such as activation, push notification registration etc are all listed in the Sync Message Monitor as ADMIN_SERVICES messages.</li> <li>If push notifications are not working check if the push has been registered on the server by looking for the appropriate message.  If the user can be reached, request them to access the Settings screen and click on Test Push Notification.  A notification message is sent immediately for testing.  The Admin can also use the Users tab, select the user and choose the send notification option to send a message for testing.</li> <li>Retrieve the device logs and/or data for detailed analysis by placing a request either from the Users option or from the Device Monitor.  All logs and data that are retrieved from the device are displayed in the Device Logs and Data monitor.  If the device is not able to download the message, request the user to access the Settings screen and email the log to the administrator.</li> <li>For web applications the initial request received is recorded in the REST API log and can be viewed there.  These messages are then further forwarded either for Sync or Async processing and can be seen in the appropriate monitors with the respective conversation IDs.</li> <li>Sync, Async and REST API monitors also record the input and the output data. This is controlled by the App Property STORE_MESSAGE_DATA.  In production landscapes it is recommended to switch this off.  However in case of errors this can be turned on to view the data flowing. Additionally this setting can also be configured at a function level so that only specific functions can be traced.</li> <li>The Wildfly server log has a wealth of information and can be analyzed with the Conversation ID for detailed logs and exception troubleshooting.  AUDIT traces record all inbound and outbound calls.  Configure the standalone-full.xml (if you can restart the server) and set the com.unvired.ump.core and com.unvired.ump.web categories to INFO to see additional logs.  Note that com.unvired.ump.app should always be set to INFO level and controlled via the App Property.  If the server cannot be restarted, the Wildfly admin cockpit can be used to configure the logs while the system is online.</li> <li>Another issue why UAC or UDEP is slow or does not respond could be due to the slowness of the UDEP configuration database that it is connecting.  Ensure that there are enough connections in the configuration in the standalone-full.xml file.  Also use the Wildfly Admin Cockpit to monitor the number of database connections used and increase if necessary.</li> <li>Ensure that the UDEP database is fast and analyze for slow queries, slow database performance etc.</li> </ul>"},{"location":"udep/oauth/","title":"OAuth","text":""},{"location":"udep/oauth/#oauth-configuration","title":"OAuth Configuration","text":"<p>The UDEP supports connection to a number of backend systems and authentication models.  While most REST APIs support Basic Auth, API Token or a simple custom authentication model, SAAS solutions such as Salesforce, Google etc support OAuth as a secure method of authentication.  The advantage with OAuth ofcourse being that your credentials are never known to the platform and only an authentication token (and a refresh token) are saved which can be revoked anytime.</p> <p>The UDEP supports OAuth with the following systems: - Azure AD - Box - Dropbox - DocuSign - Google - Live (Microsoft) - Salesforce - ServiceNow</p> <p>What this means to you is any of your mobile or web applications that connect to these systems can take advantage of the UDEPs OAuth capability to authentication your users.</p>"},{"location":"udep/oauth/#configuration","title":"Configuration","text":"<ul> <li>Edit the Port properties and navigate to the Authentication Type parameter</li> <li>AUTHENTICATION_TYPE: Set the authentication type to OAuth V2</li> <li>OAUTH_PROVIDER: Select the system you are authenticating with</li> <li>OAUTH_SCOPE: Set the OAuth scope that you require.  To get the correct values and the access that is required please refer to the provider's documentation and copy over the Scope string</li> <li>OAUTH_CLIENT_ID: The OAuth ClientID (API Key) for this provider. Refer to the provider's documentation to create a connected app and copy over the Client ID (also called as API key)</li> <li>OAUTH_CLIENT_SECRET: The provider system will also generate a Client Secret (along with the ID above) and needs to be copied over.  Do not share this elsewhere.</li> </ul> <p>Now that the OAuth is configured, whenever the system needs to be accessed with a token, UDEP will automatically send a link for the user to authenticate from the Service provider and save the required tokens.  Tokens will also be automatically refreshed on expiry.  In case tokens are revoked, UDEP will prompt the user for authentication again.</p>"},{"location":"udep/rest-api/","title":"REST API","text":""},{"location":"udep/rest-api/#rest-api","title":"REST API","text":"<p>The UDEP Platform REST API can be used to:</p> <ul> <li>User &amp; Groups Management</li> <li>Application &amp; Library Management</li> <li>Session Management</li> <li>Messages &amp; Attachments</li> <li>Status</li> </ul> <p>Note</p> <p>A function that is defined in a \"Process Agent\" and enabled for Remote Execution can be executed via the REST API.</p> <p>The REST API documentation is available online: UMP v5 REST API Swagger IDE</p> <p>The above definitions can be imported into tools like Postman and other online REST API tools to test.</p> <p>You can also get a quick start in developing apps by heading to the Unvired GitHub Project for sample programs and more.</p>"},{"location":"udep/saml/","title":"SAML SSO","text":""},{"location":"udep/saml/#saml-sso-configuration","title":"SAML SSO Configuration","text":"<p>Unvired applications support login via SAML for single sign on with any supported Identity Providers such as Microsoft Active Directory. UDEP supports both SP initiated SSO and IDP initiated SSO.</p> <p>The required configuration steps are explained in detail,</p>"},{"location":"udep/saml/#microsoft-active-directory-federation-services-configuration","title":"Microsoft Active Directory Federation Services Configuration","text":"<p>At the Microsoft ADFS the configurations, first add a new Relying Party Trust.  Select the option to enter data about the Relying Party manually.</p> <ul> <li>Type in an appropriate name to display.  It is recommended to use the Unvired Application name here for easy identification.</li> <li>Select an ADFS 2.0 profile (or later)</li> <li>Skip the certificate configuration for now</li> <li>Enable support for the SAML 2.0 WebSSO protocol and set the value to the SP_ASSERTION_CONSUMER_SERVICE_URL</li> <li>Add the SP_ENTITYID URL as the relying party trust identifier</li> <li>Permit all users to access this relying party trust</li> </ul> <p>Now double click the newly added relying party trust to add additional configuration.</p> <ul> <li>Under endpoints, make sure SAML Assertion Consumer URL binding is set to POST and URL is set to the value configured for SP_ASSERTION_CONSUMER_SERVICE_URL in the SAML configuration below  </li> <li>Under endpoints, add SAML Logout URL, set binding to POST and URL to the value configured for SP_SINGLE_LOGOUT_SERVICE_URL</li> <li>Set the secure hashing algorithm to SHA1 or SHA256 based on configuration in UDEP for the property SP_SIGNATURE_FORMAT</li> <li>Under encryption and signature choose the certificate that was copied over from the UDEP and locally created (see UDEP Application Configuration for more details.</li> <li>Save</li> </ul> <p>Now edit the relying party to add Claim Rules.</p> <p>Add a Transform an Incoming Claim rule (Inbound) first.</p> <ul> <li>Set Incoming Claim Type to E-Mail Address</li> <li>Outgoing Claim Type to NameID</li> <li>Outgoing NameID format to Email</li> <li>Also select Pass Through all claim values and save</li> </ul> <p>Now add a second Send LDAP attributes as Claims rule.</p> <ul> <li>Choose the attribute store, typically Active Directory</li> <li>The following attributes - mapping need to be added:<ul> <li>E-Mail-Addresses: E-Mail Address</li> <li>Surname: Surname</li> <li>Given-Name: Given Name</li> <li>Is-Member-Of-DL: Group (if groups checking is used in UDEP)</li> <li>SAM-Account-Name: Windows account name</li> </ul> </li> </ul> <p>Configuration is now complete and can be tested.</p> <p>Pro Tip</p> <p>To troubleshoot SAML2 errors you can set the com.onelogin loglevel to DEBUG in the Wildfly standalone-full.xml file to get detailed debug logs</p>"},{"location":"udep/saml/#adfs-udep-application-configuration","title":"ADFS UDEP Application Configuration","text":"<p>The first step to enable SAML SSO is to select the required application and then configure the Application Properties.  Under Application Properties select the authentication type as SAML2.</p> <p>Note</p> <p>Unvired ID and Email login will be available when SAML is enabled.  This allows users without AD credentials or other users to continue to login when the AD system may not be available.</p> <p>Once the authentication type is set to SAML2, additional SAML configuration options are now enabled.  Click on the SAML configuration button to configure the SAML authentication for the application.</p> Sl. Property Details 1. SP_ENTITYID Read only.  This setting needs to be copied over to the ADFS system for configuration of the Relying Party Trusts. 2. SP_ASSERTION_CONSUMER_SERVICE_URL Read only.  This is the acs (consumer service) URL to be configured in the ADFS Relying Party Trust. 3. SP_SINGLE_LOGOUT_SERVICE_URL Read only.  This is the slo (single logout) URL to be configured in the ADFS Relying Party Trust. 4. SP_CERTIFICATE Set this to the value of the SP certificate generated for this SP.  In addition this certificate file can then be imported in the ADFS relying party trust for the encryption and the signature. See Certificate Configuration section below. 5. SP_KEY Set this to the value of the SP Private key generated for the SP certificate earlier.  See Certificate Configuration section below. 6. SP_NAMEID_FORMAT Select the required NameID format in the dropdown.  Recommended value: <code>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</code> 7. SP_SIGNATURE_FORMAT Select the required Signature format in the dropdown.  Recommended values: <code>http://www.w3.org/2000/09/xmldsig#rsa-sha1</code> or <code>http://www.w3.org/2001/04/xmldsig-more#rsa-sha256</code> 8. IDP_ENTITYID This is the IDP (ADFS) entity id and is similar to a URL like <code>https://&lt;adfs-server&gt;/adfs/services/trust</code> 9. IDP_SIGNON_URL This is the IDP (ADFS) sign on URL where UDEP will redirect a login request to and is similar to a URL like <code>https://&lt;adfs-server&gt;/adfs/ls</code> 10. IDP_SIGNOUT_URL This is the IDP (ADFS) sign out URL where UDEP will redirect a logout request to and is similar to a URL like <code>https://&lt;adfs-server&gt;/adfs/ls</code> 11. IDP_CERTIFICATE The IDP (ADFS) certificate for verification.  Copy over the contents of the public key from the CER file of the adfs-server 12. REDIRECT_URL_WHITELIST Comma separated list of URLs for redirection after login.  Only URLs listed here will be permitted and all other URLs will result in error 13. CHECK_GROUP Optional: Comma separated list of Groups to check against for auto provisioning <p>Pro Tip</p> <p>The first URL entered in the REDIRECT_URL_WHITELIST will be used to redirect on success or error in case a URL is not specified in the login process.  The same URL is also used to redirect in case of an IDP initiated SSO Login request.</p>"},{"location":"udep/saml/#how-to-handle-the-login-and-logout-redirects","title":"How to handle the Login and Logout redirects","text":"<p>Once the login via the IDP is completed the client will receive a redirect to the URL specified.  If no URL is specified, the first URL configured in the REDIRECT_URL_WHITELIST above will be used,</p> <ul> <li>Successful Login: action=login&amp;token=xxxxxxxxxx</li> <li>Error Login: action=login&amp;error=Message</li> <li>Logout: action=logout</li> </ul> <p>The code in the redirect can handle the action and extract the token in case of success and use the token for subsequent authentication</p>"},{"location":"udep/saml/#using-google-as-your-saml-identity-provider","title":"Using Google as your SAML Identity Provider","text":"<p>Login to Google Admin using your Google Workspace account (mail id will be your domain and not gmail.com).  Goto Apps-&gt;Web and Mobile Apps.  Click on Add App-&gt;Add Custom SAML App to create a new App.</p> <ul> <li>Enter a name for the SAML Application.  It is recommended to use the Unvired Application name here for easy identification</li> <li>Enter a description for your reference</li> <li>Upload (optional) the App Logo and tap Next</li> <li>Copy the displayed SSO URL, EntityID and Certificate.  You will use this later to configure in UDEP</li> <li>Tap Next to configure the Service Provider (UDEP / Your App)</li> <li>ACS URL - Set it to the SP_ASSERTION_CONSUMER_SERVICE_URL from the UDEP SAML configuration above (copy/paste from UDEP)</li> <li>Entity ID - Add the SP_ENTITYID URL as the relying party trust identifier from the UDEP SAML configuration above (copy/paste from UDEP)</li> <li>Start URL - Leave blank</li> <li>NameID - Select Basic Information and Primary Email</li> <li>NameID Format - Select Email</li> <li>On tapping Next, you will now be prompted for Attribute mapping.  You will need to add three attributes.<ul> <li>Attribute 1: Choose Primary Email and set App atribute to \"emailaddress\"</li> <li>Attribute 2: First name and set App atribute to \"givenname\"</li> <li>Attribute 3: Choose Last name and set App atribute to \"surname\"</li> </ul> </li> <li>Save</li> <li>The newly created SAML App is now displayed.  Click on User Access and either switch the App ON for everyone or use Organizations or select users to provide access</li> </ul>"},{"location":"udep/saml/#google-udep-application-configuration","title":"Google UDEP Application Configuration","text":"<p>Configure UDEP according to the UDEP ADFS Configuration above.  However the following values will need to be set from the values copied from Google</p> <ul> <li>IDP_ENTITYID - Paste the value you copied over from Google </li> <li>IDP_SIGNON_URL - Paste the value you copied over from Google </li> <li>IDP_SIGNOUT_URL - Set to the Signon URL itself</li> <li>IDP_CERTIFICATE - Paste the certificate you copied over from Google </li> </ul>"},{"location":"udep/saml/#saml-service-provider-certification-configuration","title":"SAML Service Provider Certification Configuration","text":"<p>In the SAML Setup, UDEP is the Service Provider (SP).  The SP will have an X509 Certificate that is provided to the IDP (Microsoft ADFS for e.g.) to validate if the request is originating from the trusted system.</p> <p>To configure the UDEP as a SAML SP and provide a certificate, follow the below steps:</p> <ol> <li>Generate a certificate/private key pair using openssl and the required algorithm (DSA/RSA).  An online creation tool is available on the onelogin site (this is just an reference url,  use at your discretion and risk)  </li> <li>Once the files are generated, open the certificate in an editor and copy/paste its contents into the SP_CERTIFICATE configuration property (Application SAML Configuration)  </li> <li>Similarly, open the private key in an editor and copy/paste its contents into the SP_KEY configuration property (Application SAML Configuration)  </li> <li>Also the SP_CERTIFICATE (X509 certificate) needs to be copied over and set in the IDP configuraiton so that requests can be verified by the IDP</li> </ol>"}]}